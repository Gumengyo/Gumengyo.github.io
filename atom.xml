<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Gumeng’s blog</title>
  
  
  <link href="https://blog.jishuqin.cn/atom.xml" rel="self"/>
  
  <link href="https://blog.jishuqin.cn/"/>
  <updated>2024-07-07T10:17:01.661Z</updated>
  <id>https://blog.jishuqin.cn/</id>
  
  <author>
    <name>顾梦</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>程序员做饭</title>
    <link href="https://blog.jishuqin.cn/posts/41888/"/>
    <id>https://blog.jishuqin.cn/posts/41888/</id>
    <published>2024-07-07T09:44:15.130Z</published>
    <updated>2024-07-07T10:17:01.661Z</updated>
    
    <content type="html"><![CDATA[<h1>程序员做饭</h1>    <div id="aplayer-oJvDzdls" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2158973221" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="true" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"    ></div><h2 id="1-前言">1. 前言</h2><p>因为点外卖又贵又不好吃，所以上周买了电磁炉，平底锅等，开始了周末做饭的日子啦，一个人也要按时吃饭~</p><p>推荐程序做饭指南：<a href="https://cook.aiursoft.cn/">https://cook.aiursoft.cn/</a> ，周末做了里面的两道菜 干煸仔鸡 和 可乐鸡翅。</p><h2 id="2-做饭">2. 做饭</h2><p>做饭感觉就是准备工作比较麻烦哈哈，煮起来是一下子就好了</p><p><img src="https://cdn.gumengyo.top/Qexo/24/7/5913eb5f5f90c184a34d541192b10caa.jpg" srcset="/img/loading.gif" lazyload alt=""></p><p><img src="https://cdn.gumengyo.top/Qexo/24/7/e1b41166fbb1b6bdd68c9823216b4d17.jpg" srcset="/img/loading.gif" lazyload alt=""></p><h2 id="3-干饭">3. 干饭</h2><p>做完后是这样子，看着还是很香的，还有晚上煮的面条，面条煮起来就是简单快速哈哈~</p><p><img src="https://cdn.gumengyo.top/Qexo/24/7/574a5f442c741261d39245522e250b9d.jpg" srcset="/img/loading.gif" lazyload alt="干煸仔鸡"></p><p><img src="https://cdn.gumengyo.top/Qexo/24/7/9b4296a1c536ec39a0a5968341d1f53c.jpg" srcset="/img/loading.gif" lazyload alt="可乐鸡翅和耗油生菜"></p><p><img src="https://cdn.gumengyo.top/Qexo/24/7/70f25d0e67bb1097f5baa81ec6ff4b0d.jpg" srcset="/img/loading.gif" lazyload alt="简易汤面"></p><p>做完就是嘎嘎炫了，自己做的就是香，直接光盘，做饭干饭都很快乐，痛苦的就是得洗碗啦。</p><p>说到这 现在就去洗碗了 中午的还没洗呢~ 🥲</p><p><img src="https://cdn.gumengyo.top/Qexo/24/7/12195baaa142ff3763d6fcfa7369d936.jpg" srcset="/img/loading.gif" lazyload alt="干饭"></p><p>END</p>]]></content>
    
    
    <summary type="html">这篇文章主要介绍了一位程序员购买电磁炉和平底锅后开始自己做饭的经历和感受。作者认为外卖贵且不好吃，因此决定自己动手做饭，尤其是在周末。文章中推荐了一个做饭指南链接，分享了作者周末尝试的两道菜：干煸仔鸡和可乐鸡翅，以及晚上煮的面条。图文并茂地展示了做饭的过程和最终成果，包括美味的菜肴和简易的汤面。最后，作者提到了做饭的乐趣，但也意识到了洗碗的繁琐工作。</summary>
    
    
    
    <category term="做饭" scheme="https://blog.jishuqin.cn/categories/%E5%81%9A%E9%A5%AD/"/>
    
    
    <category term="日常" scheme="https://blog.jishuqin.cn/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>Kafka Stream 基本使用</title>
    <link href="https://blog.jishuqin.cn/posts/23156/"/>
    <id>https://blog.jishuqin.cn/posts/23156/</id>
    <published>2024-05-29T08:36:10.397Z</published>
    <updated>2024-06-28T11:36:15.541Z</updated>
    
    <content type="html"><![CDATA[<h1>Kafka Stream 基本使用</h1><blockquote><p><a href="https://kafka.apache.org/37/documentation/streams/">Apache Kafka Streams</a> 是一款强大的实时流处理库，为构建实时数据处理应用提供了灵活且高性能的解决方案。</p><p>Kafka Streams 是 Apache Kafka 生态系统中的一部分，它不仅简化了流处理应用的构建，还提供了强大的功能，如事件时间处理、状态管理、交互式查询等。其核心理念是将流处理与事件日志结合，使应用程序能够实时处理数据流。</p></blockquote><h2 id="1-前言">1. 前言</h2><p>由于公司需开发数据清洗服务，而且需要实时性高的数据处理，结合线上数据是输出到kafka，故采用 Kafka Streams 来作为数据清洗服务开发，本编结合一个demo，讲述 Kafka Streams 的基本使用。</p><p>Kafka Streams的特点：</p><ul><li>设计为<strong>一个简单而轻量级的客户端库</strong>，可以很容易地嵌入到任何 Java 应用程序中，并与用户为其流应用程序提供的任何现有打包、部署和操作工具集成。</li></ul><ul><li><strong>除了 Apache Kafka 本身作为内部消息传递层之外，对系统没有外部依赖</strong>关系;值得注意的是，它使用 Kafka 的分区模型来水平扩展处理，同时保持强大的排序保证。</li><li>支持容<strong>错本地状态</strong>，从而实现非常快速高效的有状态操作，如窗口联接和聚合。</li><li>支持 <strong>exact-once</strong> 处理语义，以保证每条记录将只处理一次，即使 Streams 客户端或 Kafka 代理在处理过程中出现故障也是如此。</li><li>采用<strong>一次一条记录的处理</strong>来实现毫秒级处理延迟，并支持<strong>基于事件时间的窗口化操作</strong>，以及记录的无序到达。</li><li>提供必要的流处理基元，以及<strong>高级流 DSL</strong> 和<strong>低级处理器 API</strong>。</li></ul><h2 id="2-核心概念">2. 核心概念</h2><ol><li><strong>Stream</strong>: 一个无限的、有序的、可重放的、并且可失败的数据记录序列。在Kafka中，一个流可以看作是一个或多个Kafka主题的消息记录。</li><li><strong>Stream Processor</strong>: 流处理器是对流数据进行处理的逻辑单元。它可以是一个简单的消息转换（例如，增加数据的时间戳），也可以是一个复杂的，如聚合或连接多个流。</li><li><strong>Topologies</strong>: 流处理拓扑是构成流处理程序的逻辑流程。一个拓扑是由多个处理器节点（处理器和转换器）和源节点（用于读取流数据）和汇节点（用于输出处理后的数据）组成的。</li><li><strong>KStream</strong>: 主要代表一种记录流，其中每个数据记录代表一个独立的数据实体。</li><li><strong>KTable</strong>: 表示一个更新流，每个数据记录表示一个表中的行。在更新流中，具有相同键的数据记录会覆盖先前的记录，类似于传统数据库的更新操作。</li><li><strong>Global KTable</strong>: 与KTable类似，但在所有应用程序实例中都全局可用，并且是只读的。</li><li><strong>State Stores</strong>: 本地存储，用于存储中间处理状态。状态存储可以是持久化的也可以是非持久化的。它们使得流处理器可以提供有状态的操作。</li><li><strong>Windowing</strong>: 用于将无限的数据流分成有限的块进行处理。窗口可以是时间驱动的（如固定时间窗口、滑动时间窗口）或基于数据记录数的。</li><li><strong>Processor API</strong>: 一个低级别的，允许开发人员定义和连接自定义处理器的API。使用该API，开发人员可以控制数据的流动和事件处理的精细细节。</li><li><strong>DSL (Domain Specific Language)</strong>: 高级流DSL是一个构建流处理拓扑的表达式式的API。它提供了一套简单的操作符用于过滤、映射、聚合等操作。</li></ol><p>详细介绍请查看官方文档：<a href="https://kafka.apache.org/37/documentation/streams/core-concepts">https://kafka.apache.org/37/documentation/streams/core-concepts</a></p><h2 id="3-基本用法">3. 基本用法</h2><blockquote><p>本例结合官方文档中的示例，输入文本计算单词，用于处理<strong>无限的数据流</strong>，统计出单词数量输出。</p><p>Demo 仓库地址：<a href="https://github.com/Gumengyo/kafka-stream-demo">https://github.com/Gumengyo/kafka-stream-demo</a></p></blockquote><p><img src="https://cdn.gumengyo.top/Qexo/24/5/46ee198abe46df4142f01939892a27ae.png" srcset="/img/loading.gif" lazyload alt=""></p><p><strong>引入依赖：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.kafka<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>kafka-streams<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.kafka<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-kafka<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.projectlombok<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>lombok<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">optional</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">optional</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>创建Topic：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">./kafka-topics.sh --create --bootstrap-server localhost:9092 --topic streams-plaintext-input --replication-factor 1 --partitions 1<br><br>./kafka-topics.sh --create --bootstrap-server localhost:9092 --topic streams-wordcount-output --replication-factor 1 --partitions 1<br></code></pre></td></tr></table></figure><h3 id="3-1-结合Spring框架构建Kafka-Streams">3.1 结合Spring框架构建Kafka Streams</h3><ol><li>配置文件</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">9991</span><br><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">application:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">kafka-demo</span><br>  <span class="hljs-attr">kafka:</span><br>    <span class="hljs-attr">bootstrap-servers:</span> <span class="hljs-string">localhost:9092</span><br>    <span class="hljs-attr">producer:</span><br>      <span class="hljs-attr">retries:</span> <span class="hljs-number">10</span><br>      <span class="hljs-attr">key-serializer:</span> <span class="hljs-string">org.apache.kafka.common.serialization.StringSerializer</span><br>      <span class="hljs-attr">value-serializer:</span> <span class="hljs-string">org.apache.kafka.common.serialization.StringSerializer</span><br>      <span class="hljs-attr">compression-type:</span> <span class="hljs-string">lz4</span><br>    <span class="hljs-attr">consumer:</span><br>      <span class="hljs-attr">group-id:</span> <span class="hljs-string">$&#123;spring.application.name&#125;-test</span><br>      <span class="hljs-attr">key-deserializer:</span> <span class="hljs-string">org.apache.kafka.common.serialization.StringDeserializer</span><br>      <span class="hljs-attr">value-deserializer:</span> <span class="hljs-string">org.apache.kafka.common.serialization.StringDeserializer</span><br><span class="hljs-comment"># kafkaStream新增以下配置</span><br><span class="hljs-attr">kafka:</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">localhost:9092</span><br>  <span class="hljs-attr">group:</span> <span class="hljs-string">$&#123;spring.application.name&#125;</span><br><br></code></pre></td></tr></table></figure><ol start="2"><li>配置 Kafka Streams</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Setter</span><br><span class="hljs-meta">@Getter</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@EnableKafkaStreams</span><br><span class="hljs-meta">@ConfigurationProperties(prefix=&quot;kafka&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">KafkaStreamConfig</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">MAX_MESSAGE_SIZE</span> <span class="hljs-operator">=</span> <span class="hljs-number">16</span>* <span class="hljs-number">1024</span> * <span class="hljs-number">1024</span>;<br>    <span class="hljs-keyword">private</span> String hosts;<br>    <span class="hljs-keyword">private</span> String group;<br>    <span class="hljs-meta">@Bean(name = KafkaStreamsDefaultConfiguration.DEFAULT_STREAMS_CONFIG_BEAN_NAME)</span><br>    <span class="hljs-keyword">public</span> KafkaStreamsConfiguration <span class="hljs-title function_">defaultKafkaStreamsConfig</span><span class="hljs-params">()</span> &#123;<br>        Map&lt;String, Object&gt; props = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        props.put(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, hosts);<br>        props.put(StreamsConfig.APPLICATION_ID_CONFIG, <span class="hljs-built_in">this</span>.getGroup()+<span class="hljs-string">&quot;_stream_aid&quot;</span>);<br>        props.put(StreamsConfig.CLIENT_ID_CONFIG, <span class="hljs-built_in">this</span>.getGroup()+<span class="hljs-string">&quot;_stream_cid&quot;</span>);<br>        props.put(StreamsConfig.RETRIES_CONFIG, <span class="hljs-number">10</span>);<br>        props.put(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG, Serdes.String().getClass());<br>        props.put(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.String().getClass());<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">KafkaStreamsConfiguration</span>(props);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><ol start="3"><li>常量</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">KafkaConstants</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">BOOTSTRAP_SERVERS</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;localhost:9092&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">INPUT_TOPIC</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;streams-plaintext-input&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">OUTPUT_TOPIC</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;streams-wordcount-output&quot;</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><ol start="4"><li>创建 KStream</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">KafkaStreamHelloListener</span> &#123;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> KStream&lt;String,String&gt; <span class="hljs-title function_">kStream</span><span class="hljs-params">(StreamsBuilder streamsBuilder)</span>&#123;<br>        <span class="hljs-comment">//创建kstream对象，同时指定从那个topic中接收消息</span><br>        KStream&lt;String, String&gt; stream = streamsBuilder.stream(KafkaConstants.INPUT_TOPIC);<br>        stream.flatMapValues(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ValueMapper</span>&lt;String, Iterable&lt;String&gt;&gt;() &#123;<br>            <span class="hljs-meta">@Override</span><br>            <span class="hljs-keyword">public</span> Iterable&lt;String&gt; <span class="hljs-title function_">apply</span><span class="hljs-params">(String value)</span> &#123;<br>                <span class="hljs-keyword">return</span> Arrays.asList(value.split(<span class="hljs-string">&quot; &quot;</span>));<br>            &#125;<br>        &#125;)<br>                <span class="hljs-comment">//根据value进行聚合分组</span><br>                .groupBy((key,value)-&gt;value)<br>                <span class="hljs-comment">//聚合计算时间间隔</span><br>                .windowedBy(TimeWindows.of(Duration.ofSeconds(<span class="hljs-number">1</span>)))<br>                <span class="hljs-comment">//求单词的个数</span><br>                .count()<br>                .toStream()<br>                <span class="hljs-comment">//处理后的结果转换为string字符串</span><br>                .map((key,value)-&gt;&#123;<br>                    System.out.println(<span class="hljs-string">&quot;key:&quot;</span>+key+<span class="hljs-string">&quot;,value:&quot;</span>+value);<br>                    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">KeyValue</span>&lt;&gt;(key.key().toString(),value.toString());<br>                &#125;)<br>                <span class="hljs-comment">//发送消息</span><br>                .to(KafkaConstants.OUTPUT_TOPIC);<br>        <span class="hljs-keyword">return</span> stream;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-2-自定义配置构建-Kafka-Streams">3.2 自定义配置构建 Kafka Streams</h3><p>将Demo中 <code>KafkaStreamConfig.java</code> 和 <code>KafkaStreamHelloListener.java</code> 注释掉，</p><p>在 SpringBootTest 添加下面代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootTest</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">KafkaStreamDemoApplicationTests</span> &#123;<br><br>    <span class="hljs-meta">@Value(&quot;$&#123;kafka.hosts&#125;&quot;)</span><br>    <span class="hljs-keyword">private</span> String hosts;<br>    <span class="hljs-meta">@Value(&quot;$&#123;kafka.group&#125;&quot;)</span><br>    <span class="hljs-keyword">private</span> String group;<br><br>    <span class="hljs-comment">// 手动构建KStream</span><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">testCreateKStream</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> InterruptedException &#123;<br>        <span class="hljs-type">Properties</span> <span class="hljs-variable">props</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Properties</span>();<br>        props.put(StreamsConfig.APPLICATION_ID_CONFIG, <span class="hljs-built_in">this</span>.group + <span class="hljs-string">&quot;_stream_aid&quot;</span>);<br>        props.put(StreamsConfig.CLIENT_ID_CONFIG, <span class="hljs-built_in">this</span>.group + <span class="hljs-string">&quot;_stream_cid&quot;</span>);<br>        props.put(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, hosts);<br>        props.put(StreamsConfig.RETRIES_CONFIG, <span class="hljs-number">10</span>);<br>        props.put(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG, Serdes.String().getClass());<br>        props.put(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.String().getClass());<br>        props.put(StreamsConfig.NUM_STREAM_THREADS_CONFIG, <span class="hljs-number">2</span>); <span class="hljs-comment">// 多线程处理</span><br><br>        <span class="hljs-comment">// 创建StreamsBuilder对象</span><br>        <span class="hljs-type">StreamsBuilder</span> <span class="hljs-variable">streamsBuilder</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StreamsBuilder</span>();<br>        KStream&lt;String, String&gt; stream = streamsBuilder.stream(KafkaConstants.INPUT_TOPIC);<br>        <span class="hljs-comment">// 创建KStream对象</span><br>        stream.flatMapValues((ValueMapper&lt;String, Iterable&lt;String&gt;&gt;) value -&gt; Arrays.asList(value.split(<span class="hljs-string">&quot; &quot;</span>)))<br>                <span class="hljs-comment">//根据value进行聚合分组</span><br>                .groupBy((key,value)-&gt;value)<br>                <span class="hljs-comment">//聚合计算时间间隔</span><br>                .windowedBy(TimeWindows.of(Duration.ofSeconds(<span class="hljs-number">1</span>)))<br>                <span class="hljs-comment">//求单词的个数</span><br>                .count()<br>                .toStream()<br>                <span class="hljs-comment">//处理后的结果转换为string字符串</span><br>                .map((key,value)-&gt;&#123;<br>                    System.out.println(<span class="hljs-string">&quot;key:&quot;</span>+key+<span class="hljs-string">&quot;,value:&quot;</span>+value);<br>                    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">KeyValue</span>&lt;&gt;(key.key().toString(),value.toString());<br>                &#125;)<br>                <span class="hljs-comment">//发送消息</span><br>                .to(KafkaConstants.OUTPUT_TOPIC);<br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">CountDownLatch</span>(<span class="hljs-number">1</span>).await();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="3-3-测试">3.3 测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ProducerQuickStart</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><br>        <span class="hljs-comment">//1. kafka的配置信息</span><br>        <span class="hljs-type">Properties</span> <span class="hljs-variable">prop</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Properties</span>();<br>        <span class="hljs-comment">//kafka的链接信息</span><br>        prop.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, KafkaConstants.BOOTSTRAP_SERVERS);<br>        <span class="hljs-comment">//配置重试次数</span><br>        prop.put(ProducerConfig.RETRIES_CONFIG, <span class="hljs-number">5</span>);<br>        <span class="hljs-comment">//数据压缩</span><br>        prop.put(ProducerConfig.COMPRESSION_TYPE_CONFIG,<span class="hljs-string">&quot;lz4&quot;</span>);<br>        <span class="hljs-comment">//ack配置  消息确认机制   默认ack=1,即只要集群首领节点收到消息，生产者就会收到一个来自服务器的成功响应</span><br><span class="hljs-comment">//        prop.put(ProducerConfig.ACKS_CONFIG,&quot;all&quot;);</span><br><br><span class="hljs-comment">//        消息key的序列化器</span><br>        prop.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, <span class="hljs-string">&quot;org.apache.kafka.common.serialization.StringSerializer&quot;</span>);<br>        <span class="hljs-comment">//消息value的序列化器</span><br>        prop.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, <span class="hljs-string">&quot;org.apache.kafka.common.serialization.StringSerializer&quot;</span>);<br><br>        <span class="hljs-comment">//2. 生产者对象</span><br>        KafkaProducer&lt;String, String&gt; producer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">KafkaProducer</span>&lt;String, String&gt;(prop);<br>        <span class="hljs-comment">//封装发送的消息</span><br>        ProducerRecord&lt;String, String&gt; producerRecord1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ProducerRecord</span>&lt;String, String&gt;(KafkaConstants.INPUT_TOPIC, <span class="hljs-string">&quot;key_001&quot;</span>, <span class="hljs-string">&quot;hello kafka&quot;</span>);<br>        ProducerRecord&lt;String, String&gt; producerRecord2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ProducerRecord</span>&lt;String, String&gt;(KafkaConstants.INPUT_TOPIC, <span class="hljs-string">&quot;key_002&quot;</span>, <span class="hljs-string">&quot;hello world&quot;</span>);<br>        <span class="hljs-comment">//3. 发送消息</span><br>        producer.send(producerRecord1);<br>        producer.send(producerRecord2);<br><br>        <span class="hljs-comment">//4. 关闭消息通道  必须关闭，否则消息发不出去</span><br>        producer.close();<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>执行上面main方法测试发送消息：</p><p><code>hello kafka</code></p><p><code>hello world</code></p><p>查看kafka 内消息：</p><p><img src="https://cdn.gumengyo.top/Qexo/24/5/ce4fa82f7d3b938ff813c331aed61fa4.png" srcset="/img/loading.gif" lazyload alt=""></p><p><img src="https://cdn.gumengyo.top/Qexo/24/5/b912bbefbc39efc7e260ed5e8b3c169e.png" srcset="/img/loading.gif" lazyload alt=""></p><p>可以看到已经正确统计单词结果，输出到<code>topic</code> 为 <code>streams-wordcount-output</code> 中</p><h2 id="参考">参考</h2><ul><li><a href="https://blog.csdn.net/zsx1713366249/article/details/132522600">https://blog.csdn.net/zsx1713366249/article/details/132522600</a></li><li><a href="https://kafka.apache.org/37/documentation/streams/quickstart">https://kafka.apache.org/37/documentation/streams/quickstart</a></li><li><a href="https://blog.csdn.net/cold___play/article/details/132351928">https://blog.csdn.net/cold___play/article/details/132351928</a></li></ul>]]></content>
    
    
    <summary type="html">Kafka Stream 基本使用  Apache Kafka Streams 是一款强大的实时流处理库，为构建实时数据处理应用提供了灵活且高性能的解决方案。 Kafka Streams 是 Apache Kafka 生态系统中的一部分，它不仅简化了流处理应用的构建，还提供了强大的功能，如事件时间处理、状态管理、交互式查询等。其核心理念是将流处理与事件日志结合，使应用程序能够实时处理数据流。  1. 前言 由于公司需开发数据清洗服务，而且需要实时性高的数据处理，结合线上数据是输出到kafka，故采用 Kafka Streams 来作为数据清洗服务开发，本编结合一个demo，讲述 Kafka S...</summary>
    
    
    
    <category term="Java" scheme="https://blog.jishuqin.cn/categories/Java/"/>
    
    
    <category term="Kafka Streams" scheme="https://blog.jishuqin.cn/tags/Kafka-Streams/"/>
    
    <category term="Kafka" scheme="https://blog.jishuqin.cn/tags/Kafka/"/>
    
  </entry>
  
  <entry>
    <title>Qexo 博客管理后台搭建</title>
    <link href="https://blog.jishuqin.cn/posts/f054a2aa/"/>
    <id>https://blog.jishuqin.cn/posts/f054a2aa/</id>
    <published>2024-01-20T09:03:00.000Z</published>
    <updated>2025-02-11T03:23:50.662Z</updated>
    
    <content type="html"><![CDATA[<h1>Qexo 博客管理后台搭建</h1><h2 id="1-前言">1. 前言</h2><p><strong>Qexo</strong> 是一个快速、强大、美观的在线 <strong>静态博客编辑器</strong>。使用 GPL3.0 <strong>开源</strong>协议。支持包括且不限于在 <strong>Vercel</strong> 等平台部署, 为您的静态博客添加<strong>动态</strong>的元素。使用<strong>Qexo</strong>可以管理Hexo友链、文章管理、站点统计、发布说说等多种功能，这篇文章是用其中一种方式部署，采用Vercel（PostgreSQL/SupaBase）的方式进行部署，想了解更多功能介绍和部署方式可以查看<a href="https://www.oplog.cn/qexo/">官方文档</a>。</p><p><strong>Qexo</strong>优势：</p><ul><li>支持多种方式部署</li><li>在线Markdown编辑界面</li><li>多种形式消息推送</li><li>友情链接 前端申请, 一键接入</li><li>图片上传、访客统计、Hexo配置编辑</li><li>开源免费、项目长期维护</li></ul><p class="note note-warning">不过使用Qexo后台的前提是 Hexo 需要搭建Github Action自动化部署<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Qexo 官方文档](https://www.oplog.cn/qexo/start/build.html#vercel-%E9%83%A8%E7%BD%B2-postgresql-vercel)">[1]</span></a></sup>，这里就不做介绍了，看着篇文章实现即可：https://cloud.tencent.com/developer/article/2277577</p><p><strong>具体的执行流程如下：</strong></p><p><img src="https://cdn.gumengyo.top//blog/img/202401202234950.png" srcset="/img/loading.gif" lazyload alt="流程图"></p><h2 id="2-部署">2. 部署</h2><p>方式一：直接点击下面这个按钮一键部署到vercel</p><p><a href="https://vercel.com/new/clone?repository-url=https://github.com/am-abudu/Qexo" target="_blank" rel="noreferrer"><img src="https://vercel.com/button" srcset="/img/loading.gif" lazyload alt="部署到 Vercel"></a></p><p>方式二：首先将<strong>Qexo</strong>的GIthub仓库fork到自己Github中，仓库地址：<a href="https://github.com/Qexo/Qexo">https://github.com/Qexo/Qexo</a></p><p><img src="https://cdn.gumengyo.top//blog/img/202401202239800.png" srcset="/img/loading.gif" lazyload alt=""></p><p><img src="https://cdn.gumengyo.top//blog/img/202401202240837.png" srcset="/img/loading.gif" lazyload alt=""></p><p>然后到 vercel 选择项目引入</p><p><img src="https://cdn.gumengyo.top//blog/img/202401202245154.png" srcset="/img/loading.gif" lazyload alt=""></p><p class="note note-info">首次部署会报错, 请无视并进行接下来的步骤~</p><h3 id="申请-Vercel-数据库">申请 Vercel 数据库</h3><p><a href="https://supabase.com/">注册 SupaBase 账号</a> 创建免费 SupaBase 数据库, 区域一定要选择 <strong>N. Virginia</strong>在项目设置页面获取数据库连接信息, 密码即为你所设置的值<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Qexo 官方文档](https://www.oplog.cn/qexo/start/build.html#vercel-%E9%83%A8%E7%BD%B2-postgresql-vercel)">[1]</span></a></sup>。</p><ol><li>创建项目</li></ol><p><img src="https://cdn.gumengyo.top//blog/img/202401202333335.png" srcset="/img/loading.gif" lazyload alt=""></p><ol start="2"><li>设置项目名字、密码和选择区域</li></ol><p><img src="https://cdn.gumengyo.top//blog/img/202401202334500.png" srcset="/img/loading.gif" lazyload alt=""></p><p><img src="https://cdn.gumengyo.top//blog/img/202401202338573.png" srcset="/img/loading.gif" lazyload alt=""></p><p>设置 vercel 的环境变量，将你设置的密码和上面的 URL 分别填到 PG_PASS 和 PG_HOST 其他保持不变即可。</p><table><thead><tr><th>名称</th><th>意义</th><th>示例</th></tr></thead><tbody><tr><td>PG_HOST</td><td>PostgreSQL 数据库连接地址</td><td><a href="http://db.xxx.supabase.co">db.xxx.supabase.co</a></td></tr><tr><td>PG_PORT</td><td>PostgreSQL 数据库通信端口 默认应填写 5432</td><td>5432</td></tr><tr><td>PG_USER</td><td>PostgreSQL 数据库用户名</td><td>postgres</td></tr><tr><td>PG_DB</td><td>PostgreSQL 数据库名</td><td>postgres</td></tr><tr><td>PG_PASS</td><td>PostgreSQL 数据库密码</td><td>password</td></tr></tbody></table><p><img src="https://cdn.gumengyo.top//blog/img/202401202340634.png" srcset="/img/loading.gif" lazyload alt=""></p><p><img src="https://cdn.gumengyo.top//blog/img/202401202342871.png" srcset="/img/loading.gif" lazyload alt=""></p><p>3.找到 vercel 项目在 Deployments 点击 Redeploy 开始部署, 若没有 Error 信息即可，看到下面这个样子就是部署成功了。</p><p><img src="https://cdn.gumengyo.top//blog/img/202401202343342.png" srcset="/img/loading.gif" lazyload alt=""></p><h3 id="本地-docker-compose-部署">本地 docker-compose 部署</h3><p>由于<strong>supabase</strong>数据库的认证方式更改了，所以没办法用vercel的方式，我将 <strong>Qexo</strong> 部署到docker并使用自己服务器上的 <code>Mysql</code>。</p><p>docker-compose.yml：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3.8&#x27;</span><br><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">qexo:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">abudulin/qexo:latest</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">qexo</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;8000:8000&quot;</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">WORKERS:</span> <span class="hljs-number">4</span><br>      <span class="hljs-attr">THREADS:</span> <span class="hljs-number">4</span><br>      <span class="hljs-attr">TIMEOUT:</span> <span class="hljs-number">600</span><br>      <span class="hljs-attr">MYSQL_HOST:</span>  <span class="hljs-comment"># mysql 地址</span><br>      <span class="hljs-attr">MYSQL_PORT:</span> <span class="hljs-number">3306</span><br>      <span class="hljs-attr">MYSQL_USER:</span>  <span class="hljs-comment"># mysql 用户名</span><br>      <span class="hljs-attr">MYSQL_PASSWORD:</span>  <span class="hljs-comment"># mysql密码</span><br>      <span class="hljs-attr">MYSQL_NAME:</span> <span class="hljs-string">qexo</span> <span class="hljs-comment"># 数据库名</span><br></code></pre></td></tr></table></figure><p>运行命令构建启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose up -d<br></code></pre></td></tr></table></figure><ul><li><code>docker-compose up -d</code> 会自动检测到镜像更新，并重新创建容器。</li><li><code>-d</code> 参数表示在后台运行容器。</li></ul><p>后续更新：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose pull<br></code></pre></td></tr></table></figure><p>这将尝试拉取 <code>abudulin/qexo:latest</code> 镜像的最新版本。</p><p>重新启动服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose up -d<br></code></pre></td></tr></table></figure><h2 id="3-配置">3.配置</h2><ol><li>点击域名跳转到页面，需要开魔法不然访问不了，或者绑定成自己的域名访问如下操作：</li></ol><ul><li>找到 vercel 项目 Settings -&gt; Domains 配置自己的域名</li><li>然后将自己的域名解析到vercel 这的配置成 <code>cname-china.vercel-dns.com</code></li></ul><p><img src="https://cdn.gumengyo.top//blog/img/202401202347767.png" srcset="/img/loading.gif" lazyload alt=""></p><ol start="2"><li>然后访问自己的域名到管理界面就行啦，初次访问要设置管理账户和密码。</li></ol><p><img src="https://cdn.gumengyo.top//blog/img/202401202354425.png" srcset="/img/loading.gif" lazyload alt=""></p><ol start="3"><li>博客配置</li></ol><ul><li>Github 密钥：于 <a href="https://github.com/settings/tokens">Github 设置</a> 生成的 Token (建议使用 Classical) 需要 Repo &amp; Workflow 下的权限 <em>不建议给出所有权限</em></li><li>Github 仓：库您 博客源码 <strong>自动化部署</strong>所在的仓库</li><li>项目分支：您 博客源码 自动化部署所在仓库的分支</li><li>博客路径：您 博客源码 自动化部署所在仓库的路径 若为根目录请留空</li></ul><p><img src="https://cdn.gumengyo.top//blog/img/202401202358582.png" srcset="/img/loading.gif" lazyload alt=""></p><ol start="4"><li>Vercel 配置</li></ol><ul><li>VERCEL_TOKEN：您的 Vercel 账户密钥 在 <a href="https://vercel.com/account/tokens">此处</a> 生成</li><li>PROJECT_ID：</li></ul><p><img src="https://cdn.gumengyo.top//blog/img/202401202359461.png" srcset="/img/loading.gif" lazyload alt=""></p><p><img src="https://cdn.gumengyo.top//blog/img/202401210000343.png" srcset="/img/loading.gif" lazyload alt=""></p><p>全部设置完毕成功后会提示如下页面，点击登录控制台</p><p><img src="https://cdn.gumengyo.top//blog/img/202401210002884.png" srcset="/img/loading.gif" lazyload alt=""></p><p>设置消息推送、友链管理、说说等配置就参考官方文档吧~</p><h2 id="4-效果展示">4.效果展示</h2><p><img src="https://cdn.gumengyo.top//blog/img/202401210005189.png" srcset="/img/loading.gif" lazyload alt=""></p><p><img src="https://cdn.gumengyo.top//blog/img/202401210011627.png" srcset="/img/loading.gif" lazyload alt=""></p><p><img src="https://cdn.gumengyo.top//blog/img/202401210011546.png" srcset="/img/loading.gif" lazyload alt=""></p><h2 id="参考">参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://www.oplog.cn/qexo/start/build.html#vercel-%E9%83%A8%E7%BD%B2-postgresql-vercel">Qexo 官方文档</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://cloud.tencent.com/developer/article/2277577">Fantasy的Hexo博客利用GitHub Action自动化部署</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <summary type="html">Qexo 博客管理后台搭建 1. 前言 Qexo 是一个快速、强大、美观的在线 静态博客编辑器。使用 GPL3.0 开源协议。支持包括且不限于在 Vercel 等平台部署, 为您的静态博客添加动态的元素。使用Qexo可以管理Hexo友链、文章管理、站点统计、发布说说等多种功能，这篇文章是用其中一种方式部署，采用Vercel（PostgreSQL/SupaBase）的方式进行部署，想了解更多功能介绍和部署方式可以查看官方文档。 Qexo优势：  支持多种方式部署 在线Markdown编辑界面 多种形式消息推送 友情链接 前端申请, 一键接入 图片上传、访客统计、Hexo配置编辑 开源免费、项目长...</summary>
    
    
    
    
    <category term="Hexo" scheme="https://blog.jishuqin.cn/tags/Hexo/"/>
    
    <category term="Vercel" scheme="https://blog.jishuqin.cn/tags/Vercel/"/>
    
  </entry>
  
  <entry>
    <title>MySQL-高级</title>
    <link href="https://blog.jishuqin.cn/posts/0e1f2a3b/"/>
    <id>https://blog.jishuqin.cn/posts/0e1f2a3b/</id>
    <published>2023-07-09T16:47:40.000Z</published>
    <updated>2025-08-27T03:20:31.435Z</updated>
    
    <content type="html"><![CDATA[<h1>MySQL-高级</h1><p class="note note-success">  此文是我学习MySQL时笔记，教程链接：<a href="https://www.bilibili.com/video/BV1Kr4y1i7ru" target="_blank">https://www.bilibili.com/video/BV1Kr4y1i7ru</a></p><h2 id="一、存储引擎">一、存储引擎</h2><h3 id="1-MySQL体系结构">1.MySQL体系结构</h3><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230630192648123.png" srcset="/img/loading.gif" lazyload alt=""></p><ul><li><p>连接层</p><p>最上层是一些客户端和链接服务，主要完成一些类似于连接处理、授权认证、及相关的安全方案。服务器也会为安全接入的每个客户端验证它所具有的操作权限。</p></li><li><p>服务层</p><p>第二层架构主要完成大多数的核心服务功能，如SQL接口，并完成缓存的查询，SQL的分析和优化，部分内置函数的执行。所有跨存储引擎的功能也在这一层实现，如过程、函数等。</p></li><li><p>引擎层</p></li></ul><p>存储引擎真正的负责了MySQL的存储和提取，服务器通过API和存储引擎进行通信。不同的存储引擎具有不同的功能，这样我们可以根据自己的需要，来选取合适的存储引擎。</p><ul><li>存储层</li></ul><p>主要是将数据存储在文件系统之上，并完成与存储引擎的交互。</p><h3 id="2-存储引擎简介">2.存储引擎简介</h3><p>存储引擎就是存储数据、建立索引、更新/查询数据等技术的实现方式。存储引擎是基于表的，而不是基于库的，所以存储引擎也可被称为表类型。</p><ol><li><p>在创建表时，指定存储引擎</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE TABLE 表名&#123;<br>字段1 字段1类型 [COMMENT 字段1注释],<br>......<br>字段n 字段n类型 [COMMENT 字段n注释]<br>&#125;ENGINE=INNODB [COMMENT 表注释]；<br></code></pre></td></tr></table></figure></li><li><p>查看当前数据库支持的存储引擎</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SHOW ENGINES;<br></code></pre></td></tr></table></figure></li></ol><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230630193726848.png" srcset="/img/loading.gif" lazyload alt=""></p><h3 id="3-存储引擎特点">3.存储引擎特点</h3><h4 id="InnoDB">InnoDB</h4><ul><li><p>介绍：InnoDB是一种兼顾高可靠性和高性能的通用存储引擎，在MySQL 5.5之后，InnoDB 是默认的 MySQL 存储引擎。</p></li><li><p>特点：</p><ol><li>DML操作遵循ACID模型，支持<strong>事务</strong>；</li><li><strong>行级锁</strong>，提高并发访问性能：</li><li>支持<strong>外键</strong> FOREIGN KEY 约束，保证数据的完整性和正确性；</li></ol></li><li><p>文件</p><p>xxx.ibd：xxx代表的是表名，innoDB 引擎的每张表都会对应这样一个表空间文件，存储该表的表结构（frm、sdi）、数据和索引。<br>参数：innodb_file_per_table</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230630200019249.png" srcset="/img/loading.gif" lazyload alt=""></p></li></ul><h4 id="MyISAM">MyISAM</h4><ul><li><p>介绍：MyISAM是MySQL早期的默认存储引擎。</p></li><li><p>特点：</p><ol><li>不支持事务，不支持外键</li><li>支持表锁，不支持行锁</li><li>访问速度快</li></ol></li><li><p>文件：</p><p>xxx.sdi：存储表结构信息<br>xxx.MYD：存储数据<br>xxx.MYI：存储索引</p></li></ul><h4 id="Memory">Memory</h4><ul><li>介绍：Memory 引擎的表数据时存储在内存中的，由于受到硬件问题、或断电问题的影响，只能将这些表作为临时表或缓存使用。</li><li>特点：<ol><li>内存存放</li><li>hash 索引（默认）</li></ol></li><li>文件：xxx.sdi：存储表结构信息</li></ul><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230630200854814-16883049088341.png" srcset="/img/loading.gif" lazyload alt=""></p><p><strong>面试题：InnoDB与MyISAM的区别？</strong></p><p>InnoDB支持事务安全、行级锁和外键，MyISAM不支持。</p><h3 id="4-存储引擎选择">4.存储引擎选择</h3><p>在选择存储引擎时，应该根据应用系统的特点选择合适的存储引擎。对于复杂的应用系统，还可以根据实际情况选择多种存储引擎进行组合。</p><ul><li><u>InnoDB</u>：是Mysql的默认存储引擎，支持事务、外键。如果应用<u>对事务的完整性有比较高的要求</u>，在并发条件下<u>要求数据的一致性</u>，数据操作除了插入和查询之外，还包含很多的更新、删除操作，那么InnoDB存储引擎是比较合适的选择。</li><li>MyISAM：如果应用是以<u>读操作和插入操作为主</u>，只有<u>很少的更新和删除操作</u>，并且对事务的完整性、并发性要求不是很高，那么选择这个存储引擎是非常合适的。</li><li>MEMORY：将所有数据保存在内存中，<u>访问速度快</u>，通常用于<u>临时表及缓存</u>。MEMORY的缺陷就是对表的大小有限制，太大的表无法缓存在内存中，而且无法保障数据的安全性。</li></ul><h2 id="二、索引-⭐">二、索引 ⭐</h2><h3 id="1-索引概述">1.索引概述</h3><ul><li><p>介绍：索引(index)是帮助 MySQL <u>高效获取数据</u>的<u>数据结构</u>（有序）。</p></li><li><p>优缺点：</p><table><thead><tr><th>优势</th><th style="text-align:left">劣势</th></tr></thead><tbody><tr><td>提高数据检索的效率，降低数据库的 IO 成本</td><td style="text-align:left">索引列也是要占用空间的。</td></tr><tr><td>通过索引列对数据进行排序，降低数据排序的成本，降低CPU的消耗。</td><td style="text-align:left">索引大大提高了查询效率，同时却也降低更新表的速度，如对表进行INSERT、UPDATE、DELETE时，效率降低。</td></tr></tbody></table></li></ul><h3 id="2-索引结构">2.索引结构</h3><p>MySQL的索引是在存储引擎层实现的，不同的存储引擎有不同的结构，主要包含以下几种：</p><table><thead><tr><th>索引结构</th><th>描述</th></tr></thead><tbody><tr><td><strong>B+Tree 索引</strong></td><td><strong>最常见的索引类型，大部分引擎都支持B+树索引</strong></td></tr><tr><td>Hash 索引</td><td>底层数据结构是用哈希表实现的，只有精确匹配索引列的查询才有效，不支持范围查询</td></tr><tr><td>R-tree（空间索引）</td><td>空间索引是 MyISAM 引擎的一个特殊索引类型，主要用于地理空间数据类型，通常使用较少</td></tr><tr><td>Full-text（全文索引）</td><td>是一种通过建立倒排索引，快速匹配文档的方式。类似于Lucene,Solr,ES</td></tr></tbody></table><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230702215652288.png" srcset="/img/loading.gif" lazyload alt=""></p><p><strong>我们平常所说的索引，如果没有特别指明，都是指B+树结构组织的索引。</strong></p><ul><li><p>B+Tree</p><p>MySQL索引数据结构对经典的B+Tree进行了优化。在原B+Tree的基础上，增加一个指向相邻叶子节点的链表指针，就形成了带有顺序指针的B+Tree,提高区间访问的性能。</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230702223006023.png" srcset="/img/loading.gif" lazyload alt=""></p></li><li><p>Hash</p><p>哈希索引就是采用一定的hash算法，将键值换算成新的hash值，映射到对应的槽位上，然后存储在hash表中。</p><p>如果两个（或多个）键值，映射到一个相同的槽位上，他们就产生了hash冲突（也称为hash碰撞)，可以通过链表来解决。</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230702224041782.png" srcset="/img/loading.gif" lazyload alt=""></p><p>Hash索引特点：</p><ul><li>Hash 索引只能用于对等比较(=，in),不支持范围查询(between，&gt;，&lt;，…)</li><li>无法利用索引完成排操作</li><li>查询效率高，通常只需要一次检索就可以了，效率通常要高于 B+tree 索引</li></ul><p>存储引擎支持：在MySQL中，支持hash索引的是Memory引擎，而InnoDB中具有自适应hash中能，hash索引是存储引擎根据B+Tree索引在指定条件下自动构建的。</p></li></ul><p><strong>面试题：为什么InnoDB存储引擎选择使用 B+tree 索引结构？</strong></p><ul><li>相对于二叉树，层级更少，搜索效率高；</li><li>对于 B-tree，无论是叶子节点还是非叶子节点，都会保存数据，这样导致一页中存储的键值减少，指针跟着减少，要同样保存大量数据，只能增加树的高度，导致性能降低；</li><li>相对Hash索引，B+tree支持范围匹配及排序操作；</li></ul><h3 id="3-索引分类">3.索引分类</h3><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230702225311526.png" srcset="/img/loading.gif" lazyload alt=""></p><p>在InnoDB存储引擎中，根据索引的存储形式，又可以分为以下两种：</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230702225742717.png" srcset="/img/loading.gif" lazyload alt=""></p><p>聚集索引选取规则：</p><ul><li>如果存在主键，主键索引就是聚集索引。</li><li>如果不存在主键，将使用第一个唯一（UNIQUE）索引作为聚集索引。</li><li>如果表没有主键，或没有合适的唯一索引，则 InnoDB 会自动生成一个 rowid 作为隐藏的聚集索引。</li></ul><p><strong>思考：</strong></p><ol><li><p>以下 SQL 语句，哪个执行效率高？为什么？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from user where id=10;<br><br>select * from user where name=&#x27;Arm&#x27;;<br><br>备注：id为主键，name字段创建的有索引;<br></code></pre></td></tr></table></figure><p>根据id查询比根据name查询效率高，根据name查询需要扫描两个索引效率低。</p></li><li><p>InnoDB主键索引的B+tree高度为多高呢？</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230702231721965.png" srcset="/img/loading.gif" lazyload alt=""></p></li></ol><h3 id="4-索引语法">4.索引语法</h3><ul><li><p>创建索引</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE [UNIQUE|FULLTEXT] INDEX index_name ON table_name (index_col_name,...);<br></code></pre></td></tr></table></figure></li><li><p>查看索引</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SHOW INDEX FROM table_name;<br></code></pre></td></tr></table></figure></li><li><p>删除索引</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">DROP INDEX index_name ON table_name;<br></code></pre></td></tr></table></figure></li></ul><h3 id="5-SQL-性能分析">5.SQL 性能分析</h3><ul><li><p>SQL 执行频率</p><p>MySQL 客户端连接成功后，通过shoW[session|global] status命令可以提供服务器状态信息。通过如下指令，可以查看当前数据库的 INSERT、UPDATE、DELETE、SELECT 的访问频次：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SHOW GLOBAL STATUS LIKE &#x27;Com_______&#x27;;<br></code></pre></td></tr></table></figure></li><li><p>慢查询日志</p><p>慢查询日志记录了所有执行时间超过指定参数(long_query_.time,单位：秒，默认10秒)的所有SQL语句的日志。<br>MySQL 的慢查询日志默认没有开启，需要在 MySQL 的配置文件（/etc/my.cnf）中配置如下信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 开启MySQL慢日志查询开关</span><br>slow_query_log=1<br><span class="hljs-comment"># 设置慢日志的时间为2秒，SQL语句执行时间超过2秒，就会视为慢查询，记录慢查询日志</span><br>long_query_time=2<br></code></pre></td></tr></table></figure></li><li><p>profile 详情</p><p>执行一系列的业务SQL的操作，然后通过如下指令查看指令的执行耗时：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#查看每一条SQL的耗时基本情况<br>show profiles;<br><br>#查看指定query id的SQL语句各个阶段的耗时情况<br>show profile for query query_id;<br><br>#查看指定query_id的SQL语句CPU的使用情况<br>show profile cpu for query query_id;<br></code></pre></td></tr></table></figure></li><li><p>explain执行计划</p><p>EXPLAIN 执行计划各字段含义：</p><ul><li><p>id</p><p>select查询的序列号，表示查询中执行select子句或者是操作表的顺序(id相同，执行顺序从上到下；id不同，值越大，越先执行)。</p></li><li><p>select_type</p><p>表示 SELECT 的类型，常见的取值有SIMPLE(简单表，即不使用表连接或者子查询)、PRIMARY(主查询，即外层的查询)、UNION(UNION中的第二个或者后面的查询语句)、SUBQUERY(SELECT/WHERE之后包含了子查询)等</p></li><li><p><strong>type</strong></p><p>表示连接类型，性能由好到差的连接类型为 NULL、system、const、eq_ref、ref、range、index、all。</p></li><li><p><strong>possible_key</strong></p><p>显示可能应用在这张表上的索引，一个或多个。</p></li><li><p><strong>key</strong></p><p>实际使用的索引，如果为NULL,则没有使用索引。</p></li><li><p><strong>key_len</strong></p><p>表示索引中使用的字节数，该值为索引字段最大可能长度，并非实际使用长度，在不损失精确性的前提下，长度越短越好。</p></li><li><p>rows</p><p>MySQL认为必须要执行查询的行数，在innodb引擎的表中，是一个估计值，可能并不总是准确的。</p></li><li><p>filtered</p><p>表示返回结果的行数占需读取行数的百分比，filtered 的值越大越好。</p></li></ul></li></ul><h3 id="6-索引使用">6.索引使用</h3><ul><li><p>最左前缀法则</p><p>如果索引了多列（联合索引），要遵守最左前缀法测。最左前缀法则指的是查询从索引的最左列开始，并且不跳过索引中的列。<br>如果跳跃某一列，<u>索引将部分失效（后面的字段索引失效）。</u></p></li><li><p>范围查询</p><p>联合索引中，出现范围查询(&gt;，&lt;)，<u>范围查询右侧的列索引失效</u></p></li><li><p>索引列运算</p><p>不要在索引列上进行运算操作，索引将失效。</p></li><li><p>字符串</p><p>字符串类型字段使用时，不加引号，索引将失效。</p></li><li><p>模糊查询</p><p>如果仅仅是尾部模糊匹配，索引不会失效。如果是头部模糊匹配，索引失效。</p></li><li><p>or连接的条件</p><p>用or分割开的条件，如果or前的条件中的列有索引，而后面的列中没有索引，那么涉及的索引都不会被用到。</p></li><li><p>数据分布影响</p><p>如果MySQL评估使用索引比全表更慢，则不使用索引。</p></li><li><p>SQL 提示</p><p>SQL提示，是优化数据库的一个重要手段，简单来说，就是在SQL语句中加入一些人为的提示来达到优化操作的目的。</p><p>use index:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">explain select*from tb_user use index(idx_user_pro)where profession=&#x27;软件工程&#x27;；<br></code></pre></td></tr></table></figure><p>ignore index:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">explain select*from tb_user ignore index(idx_user_pro)where profession=&#x27;软件工程&#x27;；<br></code></pre></td></tr></table></figure><p>force index:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">explain select*from tb_user force index(idx_user_pro)where profession=&#x27;软件工程&#x27;；<br></code></pre></td></tr></table></figure></li><li><p>覆盖索引</p><p>尽量使用覆盖索引（查询使用了索引，并且需要返回的列，在该索引中已经全部能够找到），减少select*。</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230704235902137.png" srcset="/img/loading.gif" lazyload alt=""></p></li><li><p>前缀索引</p></li></ul><p>当字段类型为字符串（varchar,text等）时，有时候需要索引很长的字符串，这会让索引变得很大，查询时，浪费大量的磁盘IO,影响查询效率。此时可以只将字符串的一部分前缀，建立索引，这样可以大大节约索引空间，从而提高索引效率。</p><p>语法：</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">creae index idx_xxxx on table_name(column(n));<br></code></pre></td></tr></table></figure><p>前缀长度：</p><p>可以根据索引的选择性来决定，而选择性是指不重复的索引值（基数）和数据表的记录总数的比值，索引选择性越高则查询效率越高唯一索引的选择性是1，这是最好的索引选择性，性能也是最好的。</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select count(distinct email)/count(*) from tb_user;<br>select count(distinct substring(email,1,5))/count(*) from tb_user; <br></code></pre></td></tr></table></figure><ul><li><p>单列索引与联合索引</p><p>单列索引：即一个索引只包含单个列。</p><p>联合索引：即一个索引包含了多个列。</p><p>在业务场景中，如果存在多个查询条件，考虑针对于查询字段建立索引时，建议建立联合索引，而非单列索引。</p></li></ul><h3 id="7-索引设计原则">7.索引设计原则</h3><ol><li>针对于数据量较大，且查询比较频繁的表建索引。</li><li>针对于常作为查询条件(where)、排序(order by)、分组(group by)操作的字段建立索引。</li><li>尽量选择区分度高的列作为索引，尽量建立<u>唯一索引</u>，区分度越高，使用索引的效率越高。</li><li>如果是字符串类型的字段，字段的长度较长，可以针对于字段的特点，建立<u>前缀索引</u>。</li><li>尽量使用联合索引，减少单列索引，查询时，联合索引很多时候可以<u>覆盖索引</u>，节省存储空间，避免回表，提高查询效率。</li><li>要控制索引的数量，索引并不是多多益善，索引越多，维护索引结构的代价也就越大，会影响增删改的效率。</li><li>如果索引列不能存储NULL值，请在创建表时使用NOT NULL约束它。当优化器知道每列是否包含NULL值时，它可以更好地确定哪个索引最有效地用于查询。</li></ol><h2 id="三、SQL优化">三、SQL优化</h2><h3 id="1-插入数据">1.插入数据</h3><ul><li><p>insert 优化</p><ol><li><p>批量插入</p></li><li><p>手动提交事务</p></li><li><p>主键顺序插入</p></li></ol></li><li><p>大批量插入数据</p><p>如果一次性需要插入大批量数据，使用insert语句插入性能较低，此时可以使用MySQL数据库提供的load指令进行插入。操作如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#客户端连接服务端时，加上参数 --local-infile<br>mysql --local-infile -u root -p<br>#设置全局参数local_infile为1，开启从本地加载文件导入数据的开关<br>set global local_infile=1;<br>#执行load指令将准备好的数据，加载到表结构中<br>load data local infile &#x27;/root/sql1.log&#x27; into table `tb_user` fields terminated by &#x27;,&#x27; lines terminated by &#x27;\n&#x27;;<br></code></pre></td></tr></table></figure></li></ul><h3 id="2-主键优化">2.主键优化</h3><ul><li><p>数据组织方式</p><p>在InnoDB存储引擎中，表数据都是根据主键顺序组织存放的，这种存储方式的表称为<strong>索引组织表</strong>(index organized table <strong>IOT</strong>)。</p></li><li><p>页分裂</p><p>页可以为空，也可以填充一半，也可以填充100%。每个页包含了2-N行数据（如果一行数据多大，会行溢出），根据主键排列。</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230705150818074.png" srcset="/img/loading.gif" lazyload alt="主键顺序插入"></p><p>页分裂：</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230705151047951.png" srcset="/img/loading.gif" lazyload alt="主键乱序插入"></p><p>页合并：</p><p>当删除一行记录时，实际上记录并没有被物理删除，只是记录被标记(flaged)为删除并且它的空间变得允许被其他记录声明使用。</p><p>当页中删除的记录达到MERGE THRESHOLD(默认为页的50%)，InnoDB会开始寻找最靠近的页（前或后）看看是否可以将两个页合并以优化空间使用。</p><p>合并前：</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230705152251245.png" srcset="/img/loading.gif" lazyload alt="合并前"></p><p>合并后：</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230705152335931.png" srcset="/img/loading.gif" lazyload alt="合并后"></p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230705152408686.png" srcset="/img/loading.gif" lazyload alt=""></p></li><li><p>主键设计原则</p><ol><li>满足业务需求的情况下，尽量降低主键的长度。</li><li>插入数据时，尽量选择顺序插入，选择使用AUTO INCREMENT自增主键。</li><li>尽量不要使用UUD做主键或者是其他自然主键，如身你证号。</li><li>业务操作时，避免对主键的修改。</li></ol></li></ul><h3 id="3-order-by优化">3.order by优化</h3><ol><li>Using filesort：通过表的索引或全表扫描，读取满足条件的数据行，然后在排序缓冲区sort buffer中完成排序操作，所有不是通过索引直接返回排序结果的排序都叫 FileSort 排序。</li><li>Using index：通过有序索引顺序扫描直接返回有序数据，这种情况即为 using index，不需要额外排序，操作效率高。</li></ol><p>总结:</p><ul><li>根据排序字段建立合适的索引，多字段排序时，也遵循最左前缀法则。</li><li>尽量使用覆盖索引。</li><li>多字段排序，一个升序一个降序，此时需要注意联合索引在创建时的规则(ASC/DESC)。</li><li>如果不可避免的出现 filesort,大数据量排序时，可以适当增大排序缓冲区大小sort buffer size(默认256k)。</li></ul><h3 id="4-group-by优化">4.group by优化</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#删除掉目前的联合索引idx_user_pro_age_sta<br>drop index idx_user_pro_age_sta on tb_user;<br>#执行分组操作，根据orofession字段分组<br>explain select profession,count(*) from tb_user group by profession;<br>#创建索引<br>Create index idx_user_pro_age_sta on tb_user(profession,age,status);<br>#执行分组操作，根据profession字段分组<br>explain select profession,count(*) from tb_user group by profession;<br>#执行分组操作，根据profession字段分组<br>explain select profession,count(*) from tb_user group by profession,age;<br></code></pre></td></tr></table></figure><p>总结:</p><ul><li>在分组操作时，可以通过索引来提高效率</li><li>分组操作时，索引的使用也是满足最左前缀法则的。</li></ul><h3 id="5-limit优化">5.limit优化</h3><p>一个常见又非常头疼的问题就是limit2000000,10,此时需要MySQL排序前2000010记录，仅仅返回2000000-2000010的记录，其他记录丢弃，查询排序的代价非常大。</p><p>优化思路：一般分页查询时，通过创建覆盖索引能够比较好地提高性能，可以通过覆盖索引加子查询形式进行优化。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">explain select * from tb_sku t,(select id from tb_sku order by id limit 2000000,10) a where t.id = a.id;<br></code></pre></td></tr></table></figure><h3 id="6-count优化">6.count优化</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">explain select count(*) from tb_user;<br></code></pre></td></tr></table></figure><ul><li>MyISAM 引擎把一个表的总行数存在了磁盘上，因此执行count(*)的时候会直接返回这个数，效率很高；</li><li>InnoDB 引擎就麻烦了，它执行count(*)的时候，需要把数据一行一行地从引擎里面读出来，然后累积计数。</li></ul><p>优化思路：自己计数。</p><ul><li><p>count 的几种用法</p><ol><li><p>count(主键)：InnoDB 引擎会遍历整张表，把每一行的主键  id 值都取出来，返回给服务层。服务层拿到主键后，直接按行进行累加（主键不可能为null)。</p></li><li><p>count(字段)：</p><p>没有 not null 约束：InnoDB 引擎会遍历整张表把每一行的字段值都取出来，返回给服务层，服务层判断是否为 null，不为 null，计数累加。<br>有not null 约束：InnoDB 引擎会遍历整张表把每一行的字段值都取出来，返回给服务层，直接按行进行累加。</p></li><li><p>count(1)：InnoDB 引擎遍历整张表，但不取值。服务层对于返回的每一行，放一个数字“1”进去，直接按行进行累加。</p></li><li><p>count(*)：InnoDB 引擎并不会把全部字段取出来，而是专门做了优化，不取值，服务层直接按行进行累加。</p></li></ol><p>按照效率排序：count(字段) &lt; count(主键) &lt; count(1) ≈ <code>count(*)</code>，所以尽量使用<code>count(*)</code>。</p></li></ul><h3 id="7-update优化">7.update优化</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">update student set no=&#x27;2000100100&#x27; where id =1;<br><br>update student set no=&#x27;2000100105&#x27; where name=&#x27;韦一笑&#x27;；<br></code></pre></td></tr></table></figure><p>InnoDB 的行锁是针对索引加的锁，不是针对记录加的锁，并且该索引不能失效，否则会从行锁升级为表锁。</p><h2 id="四、视图-存储过程-触发器">四、视图/存储过程/触发器</h2><h3 id="1-视图">1.视图</h3><ul><li><p>介绍</p><p>视图(Viw)是一种虚拟存在的表。视图中的数据并不在数据库中实际存在，行和列数据来自定义视图的查询中使用的表，并且是在使用视图时动态生成的。</p></li><li><p>创建</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE [OR REPLACE] VIEW 视图名称(列名列表)] AS SELECT语句 [WITH[CASCADED | LOCAL] CHECK OPTION&#125;]<br></code></pre></td></tr></table></figure></li><li><p>查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 查看创建视图语句<br>SHOW CREATE VIEW 视图名称;<br><br>-- 查看视图数据<br>SELECT * FROM 视图名称......;<br></code></pre></td></tr></table></figure></li><li><p>修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 方式1<br>CREATE [OR REPLACE] VIEW 视图名称(列名列表)] AS SELECT语句 [WITH[CASCADED | LOCAL]CHECK OPTION]<br>-- 方式2<br>ALTER VIEW 视图名称[(列名列表)] AS SELECT语句 [WITH [CASCADED | LOCAL] CHECK OPTION]<br></code></pre></td></tr></table></figure></li><li><p>删除</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">DROP VIEW [IF EXISTS] 视图名称 [,视图名称] ...<br></code></pre></td></tr></table></figure></li><li><p>视图的检查选项</p><p>当使用 WITH CHECK OPTION子句创建视图时，MySQL会通过视图检查正在更改的每个行，例如插入，更新，删除，以使其符合视图的定义。MySQL 允许基于另一个视图创建视图，它还会检查依赖视图中的规则以保持一致性。为了确定检查的范围，mysql 提供了两个选项：CASCADED 和 LOCAL,默认值为 CASCADED。</p></li><li><p>视图的更新</p><p>要使视图可更新，视图中的行与基础表中的行之间必须存在一对一的关系。如果视图包含以下任何一项，则该视图不可更新：</p><ol><li>聚合函数或窗口函数（SUM()、MIN()、MAX()、COUNT()等）</li><li>DISTINCT</li><li>GROUP BY</li><li>HAVING</li><li>UNION 或者 UNION ALL</li></ol></li><li><p>作用</p><ol><li><p>简单</p><p>视图不仅可以简化用户对数据的理解，也可以简化他们的操作。那些被经常使用的查询可以被定义为视图，从而使得用户不必为以后的每次指定全部的条件。</p></li><li><p>安全</p><p>数据库可以授权，但不能授权到数据库特定行和特定的列上。通过视图用户只能查询和修改他们所能见到的数据</p></li><li><p>数据独立<br>视图可帮助用户屏蔽真实表结构变化带来的影响。</p></li></ol></li></ul><h3 id="2-存储过程">2.存储过程</h3><ul><li><p>介绍</p><p>存储过程是事先经过编译并存储在数据库中的一段SQL语句的集合，调用存储过程可以简化应用开发人员的很多工作，减少数据在数据库和应用服务器之间的传输，对于提高数据处理的效率是有好处的。</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230707092338699.png" srcset="/img/loading.gif" lazyload alt=""></p></li><li><p>特点</p><ol><li><p>封装，复用</p></li><li><p>可以接收参数，也可以返回数据</p></li><li><p>减少网络交互，效率提升</p></li></ol></li><li><p>创建</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE PROCEDURE 存储过程名称([参数列表])<br>BEGIN<br>--SQL语句<br>END;<br></code></pre></td></tr></table></figure></li><li><p>调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CALL 名称([参数]);<br></code></pre></td></tr></table></figure></li><li><p>查看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">-- 查询指定数据库的存储过程及状态信息<br>SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_SCHEMA=&#x27;xxx&#x27;;<br>-- 查询某个存储过程的定义<br>SHOW CREATE PROCEDURE 存储过程名称；<br></code></pre></td></tr></table></figure></li><li><p>删除</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">DROP PROCEDURE [IF EXISTS] 存储过程名称;<br></code></pre></td></tr></table></figure><p>注意：在命令行中，执行创建存储过程的SQL时，需要通过关键字delimiter指定SQL语句的结束符。</p></li><li><p>变量</p><ol><li><p>系统变量：MySQL服务器提供，不是用户定义的，属于服务器层面。分为全局变量(<strong>GLOBAL</strong>)、会话变量(<strong>SESSION</strong>)。</p><p>查看系统变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SHOW [SESSION|GLOBAL] VARIABLES; -- 查看所有系统变量<br>SHOW [SESSION|GLOBAL] VARIABLES LIKE &#x27;......&#x27;; -- 可以通过LIKE模糊匹配方式查找变量<br>SELECT @@[SESSION|GLOBAL] 系统变量名; -- 查看指定变量的值<br></code></pre></td></tr></table></figure><p>设置系统变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SET [SESSION|GLOBAL] 系统变量名=值;<br>SET @@[SESSION|GLOBAL] 系统变量名=值;<br></code></pre></td></tr></table></figure><p>注意：</p><p>​如果没有指定SESSION/GLOBAL,默认是SESSION,会话变量。<br>​mysql服务重新启动之后，所设置的全局参数会失效，要想不失效，可以在/etc/my.cnf由配置。</p></li><li><p>用户自定义变量：用户根据需要自己定义的变量，用户变量不用提前声明，在用的时候直接用“@变量名”使用就可以。其作用域为当前连接。</p><p>赋值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SET @var_name = expr [,@var_name expr]...;<br>SET @var_name := expr [,@var_name :=expr]...;<br><br>SELECT @var_name:=expr [,@var_name :=expr]...;<br>SELECT 字段名 INTO @var_name FROM 表名；<br></code></pre></td></tr></table></figure><p>使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SELECT @var_name;<br></code></pre></td></tr></table></figure><p>注意：用户定义的变量无需对其进行声明或初始化，只不过获取到的值为NULL。</p></li><li><p>局部变量：根据需要定义的在局部生效的变量，访问之前，需要DECLARE声明。可用作存储过程内的局部变量和输入参数，局部变量的范围是在其内声明的BEGN … END块。</p><p>声明：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">DECLARE 变量名 变量类型[DEFAULT ...];<br></code></pre></td></tr></table></figure><p>变量类型就是数据库字段类型：INT、BIGINT、CHAR、VARCHAR、DATE、TIME等。</p><p>赋值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SET 变量名=值；<br>SET 变量名:=值;<br>SELECT 字段名 INTO 变量名 FROM 表名 ...;<br></code></pre></td></tr></table></figure></li></ol></li><li><p>if</p><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs mysql">IF 条件1 THEN<br>...<br>ELSEIF 条件2 THEN-- 可选<br>...<br>ELSE-- 可选<br>...<br>END IF;<br></code></pre></td></tr></table></figure></li><li><p>参数</p><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:left">含义</th><th>备注</th></tr></thead><tbody><tr><td style="text-align:center">IN</td><td style="text-align:left">该类参数作为输入，也就是需要调用时传入值</td><td>默认</td></tr><tr><td style="text-align:center">OUT</td><td style="text-align:left">该类参数作为输出，也就是该参数可以作为返回值</td><td></td></tr><tr><td style="text-align:center">INOUT</td><td style="text-align:left">既可以作为输入参数，也可以作为输出参数</td><td></td></tr></tbody></table><p>用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE PROCEDURE 存储过程名称([IN/OUT/INOUT 参数名 参数类型])<br>BEGIN<br>-- SQL语句<br>END;<br></code></pre></td></tr></table></figure></li><li><p>case</p><p>语法一：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CASE case_value<br>WHEN when_value1 THEN statement_list1<br>[WHEN when_value2 THEN statement_list2]...<br>[ELSE statement_list]<br>END CASE;<br></code></pre></td></tr></table></figure><p>语法二：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CASE<br>WHEN search_condition1 THEN statement_list1<br>[WHEN search_condition2 THEN statement_list2]...<br>[ELSE statement_list]<br>END CASE;<br></code></pre></td></tr></table></figure></li><li><p>while</p><p>whil循环是有条件的循环控制语句。满足条件后，再执行循环体中的SQL语句。具体语法为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql"># 先判断条件，如果条件为true，则执行逻辑，否则，不执行逻辑<br>WHILE 条件 DO<br>SQL逻辑...<br>END WHILE;<br></code></pre></td></tr></table></figure></li><li><p>repeat</p><p>repeat 是有条件的循环控制语句，当满足条件的时候退出循环。</p><p>具体语法为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#先执行一次逻辑，然后判定逻辑是否满足，如果满足，则退出。如果不满足，则继续下一次循环<br>REPEAT<br>SQL 逻辑...<br>UNTIL 条件<br>END REPEAT;<br></code></pre></td></tr></table></figure></li><li><p>loop</p><p>LOOP实现简单的循环，如果不在SQL逻辑中增加退出循环的条件，可以用其来实现简单的死循环。LOOP可以配合一下两个语句使用：</p><ul><li>LEAVE：配合循环使用，退出循环。</li><li>ITERATE：必须用在循环中，作用是跳过当前循环剩下的语句，直接进入下一次循环。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">[begin_label:] LOOP<br>SQL 逻辑...<br>END LOOP [end_label];<br><br>LEAVE label; -- 退出指定标记的循环体<br>ITERATE label; -- 直接进入下一次循环<br></code></pre></td></tr></table></figure></li><li><p>游标</p><p><strong>游标（CURSOR）</strong> 是用来存储查询结果集的数据类型，在存储过程和函数中可以使用游标对结果集进行循环的处理。游标的使用包括游标的声明、OPEN、FETCH 和 CLOSE，其语法分别如下。</p><p>声明游标：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">DECLARE 游标名称 CURSOR FOR 查询语句；<br></code></pre></td></tr></table></figure><p>打开游标:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">OPEN 游标名称;<br></code></pre></td></tr></table></figure><p>获取游标记录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">FETCH 游标名称 INTO 变量[,变量];<br></code></pre></td></tr></table></figure><p>关闭游标：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CLOSE 游标名称;<br></code></pre></td></tr></table></figure></li><li><p>条件处理程序</p><p><strong>条件处理程序（Handler）</strong> 可以用来定义在流程控制结构执行过程中遇到问题时相应的处理步骤。</p><p>具体语法为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs mysql">DECLARE handler_action HANDLER FOR condition_value [,condition_value]... statement;<br><br>handler_action<br>CONTINUE:继续执行当前程序<br>EXIT:终止执行当前程序<br><br>condition_value<br>SQLSTATE sqlstate_value:状态码，如 02000<br>SQLWARNING:所有以01开头的SQLSTATE代码的简写<br>NOT FOUND:所有以02开头的SQLSTATE代码的简写<br>SQLEXCEPTION:所有没有被SQLWARNING 或 NOT FOUND捕获的SQLSTATE代码的简写<br></code></pre></td></tr></table></figure></li></ul><h3 id="3-存储函数">3.存储函数</h3><p>存储函数是有返回值的存储过程，存储函数的参数只能是 IN 类型的。</p><p>具体语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE FUNCTION 存储函数名称([参数列表])<br>RETURNS type [characteristic ...]<br>BEGIN<br>-- SQL语句<br>RETURN ...;<br>END;<br></code></pre></td></tr></table></figure><p>characteristic 说明:</p><ul><li>DETERMINISTIC：相同的输入参数总是产生相同的结果。</li><li>NO SOL：不包含SQL语句。</li><li>READS SQL DATA：包含读取数据的语句，但不包含写入数据的语句。</li></ul><h3 id="4-触发器">4.触发器</h3><ul><li><p>介绍</p><p>触发器是与表有关的数据库对象，指在 insert/update/delete 之前或之后，触发并执行触发器中定义的SQL语句集合。触发器的这种特性可以协助应用在数据库端确保数据的完整性，日志记录，数据校验等操作。<br>使用别名OLD和NEW来引用触发器中发生变化的记录内容，这与其他的数据库是相似的。现在触发器还只支持行级触发，不支持语句级触发。</p><table><thead><tr><th>触发器类型</th><th>NEW 和 OLD</th></tr></thead><tbody><tr><td>INSERT 型触发器</td><td>NEW 表示将要或者已经新增的数据</td></tr><tr><td>UPDATE 型触发器</td><td>OLD 表示修改之前的数据，NEW 表示将要或已经修改后的数据</td></tr><tr><td>DELETE 型触发器</td><td>OLD 表示将要或者已经删除的数据</td></tr></tbody></table></li><li><p>语法</p><p>创建：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE TRIGGER trigger_name<br>BEFORE/AFTER INSERT/UPDATE/DELETE<br>ON tbl_name FOR EACH ROW -- 行级触发器<br>BEGIN<br>trigger_stmt;<br>END;<br></code></pre></td></tr></table></figure><p>查看：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">SHOW TRIGGERS;<br></code></pre></td></tr></table></figure><p>删除：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">DROP TRIGGER [schema_name] trigger_name;-- 如果没有指定 schema_name，默认为当前数据库。<br></code></pre></td></tr></table></figure></li></ul><h2 id="五、锁">五、锁</h2><h3 id="1-概述">1.概述</h3><ul><li><p>介绍</p><p>锁是计算机协调多个进程或线程并发访问某一资源的机制。在数据库中，除传统的计算资源（CPU、RAM、I/O）的争用以外，数据也是一种供许多用户共享的资源。如何保证数据并发访问的一致性、有效性是所有数据库必须解决的一个问题，锁冲突也是影响数据库并发访问性能的一个重要因素。从这个角度来说，锁对数据库而言显得尤其重要，也更加复杂。</p></li><li><p>分类</p><p>MySQL 中的锁，按照锁的粒度分，分为以下三类：</p><ol><li>全局锁：锁定数据库中的所有表。</li><li>表级锁：每次操作锁住整张表。</li><li>行级锁：每次操作锁住对应的行数据。</li></ol></li></ul><h3 id="2-全局锁">2.全局锁</h3><ul><li><p>介绍</p><p>全局锁就是对整个数据库实例加锁，加锁后整个实例就处于只读状态，后续的DML的写语句，DDL语句，已经更新操作的事务提交语句都将被阻塞。<br>其典型的使用场景是做全库的逻辑备份，对所有的表进行锁定，从而获取一致性视图，保证数据的完整性。</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230707212941097.png" srcset="/img/loading.gif" lazyload alt=""></p></li><li><p>特点</p><p>数据库中加全局锁，是一个比较重的操作，存在以下问题：</p><ol><li>如果在主库上备份，那么在备份期间都不能执行更新，业务基本上就得停摆。</li><li>如果在从库上备份，那么在备份期间从库不能执行主库同步过来的二进制日志（binlog）,会导致主从延迟。</li></ol><p>在InnoDB引擎中，我们可以在备份时加上参数 --single-transaction 参数来完成不加锁的一致性数据备份。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">mysqldump --single-transaction -uroot -p123456 itcast&gt;itcast.sql<br></code></pre></td></tr></table></figure></li></ul><h3 id="3-表级锁">3.表级锁</h3><ul><li><p>介绍</p><p>表级锁，每次操作锁住整张表。锁定粒度大，发生锁冲突的概率最高，并发度最低。应用在MyISAM、InnoDB、BDB等存储引擎中。</p><p>主要分为以下三类：</p><ol><li>表锁</li><li>元数据锁（meta data lock，MDL）</li><li>意向锁</li></ol></li><li><p>表锁</p><p>对于表锁，分为两类：</p><ol><li>表共享读锁（read lock)</li><li>表独占写锁（write lock）</li></ol><p>语法：</p><ol><li>加锁：lock tables 表名…  read/write。</li><li>释放锁：unlock tables /客户端断开连接。</li></ol><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230707213906222.png" srcset="/img/loading.gif" lazyload alt="读锁"></p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230707214548831.png" srcset="/img/loading.gif" lazyload alt="写锁"></p><p>读锁不会阻塞其他客户端的读，但是会阻塞写。写锁既会阻塞其他客户端的读，又会阻塞其他客户端的写。</p></li><li><p>元数据锁（meta data lock，MDL）</p><p>MDL加锁过程是系统自动控制，无需显式使用，在访问一张表的时候会自动加上。MDL锁主要作用是维护表元数据的数据一致性，在表上有活动事务的时候，不可以对元数据进行写入操作。为了避免DML与DDL冲突，保证读写的正确性。</p><p>在 MySQL5.5 中引入了MDL，当对一张表进行增删改查的时候，加MDL读锁（共享）；当对表结构进行变更操作的时候，加MDL写锁（排他）。</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230707215127886.png" srcset="/img/loading.gif" lazyload alt=""></p><p>查看元数据锁：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select object_type,object_schema,object_name,lock_type,lock_duration from performance_schema.metadata_locks;<br></code></pre></td></tr></table></figure></li><li><p>意向锁</p><p>为了避免 DML 在执行时，加的行锁与表锁的冲突，在 InnoDB 中引入了意向锁，使得表锁不用检查每行数据是否加锁，使用意向锁来减少表锁的检查。</p><ol><li>意向共享锁（IS）：由语句 select … lock in share mode添加，与表锁共享锁(read)兼容，与表锁排它锁(write)互斥。</li><li>意向排他锁（IX）：由 insert、update、delete、select … for update 添加，与表锁共享锁(read)及排它锁(write)都互斥。意向锁之间不会互斥。</li></ol><p>可通过以下 SQL，查看意向锁及行锁的加锁情况：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select object_schema,object_name,index_name,lock_type,lock_mode,lock_data from performance_schema.data_locks;<br></code></pre></td></tr></table></figure></li></ul><h3 id="4-行级锁">4.行级锁</h3><ul><li><p>介绍</p><p>行级锁，每次操作锁住对应的行数据。锁定粒度最小，发生锁冲突的概率最低，并发度最高。应用在 InnoDB 存储引擎中。</p><p>InnoDB 的数据是基于索引组织的，行锁是通过对索引上的索引项加锁来实现的，而不是对记录加的锁。对于行级锁，主要分为以下三类：</p><ol><li>行锁（Record Lock）：锁定单个行记录的锁，防止其他事务对此行进行 update 和 delete。在RC、RR 隔离级别下都支持。</li><li>间隙锁（Gap Lock）：锁定索引记忌间隙（不含该记录），确保索引记录间隙不变，防止其他事务在这个间隙进行insert，产生幻读。在RR隔离级别下都支持。</li><li>临键锁（Next-Key Lock）：行锁和间隙锁组合，同时锁住数据，并锁住数据前面的间隙Gap。在RR隔离级别下支持。</li></ol></li><li><p>行锁</p><p>InnoDB.实现了以下两种类型的行锁：<br>1.共享锁（S）：允许一个事务去读一行，阻止其他事务获得相同数据集的排它锁。<br>2.排他锁（X）：允许获取排他锁的事务更新数据，阻止其他事务获得相同数据集的共享锁和排他锁。</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230707222631598.png" srcset="/img/loading.gif" lazyload alt=""></p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230707222910637.png" srcset="/img/loading.gif" lazyload alt=""></p><p>默认情况下，InnoDB在REPEATABLE READ事务隔离级别运行，InnoDB使用next-key锁进行搜索和索引扫描，以防止幻读。</p><ol><li>针对唯一索引进行检索时，对已存在的记录进行等值匹配时，将会自动优化为行锁。</li><li>InnoDB的行锁是针对于索引加的锁，不通过索引条件检索数据，那么InnoDB将对表中的所有记录加锁，此时<strong>就会升级为表锁</strong>。</li></ol></li><li><p>间隙锁/临键锁</p><p>默认情况下，InnoDB 在 REPEATABLE READ事务隔离级别运行，InnoDB使用 next-key 锁进行搜索和索引扫描，以防止幻读。</p><ol><li>索引上的等值查询（唯一索引），给不存在的记录加锁时，优化为间隙锁。</li><li>索引上的等值查询（普通索引），向右遍历时最后一个值不满足查询需求时，next-key lock 退化为间隙锁。</li><li>索引上的范围查询（唯一索引），会访问到不满足条件的第一个值为止。</li></ol><p><strong>注意：间隙锁唯一目的是防止其他事务插入间隙。间隙锁可以共存，一个事务采用的间隙锁不会阻止另一个事务在同一间隙上采用间隙锁。</strong></p></li></ul><h2 id="六、InnoDB引擎">六、InnoDB引擎</h2><h3 id="1-逻辑存储结构">1.逻辑存储结构</h3><ul><li>表表空间（ibd文件），一个 mysql 实例可以对应多个表空间，用于存储记录、索引等数据。</li><li>段，分为数据段（Leaf node segment）、索引段（Non-leaf node segment）、回滚段（Rollback segment），InnoDB<br>是索引组织表，数据段就是B+树的叶子节点，索引段即为B+树的非叶子节点。段用来管理多个Exten（区）。</li><li>区，表空间的单元结构，每个区的大小为1M。默认情况下，InnoDB存储引擎页大小为16K，即一个区中一共有64个连续的页。</li><li>页，是InnoDB存储引擎磁盘管理的最小单元，每个页的大小默认为16KB。为了保证页的连续性，InnoDB存储引擎每次从<br>磁盘申请4-5个区。</li><li>行，InnoDB 存储引擎数据是按行进行存放的。</li></ul><h3 id="2-架构">2.架构</h3><p>MySQL 5.5版本开始，默认使用InnoDB存储引擎，它擅长事务处理，具有崩溃恢复特性，在日常开发中使用非常广泛。下面是InnoDB架构图，左侧为内存结构，右侧为磁盘结构。</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230708095029258.png" srcset="/img/loading.gif" lazyload alt="InnoDB架构图"></p><p><strong>内存架构</strong></p><ul><li><p>Buffer Pool：缓冲池是主内存中的一个区域，里面可以缓存磁盘上经常操作的真实数据，在执行增删改查操作时，先操作缓冲池中的数据（若缓冲池没有数据，则从磁盘加载并缓存），然后再以一定频率刷新到磁盘，从而减少磁盘口，加快处理速度。</p></li><li><p>缓冲池以Page页为单位，底层采用链表数据结构管理Page。根据状态，将Page分为三种类型：</p><ol><li>free page：空闲page，未被使用。</li><li>clean page：被使用page，数据没有被修改过。</li><li>dirty page：脏页，被使用page，数据被修改过，页中数据与磁盘的数据产生了不一致。</li></ol></li><li><p>Change Buffer：更改缓冲区（针对于非唯一二级索引页），在执行DML语句时，如果这些数据Page没有在Buffer Pool中，不会直接操作磁盘，而会将数据变更存在更改缓冲区Change Buffer中，在未来数据被读取时，再将数据合并恢复到Buffer Poolr中，再将合并后的数据刷新到磁盘中。</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230708100434924.png" srcset="/img/loading.gif" lazyload alt=""></p></li><li><p>Adaptive Hash Index：自适应hash索引，用于优化对 Buffer Pool 数据的查询。InnoDB 存储引擎会监控对表上各索引页的查询，如果观察到 hash 索引可以提升速度，则建立 hash 索引，称之为自适应 hash 索引。</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230708100728834.png" srcset="/img/loading.gif" lazyload alt=""></p></li><li><p>Log Buffer：日志缓冲区，用来保存要写入到磁盘中的 log 日志数据（redo log、undo log），默认大小为16MB，日志缓冲区的日志会定期刷新到磁盘中。如果需要更新、插入或删除许多行的事务，增加日志缓冲区的大小可以节省磁盘 I/0。</p><p>参数：innodb_log_buffer_size：缓冲区大小innodb_flush_log_at_trx_commit：日志刷新到磁盘时机</p></li></ul><p><strong>磁盘结构</strong></p><ul><li><p>System Tablespace：系统表空间是更改缓冲区的存储区域。如果表是在系统表空间而不是每个表文件或通用表空间中创建的，它也可能包含表和索引数据。（在 MySQL5.x 版本中还包含 InnoDB 数据字典、undolog等）</p><p>参数：innodb_data_file_path</p></li><li><p>File-Per-Table Tablespaces：每个表的文件表空间包含单个InnoDB表的数据和索引，并存储在文件系统上的单个数据文件中。<br>参数：innodb_file_per_table</p></li><li><p>General Tablespaces：通用表空间，需要通过 CREATE TABLESPACE 语法创建通用表空间，在创建表时，可以指定该表空间。</p></li><li><p>Undo Tablespaces：撤销表空间，MySQL实例在初始化时会自动创建两个默认的undo表空间（初始大小16M），用于存储undo log日志。</p></li><li><p>Temporary Tablespaces：InnoDB使用会话临时表空间和全局临时表空间。存储用户创建的临时表等数据。</p></li><li><p>Doublewrite Buffer Files：双写缓冲区，innoDB引擎将数据页从Buffer Pool刷新到磁盘前，先将数据页写入双写缓冲区文件中，便于系统异常时恢复数据。</p></li><li><p>Redo Log：重做日志，是用来实现事务的持久性。该日志文件由两部分组成：重做日志缓冲（redo log buffer）以及重做日志文件(redo log),前者是在内存中，后者在磁盘中。当事务提交之后会把所有修改信息都会存到该日志中，用于在刷新脏页到磁盘时，发生错误时，进行数据恢复使用。</p></li></ul><p><strong>后台线程</strong></p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230708104200904.png" srcset="/img/loading.gif" lazyload alt=""></p><ol><li><p>Master Thread</p><p>核心后台线程，负责调度其他线程，还负责将缓冲池中的数据异步刷新到磁盘中，保持数据的一致性，还包括脏页的刷新、合并插入缓存、undo 页的回收。</p></li><li><p>IO Thread</p><p>在InnoDB存储引擎中大量使用了AIO来处理IO请求，这样可以极大地提高数据库的性能，而IO Thread主要负责这些IO请求的回调。</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230708104625112.png" srcset="/img/loading.gif" lazyload alt="image-20230708104625112"></p></li><li><p>Purge Thread</p><p>主要用于回收事务已经提交了的 undo log，在事务提交之后，undo log 可能不用了，就用它来回收。</p></li><li><p>Page Cleaner Thread</p><p>协助 Master Thread 刷新脏页到磁盘的线程，它可以减轻 Master Thread 的工作压力，减少阻塞。</p></li></ol><h3 id="3-事务原理">3.事务原理</h3><h4 id="事务">事务</h4><p>事务是一组操作的集合，它是一个不可分割的工作单位，事务会把所有的操作作为一个整体一起向系统提交或撤销操作请求，即这些操作要么同时成功，要么同时失败。</p><h4 id="特性">特性</h4><ul><li>原子性（Atomicity）：事务是不可分割的最小操作单元，要么全部成功，要么全部失败。</li><li>一致性（Consistency）：事务完成时，必须使所有的数据都保持一致状态。</li><li>隔离性（Isolation）：数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行。</li><li>持久性（Durability）：事务一旦提交或回滚，它对数据库中的数据的改变就是永久的。</li></ul><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230708110027460.png" srcset="/img/loading.gif" lazyload alt=""></p><h4 id="redo-log">redo log</h4><p>重做日志，记录的是事务提交时数据页的物理修改，是用来实现事务的持久性。<br>该日志文件由两部分组成：重做日志缓冲（redo log buffer）以及重做日志文件（redo log file）,前者是在内存中，后者在磁盘中。当事务提交之后会把所有修改信息都存到该日志文件中，用于在刷新脏页到磁盘，发生错误时，进行数据恢复使用。</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230708111140046.png" srcset="/img/loading.gif" lazyload alt=""></p><h4 id="undo-log">undo log</h4><p>回滚日志，用于记录数据被修改前的信息，作用包含两个：提供回滚和 MVCC(多版本并发控制)。<br>undo log 和 redo log  记录物理日志不一样，它是逻辑日志。可以认为当delete一条记录时，undo log中会记录一条对应的 insert记录，反之亦然，当update一条记录时，它记录一条对应相反的update记录。当执行rollback时，就可以从undo log中的逻辑记录读取到相应的内容并进行回滚。<br>Undo log 销毁：undo log在事务执行时产生，事务提交时，并不会立即删除undo log，因为这些日志可能还用于MVCC。<br>Undo log 存储：undo log:采用段的方式进行管理和记录，存放在前面介绍的rollback segment 回滚段中，内部包含1024个undo log<br>segment。</p><h3 id="4-MVCC">4.MVCC</h3><h4 id="基本概念">基本概念</h4><ul><li><p>当前读</p><p>读取的是记录的最新版本，读取时还要保证其他并发事务不能修改当前记录，会对读取的记录进行加锁。对于我们日常的操作，如：<br>select … lock in share mode(共享锁)，select … for update、update、insert、delete(排他锁)都是一种当前读。</p></li><li><p>快照读</p><p>简单的select(不加锁)就是快照读，快照读，读取的是记录数据的可见版本，有可能是历史数据，不加锁，是非阻塞读。<br>Read Committed：每次select,都生成一个快照读。<br>Repeatable Read：开启事务后第一个selecti语句才是快照读的地方。<br>Serializable：快照读会退化为当前读。</p></li><li><p>MVCC</p><p>全称M2ulti-Version Concurrency Control，多版本并发控制。指维护一个数据的多个版本，使得读写操作没有冲突，快照读为MySQL实现MVCC提供了一个非阻塞读功能。MVCC的具体实现，还需要依赖于数据库记录中的三个隐式字段、undo log日志、readView。</p></li><li><p>readview</p><p>ReadView（读视图）是<strong>快照读</strong>SQL执行时MVCC提取数据的依据，记录并维护系统当前活跃的事务（未提交的）id。</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230709105915084.png" srcset="/img/loading.gif" lazyload alt=""></p><p>不同的隔离级别，生成ReadView的时机不同：</p><ul><li>READ COMMITTED：在事务中每一次执行快照读时生成 ReadView。</li><li>REPEATABLE READ：仅在事务中第一次执行快照读时生成ReadView，后续复用该 ReadView。</li></ul></li></ul><h2 id="七、MySQL管理">七、MySQL管理</h2><h3 id="1-系统数据库">1.系统数据库</h3><p>MySQL 数据库安装完成后，自带了以下四个数据库，具体作用如下：</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230709152834292.png" srcset="/img/loading.gif" lazyload alt=""></p><h3 id="2-常用工具">2.常用工具</h3><ul><li><p>mysql 客户端工具</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230709153318612.png" srcset="/img/loading.gif" lazyload alt=""></p></li><li><p>mysqladmin</p><p>mysqladmin是一个执行管理操作的客户端程序。可以用它来检查服务器的配置和当前状态、创建并删除数据库等。</p><p>通过帮助文档查看选项：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mysqladmin --help<br></code></pre></td></tr></table></figure><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql">mysqladmin -uroot -p1234 drop &#x27;test01&#x27;;<br>mysqladmin -uroot -p1234 version;<br></code></pre></td></tr></table></figure></li><li><p>mysqlbinlog</p><p>由于服务器生成的二进制日志文件以二进制格式保存，所以如果想要检查这些文本的文本格式，就会使用到mysqlbinlog日志管理工具。</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230709154610864.png" srcset="/img/loading.gif" lazyload alt=""></p></li><li><p>mysqlshow</p><p>mysqlshow客户端对象查找工具，用来很快地查找存在哪些数据库、数据库中的表、表中的列或者索引。</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230709155235822.png" srcset="/img/loading.gif" lazyload alt=""></p></li><li><p>mysqldump</p><p>mysqldump 客户端工具用来备份数据库或在不同数据库之间进行数据迁移。备份内容包含创建表，及插入表的sQL语句。</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230709160129966.png" srcset="/img/loading.gif" lazyload alt=""></p></li><li><p>mysqlimport/source</p><p>mysqlimport是客户端数据导入工具，用来导入mysqldump加 -T 参数后导出的文本文件。</p><p><img src="https://cdn.gumengyo.top//MySQL-%E9%AB%98%E7%BA%A7/image-20230709161523034.png" srcset="/img/loading.gif" lazyload alt=""></p><p>如果需要导入 sql 文件，可以使用 mysql 中的source指令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">source /root/xxxx.sql<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;MySQL-高级&lt;/h1&gt;
&lt;p class=&quot;note note-success&quot;&gt;
  此文是我学习MySQL时笔记，教程链接：&lt;a href=&quot;https://www.bilibili.com/video/BV1Kr4y1i7ru&quot; target=&quot;_blank&quot;&gt;</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.jishuqin.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Mysql" scheme="https://blog.jishuqin.cn/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>站点监控-Uptime-kuma</title>
    <link href="https://blog.jishuqin.cn/posts/e8d01234/"/>
    <id>https://blog.jishuqin.cn/posts/e8d01234/</id>
    <published>2023-06-28T16:24:36.000Z</published>
    <updated>2025-08-27T03:20:31.436Z</updated>
    
    <content type="html"><![CDATA[<h1>站点监控-Uptime-kuma</h1><h2 id="1-前言">1. 前言</h2><p><code>Uptime-kuma</code> 是一个基于 Web 的服务器监控工具，用于监视和报告服务器和网络设备的运行时间、性能指标和可用性。它提供了一个直观易用的用户界面，用于实时监控服务器的状态、资源使用情况和响应时间。</p><p><code>Uptime-Kuma</code> 的主要特点包括：</p><ul><li>实时监控：监视服务器和网络设备的运行时间、CPU 和内存使用情况、网络连接、磁盘空间和其他性能指标。</li><li>报警和通知：设置报警规则，以便在服务器出现问题或达到预定指标时收到通知。可以通过电子邮件、短信或其他集成的通知方式接收警报。</li><li>历史数据和性能图表：记录服务器的历史性能数据，并生成可视化图表和报告，用于分析和趋势监控。</li><li>多服务器管理：支持同时监控多台服务器和网络设备，并将它们组织成逻辑分组，方便管理和监控。</li><li>用户和权限管理：提供用户和权限管理功能，可以根据需要设置不同用户的访问权限和角色。</li><li>可扩展性：<code>Uptime-Kuma</code> 提供了一个开放的 <code>API</code> 和插件系统，可以与其他工具和服务进行集成，扩展其功能和定制化需求。</li></ul><h2 id="2-部署">2. 部署</h2><p class="note note-info">本文采用的是 dokcer 容器部署 Uptime-Kuma ，若不想使用docker 来部署可以参考官方文档：<a target="_blank" rel="noopener" href="https://github.com/louislam/uptime-kuma">https://github.com/louislam/uptime-kuma</a>。</p><h3 id="2-1-拉取镜像">2.1 拉取镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull louislam/uptime-kuma<br></code></pre></td></tr></table></figure><p>查看镜像是否拉取到<code>docker</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker images<br></code></pre></td></tr></table></figure><p><img src="https://cdn.gumengyo.top//image-20230628164055949.png" srcset="/img/loading.gif" lazyload alt=""></p><h3 id="2-2-创建映射目录">2.2 创建映射目录</h3><p>这里我创建的目录为：<code>/root/data/kuma/data</code>，可自行修改，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /root/data/kuma/data<br></code></pre></td></tr></table></figure><h3 id="2-3-运行容器">2.3 运行容器</h3><p>路径根据你设置的目录修改，端口也可以根据需要修改。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run -d --name kuma --restart=always -p 3001:3001 -v /root/data/kuma/data:/app/data -v /var/run/docker.sock:/var/run/docker.sock  louislam/uptime-kuma<br></code></pre></td></tr></table></figure><h2 id="3-配置">3.  配置</h2><p class="note note-warning">运行成功之后，需要开放端口，使 Uptime-Kuma 可以在公网访问。</p><p>我这里设置的端口为<code>3001</code>,打开 <code>http://server_ip:3001</code>访问<code>Uptime-Kuma</code>界面。</p><h3 id="3-1-访问界面">3.1 访问界面</h3><p>首次访问需设置管理员账号</p><p><img src="https://cdn.gumengyo.top//image-20230628165532925.png" srcset="/img/loading.gif" lazyload alt=""></p><h3 id="3-2-配置反向代理">3.2 配置反向代理</h3><p>我使用的是<code>Nginx Proxy Manager</code> 配置代理，需在<code>DNS</code>服务器添加对应的域名解析记录。</p><p>❗注意：记得开启<code>Websockets</code>支持，否则无法正常访问后台。</p><p><img src="https://cdn.gumengyo.top//image-20230628170914086.png" srcset="/img/loading.gif" lazyload alt=""></p><p>申请<code>ssl</code>证书</p><p><img src="https://cdn.gumengyo.top//image-20230628170522401.png" srcset="/img/loading.gif" lazyload alt=""></p><p>配置完成后，使用域名就可以访问<code>Kuma</code>后台了。</p><h3 id="3-3-添加监控项">3.3 添加监控项</h3><p>登录进后台，点击添加监控项。</p><p><img src="https://cdn.gumengyo.top//image-20230628171254914.png" srcset="/img/loading.gif" lazyload alt=""></p><p>选择<code>监控类型</code>，填入<code>显示名称</code> 和 <code>监控站点路径</code>。</p><p>可根据你实际需求设置其他配置，如：</p><ul><li>设置心跳检测时间间隔（单位秒）</li><li>设置证书到期通知</li><li>设置报警通知，支持多种通知类型</li></ul><p>设置完成后就可以看到站点的各项信息了，如下：</p><p><img src="https://cdn.gumengyo.top//image-20230628172025154.png" srcset="/img/loading.gif" lazyload alt=""></p><h3 id="3-4-添加状态页">3.4 添加状态页</h3><p>点击<code>状态页面</code> -&gt; <code>新的状态页</code></p><p><img src="https://cdn.gumengyo.top//image-20230628172540869.png" srcset="/img/loading.gif" lazyload alt=""></p><p>设置状态页的名称和路径</p><p><img src="https://cdn.gumengyo.top//image-20230628172650430.png" srcset="/img/loading.gif" lazyload alt=""></p><p>添加服务项，其他按需设置即可，点击保存。</p><p><img src="https://cdn.gumengyo.top//image-20230628172852407.png" srcset="/img/loading.gif" lazyload alt=""></p><h2 id="4-效果">4. 效果</h2><p>访问对应路径即可查看服务状态信息。</p><p><img src="https://cdn.gumengyo.top//image-20230628173052926.png" srcset="/img/loading.gif" lazyload alt=""></p><p>效果可以参看我的状态页：<a href="https://kuma.jishuqin.cn/status/main">https://kuma.jishuqin.cn/status/main</a></p><h2 id="参考">参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://blog.crazymiao.com/2022/08/uptime-kuma">教你两分钟快速搭建一个HTTP网站监控程序-Uptime-kuma</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://bbs.huaweicloud.com/blogs/385898">云原生之使用docker部署uptime-kuma服务器监控面板</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;站点监控-Uptime-kuma&lt;/h1&gt;
&lt;h2 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Uptime-kuma&lt;/code&gt; 是一个基于 Web 的服务器监控工具，用于监视和报告服务器和网络设备的运行时间、性能指标和可用性。它提供了一个直观易用的用</summary>
      
    
    
    
    <category term="服务配置" scheme="https://blog.jishuqin.cn/categories/%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="Uptime-kuma" scheme="https://blog.jishuqin.cn/tags/Uptime-kuma/"/>
    
    <category term="站点监控" scheme="https://blog.jishuqin.cn/tags/%E7%AB%99%E7%82%B9%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>给 Fluid 主题博客增加打赏功能</title>
    <link href="https://blog.jishuqin.cn/posts/92f5a6bc/"/>
    <id>https://blog.jishuqin.cn/posts/92f5a6bc/</id>
    <published>2023-06-17T22:50:10.000Z</published>
    <updated>2025-08-27T03:20:31.436Z</updated>
    
    <content type="html"><![CDATA[<h1>给 Fluid 主题博客增加打赏功能</h1><h2 id="1-前言">1. 前言</h2><p>看到别人的博客都有打赏的功能，所以自己也想着在自己博客加入打赏功能，百度到了<a href="https://blog.kukmoon.com/">谷月</a>的博文，参考博文实现了功能~<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Kukmoon谷月.给 Hexo 博客的 Fluid 主题增加打赏模块.2021-11-18](https://blog.kukmoon.com/7bf76e1d/)">[1]</span></a></sup></p><h2 id="2-覆盖配置">2.  覆盖配置</h2><p>以下配置参考 Hexo Fluid 手册<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="[Hexo Fluid 手册](https://hexo.fluid-dev.com/docs/guide/#%E8%A6%86%E7%9B%96%E9%85%8D%E7%BD%AE)">[2]</span></a></sup></p><p class="note note-success">TIP:<br>覆盖配置可以使主题配置放置在 fluid 目录之外，避免在更新主题时丢失自定义的配置。通过 Npm 安装主题的用户可忽略，其他用户建议学习使用。</p><p>Hexo 5.0.0 版本以上的用户，在博客目录下创建 <code>_config.fluid.yml</code> 文件，将主题的<a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml">_config.yml</a> 全部配置（或部分配置）复制过去。<br>以后如果修改任何主题配置，都只需修改 <code>_config.fluid.yml</code> 的配置即可。</p><p>注意：</p><ul><li><p>只要存在于 <code>_config.fluid.yml</code> 的配置都是高优先级，修改原 <code>_config.yml</code> 是无效的。</p></li><li><p>每次更新主题可能存在配置变更，请注意更新说明，可能需要手动对 <code>_config.fluid.yml</code> 同步修改。</p></li><li><p>想查看覆盖配置有没有生效，可以通过 <code>hexo g --debug</code> 查看命令行输出。</p></li><li><p>如果想将某些配置覆盖为空，注意不要把主键删掉，不然是无法覆盖的，比如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">about:</span><br>  <span class="hljs-attr">icons:</span>  <span class="hljs-comment"># 不要把 icon 注释掉，否则无法覆盖配置</span><br>    <span class="hljs-comment"># - &#123; class: &#x27;iconfont icon-github-fill&#x27;, link: &#x27;https://github.com&#x27; &#125;</span><br>    <span class="hljs-comment"># - &#123; class: &#x27;iconfont icon-wechat-fill&#x27;, qrcode: &#x27;/img/favicon.png&#x27; &#125;</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="3-修改主题源文件">3. 修改主题源文件</h2><p><img src="https://cdn.gumengyo.top//image-20230617233736066.png" srcset="/img/loading.gif" lazyload alt=""></p><p>找到主题源文件<code>themes/fluid/layout/post.ejs</code>对应文章模板的 <code>&lt;/div&gt;</code> 和 <code>&lt;hr&gt;</code> 之间，添加以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs ejs">&lt;!-- 添加打赏模块 --&gt;<br>&lt;div class=&quot;reward-container&quot;&gt;<br>&lt;% if (theme.donate.enable) &#123; %&gt;<br>&lt;button id=&quot;rewardBtn&quot; class=&quot;reward-btn&quot;&gt;<br>&lt;% if (config.language == &#x27;zh-CN&#x27;) &#123; %&gt; <br>❤ 打赏<br>&lt;% &#125; else &#123; %&gt;<br>Donate<br>&lt;% &#125; %&gt;<br>&lt;/button&gt;<br>&lt;p class=&quot;tea&quot;&gt;“&lt;%= theme.donate.message %&gt;”&lt;/p&gt;<br>&lt;div id=&quot;rewardImgContainer&quot; class=&quot;reward-img-container&quot;&gt;<br>         &lt;div class=&quot;singleImgContainer&quot;&gt;<br>            &lt;img id=&quot;wechatImg&quot; class=&quot;reward-img&quot; src=&quot;&lt;%= theme.donate.wechatpay %&gt;&quot; alt=&quot;微信二维码&quot;&gt;<br>                &lt;p class=&quot;wechatPay&quot;&gt;微信支付&lt;/p&gt;<br>            &lt;/div&gt;<br>            &lt;div class=&quot;singleImgContainer&quot;&gt;<br>               &lt;img id=&quot;alipayImg&quot; class=&quot;reward-img&quot; src=&quot;&lt;%= theme.donate.alipay %&gt;&quot; alt=&quot;支付宝二维码&quot;&gt;<br>                &lt;p class=&quot;aliPay&quot;&gt;支付宝支付&lt;/p&gt;<br>           &lt;/div&gt;<br>&lt;/div&gt;<br>&lt;% &#125; %&gt;<br>&lt;/div&gt;<br></code></pre></td></tr></table></figure><h2 id="4-修改主题配置文件">4. 修改主题配置文件</h2><h3 id="4-1-引入-css-和-js-文件">4.1 引入 css 和 js 文件</h3><p>在<code>themes/fluid/source/css</code> 创建名为：<code>reward.css</code>的文件，并引入以下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.tea</span> &#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0.8125em</span>;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#999999</span>;<br>    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">10px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.reward-container</span> &#123;<br>    <span class="hljs-attribute">display</span>: flex;<br>    <span class="hljs-attribute">flex-direction</span>: column;<br>    <span class="hljs-attribute">align-items</span>: center;<br>    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">50px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.reward-btn</span> &#123;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">8px</span> <span class="hljs-number">24px</span>;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">18px</span>;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#007bff</span>;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>    <span class="hljs-attribute">border</span>: none;<br>    <span class="hljs-attribute">cursor</span>: pointer;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">10px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.reward-img-container</span> &#123;<br>    <span class="hljs-attribute">display</span>: none;<br>    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">20px</span>;<br>    <span class="hljs-comment">/* 图片容器的透明度 */</span><br>    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;<br>    <span class="hljs-comment">/* 过渡效果,使动画更平滑 */</span><br>    <span class="hljs-attribute">transition</span>: opacity <span class="hljs-number">2s</span> ease;<br>&#125;<br><br><span class="hljs-selector-class">.reward-img</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span>;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> dashed <span class="hljs-number">#ccc</span>;<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">4px</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;<br>&#125;<br><br><span class="hljs-comment">/* 单个图片的容器 */</span><br><span class="hljs-selector-class">.singleImgContainer</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">50%</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">240px</span>;<br>&#125;<br><br><span class="hljs-comment">/* 微信支付和支付宝支付的文字样式 */</span><br><span class="hljs-selector-class">.wechatPay</span>,<span class="hljs-selector-class">.aliPay</span> &#123;<br><span class="hljs-attribute">text-align</span>: center;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0.8125em</span>;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#999999</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>在<code>themes/fluid/source/js</code> 创建名为：<code>reward.js</code>的文件，并引入以下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> rewardBtn = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;rewardBtn&#x27;</span>);<br><span class="hljs-keyword">const</span> rewardImgContainer = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;rewardImgContainer&#x27;</span>);<br><br><span class="hljs-keyword">if</span>(rewardBtn)&#123;<br>rewardBtn.<span class="hljs-property">onclick</span> = <span class="hljs-function">() =&gt;</span> &#123;<br>rewardImgContainer.<span class="hljs-property">style</span>.<span class="hljs-property">display</span> = (rewardImgContainer.<span class="hljs-property">style</span>.<span class="hljs-property">display</span> === <span class="hljs-string">&#x27;none&#x27;</span> || rewardImgContainer.<span class="hljs-property">style</span>.<span class="hljs-property">display</span> === <span class="hljs-string">&#x27;&#x27;</span>) ? <span class="hljs-string">&#x27;inline-flex&#x27;</span> : <span class="hljs-string">&#x27;none&#x27;</span><br><span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>rewardImgContainer.<span class="hljs-property">style</span>.<span class="hljs-property">opacity</span> = (rewardImgContainer.<span class="hljs-property">style</span>.<span class="hljs-property">opacity</span> === <span class="hljs-string">&#x27;0&#x27;</span> || rewardImgContainer.<span class="hljs-property">style</span>.<span class="hljs-property">opacity</span> === <span class="hljs-string">&#x27;&#x27;</span>) ? <span class="hljs-string">&#x27;1&#x27;</span> : <span class="hljs-string">&#x27;0&#x27;</span><br>&#125;, <span class="hljs-number">10</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-2-修改-config-fluid-yml-文件">4.2 修改 _config.fluid.yml 文件</h3><p class="note note-warning">如果没有使用覆盖配置，就要打开博客源文件所在的文件夹下的 theme/fluid/_config.yml 文件.</p><p>在文件的 <code>custom_js</code>和<code>custom_css</code>分别引入自定义的 <code>reward.js</code>文件和<code>reward.css</code>文件。</p><p><img src="https://cdn.gumengyo.top//image-20230617235409049.png" srcset="/img/loading.gif" lazyload alt=""></p><p>打开博客源文件所在的文件夹下的 <code>_config.fluid.yml</code> 文件，在最后添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Donate 自己为 Fluid 主题增加的打赏功能</span><br><span class="hljs-comment"># `message` 是打赏提示语，可自定义</span><br><span class="hljs-comment"># `alipay` 是支付宝付款码， `wechatpay` 是微信付款码。</span><br><span class="hljs-attr">donate:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">message:</span> <span class="hljs-string">觉得不错的话，给点打赏吧</span> <span class="hljs-string">୧(๑•̀⌄•́๑)૭</span> <br>  <span class="hljs-attr">alipay:</span> <span class="hljs-string">/img/alipay.png</span><br>  <span class="hljs-attr">wechatpay:</span> <span class="hljs-string">/img/wechatpay.jpg</span><br></code></pre></td></tr></table></figure><p><strong>参数说明：</strong></p><ul><li><code>message</code>： 自定义打赏提示语</li><li><code>alipay</code>：支付宝打赏图片</li><li><code>wechatpay</code>：微信打赏图片</li></ul><p><strong>记得设置上自己的打赏图片哟~</strong></p><p>hexo 重新加载配置：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">hexo clean <span class="hljs-meta">&amp;&amp; hexo g</span><br></code></pre></td></tr></table></figure><h2 id="5-效果">5. 效果</h2><p><img src="https://cdn.gumengyo.top//image-20230618000812083.png" srcset="/img/loading.gif" lazyload alt="未点击打赏按钮时"></p><p><img src="https://cdn.gumengyo.top//image-20230618000739725.png" srcset="/img/loading.gif" lazyload alt="点击打赏按钮时"></p><h2 id="参考">参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://blog.kukmoon.com/7bf76e1d/">Kukmoon谷月.给 Hexo 博客的 Fluid 主题增加打赏模块.2021-11-18</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://hexo.fluid-dev.com/docs/guide/#%E8%A6%86%E7%9B%96%E9%85%8D%E7%BD%AE">Hexo Fluid 手册</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;给 Fluid 主题博客增加打赏功能&lt;/h1&gt;
&lt;h2 id=&quot;1-前言&quot;&gt;1. 前言&lt;/h2&gt;
&lt;p&gt;看到别人的博客都有打赏的功能，所以自己也想着在自己博客加入打赏功能，百度到了&lt;a href=&quot;https://blog.kukmoon.com/&quot;&gt;谷月&lt;/a&gt;的博文，</summary>
      
    
    
    
    <category term="博客配置" scheme="https://blog.jishuqin.cn/categories/%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="Fluid" scheme="https://blog.jishuqin.cn/tags/Fluid/"/>
    
    <category term="Hexo" scheme="https://blog.jishuqin.cn/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Github首页添加贪吃蛇动画</title>
    <link href="https://blog.jishuqin.cn/posts/c4d5e6f7/"/>
    <id>https://blog.jishuqin.cn/posts/c4d5e6f7/</id>
    <published>2023-06-11T15:58:00.000Z</published>
    <updated>2024-09-05T08:35:10.549Z</updated>
    
    <content type="html"><![CDATA[<h1>Github 首页添加贪吃蛇动画</h1><p><img src="https://cdn.gumengyo.top//snake.svg" srcset="/img/loading.gif" lazyload alt=""></p><h2 id="一、前言">一、前言</h2><p>动画所需要的代码是运行到 <code>Github Actions</code>。</p><p><code>GitHub Actions</code> 是一个用于自动化软件工作流程的平台，包括构建、测试和部署代码。它允许开发人员为软件开发过程的不同阶段创建自定义工作流程，并自动执行重复的任务。<code>GitHub Actions</code> 可以集成到 <code>GitHub</code> 存储库中，并可以被各种事件（如拉取请求、提交和发布）触发。使用 <code>GitHub Actions</code>，开发人员可以轻松协作、减少错误并节省时间。它支持广泛的编程语言，并提供了许多预构建的操作 <code>actions</code>在 <code>GitHub Marketplace</code> 中使用。</p><h2 id="二、创建-Action">二、创建 Action</h2><p class="note note-warning">需在 Github 账户同名的仓库下创建 Action，点击 New workflow -> Configure。</p><p><img src="https://cdn.gumengyo.top//202306120006322.png" srcset="/img/loading.gif" lazyload alt=""></p><p><img src="https://cdn.gumengyo.top//202306120006426.png" srcset="/img/loading.gif" lazyload alt=""></p><p>点击 Configure 后显示如下界面：</p><p><img src="https://cdn.gumengyo.top//202306120007077.png" srcset="/img/loading.gif" lazyload alt=""></p><h2 id="三、配置脚本">三、配置脚本</h2><p>将下面代码复制粘贴到 <code>yml</code>文件中，然后点击 <code>Commit changes</code>部署脚本。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">generate</span> <span class="hljs-string">animation</span><br><br><span class="hljs-attr">on:</span><br>  <span class="hljs-comment"># run automatically every 24 hours</span><br>  <span class="hljs-attr">schedule:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">cron:</span> <span class="hljs-string">&quot;0 */24 * * *&quot;</span> <br>  <br>  <span class="hljs-comment"># allows to manually run the job at any time</span><br>  <span class="hljs-attr">workflow_dispatch:</span><br>  <br>  <span class="hljs-comment"># run on every push on the master branch</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">main</span><br>  <br>  <br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">generate:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">timeout-minutes:</span> <span class="hljs-number">10</span><br>  <br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-comment"># generates a snake game from a github user (&lt;github_user_name&gt;) contributions graph, output a svg animation at &lt;svg_out_path&gt;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">generate</span> <span class="hljs-string">github-contribution-grid-snake.svg</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">Platane/snk/svg-only@v3</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">github_user_name:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.repository_owner</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">outputs:</span> <span class="hljs-string">|</span><br><span class="hljs-string">            dist/github-contribution-grid-snake.svg</span><br><span class="hljs-string">            dist/github-contribution-grid-snake-dark.svg?palette=github-dark</span><br><span class="hljs-string"></span>        <span class="hljs-attr">env:</span><br>          <span class="hljs-attr">GITHUB_TOKEN:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GIT_TOKEN</span> <span class="hljs-string">&#125;&#125;</span><br>  <br>  <br>      <span class="hljs-comment"># push the content of &lt;build_dir&gt; to a branch</span><br>      <span class="hljs-comment"># the content will be available at https://raw.githubusercontent.com/&lt;github_user&gt;/&lt;repository&gt;/&lt;target_branch&gt;/&lt;file&gt; , or as github page</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">push</span> <span class="hljs-string">github-contribution-grid-snake.svg</span> <span class="hljs-string">to</span> <span class="hljs-string">the</span> <span class="hljs-string">output</span> <span class="hljs-string">branch</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">crazy-max/ghaction-github-pages@v3.1.0</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">target_branch:</span> <span class="hljs-string">output</span><br>          <span class="hljs-attr">build_dir:</span> <span class="hljs-string">dist</span><br>        <span class="hljs-attr">env:</span><br>          <span class="hljs-attr">GITHUB_TOKEN:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GIT_TOKEN</span> <span class="hljs-string">&#125;&#125;</span><br></code></pre></td></tr></table></figure><p>添加 action secrets  <code>GIT_TOKEN</code> 值填你自己生成的github token</p><p><img src="https://cdn.gumengyo.top/Qexo/24/9/9864ac3c197376e0dfc8ac2936cf867a.png" srcset="/img/loading.gif" lazyload alt="https://cdn.gumengyo.top/Qexo/24/9/9864ac3c197376e0dfc8ac2936cf867a.png"></p><h2 id="四、设置-workflow-权限">四、设置 workflow 权限</h2><p><code>settings</code>-&gt; <code>Actions</code> -&gt; <code>General</code> -&gt; <code>Read and write permissions</code>设置读写权限</p><p><img src="https://cdn.gumengyo.top//image-20230615223425490.png" srcset="/img/loading.gif" lazyload alt=""></p><p><img src="https://cdn.gumengyo.top//image-20230615223547928.png" srcset="/img/loading.gif" lazyload alt=""></p><h2 id="五、运行-workflow">五、运行 workflow</h2><p>点击 <code>Actions</code>到刚才配置好的 <code>workflow</code>，点击 <code>Run workflow</code>安全运行脚本。</p><p><img src="https://cdn.gumengyo.top//202306120005242.png" srcset="/img/loading.gif" lazyload alt=""></p><h2 id="六、引入-svg-动画">六、引入 svg 动画</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">![](https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/你的 GitHub 名/</span>你的 GitHub 名<span class="hljs-regexp">/output/gi</span>thub-contribution-grid-snake.svg)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Github 首页添加贪吃蛇动画  一、前言 动画所需要的代码是运行到 Github Actions。 GitHub Actions 是一个用于自动化软件工作流程的平台，包括构建、测试和部署代码。它允许开发人员为软件开发过程的不同阶段创建自定义工作流程，并自动执行重复的任务。GitHub Actions 可以集成到 GitHub 存储库中，并可以被各种事件（如拉取请求、提交和发布）触发。使用 GitHub Actions，开发人员可以轻松协作、减少错误并节省时间。它支持广泛的编程语言，并提供了许多预构建的操作 actions在 GitHub Marketplace 中使用。 二、创建 Acti...</summary>
    
    
    
    <category term="页面美化" scheme="https://blog.jishuqin.cn/categories/%E9%A1%B5%E9%9D%A2%E7%BE%8E%E5%8C%96/"/>
    
    
    <category term="Github" scheme="https://blog.jishuqin.cn/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>加密算法</title>
    <link href="https://blog.jishuqin.cn/posts/1f2e3d4c/"/>
    <id>https://blog.jishuqin.cn/posts/1f2e3d4c/</id>
    <published>2023-06-09T17:19:00.000Z</published>
    <updated>2025-08-27T03:20:31.436Z</updated>
    
    <content type="html"><![CDATA[<p class="note note-primary">此文为我在校学习物联网安全课程的笔记~</p><h2 id="凯撒密码">凯撒密码</h2><p>凯撒密码是一种古代的加密方式，它是史上第一个广为使用的密码，得名于古罗马军事统帅凯撒。它的基本思想是对明文进行位移，即将明文中的每个字母都替换成字母表中靠它固定数量的字母。例如，若位移数为3，则a变成d，b变成e，…，y变成b，z变成c。</p><p>下面是一个例子，对明文“HELLO WORLD”进行加密：<br>位移数 = 3</p><p>明文  ：</p><table><thead><tr><th>H</th><th>E</th><th>L</th><th>L</th><th>O</th><th></th><th>W</th><th>O</th><th>R</th><th>L</th><th>D</th></tr></thead><tbody><tr><td>8</td><td>5</td><td>12</td><td>12</td><td>15</td><td></td><td>23</td><td>15</td><td>18</td><td>12</td><td>4</td></tr></tbody></table><p>密文  ：</p><table><thead><tr><th>K</th><th>H</th><th>O</th><th>O</th><th>R</th><th></th><th>Z</th><th>R</th><th>U</th><th>O</th><th>G</th></tr></thead><tbody><tr><td>11</td><td>8</td><td>15</td><td>15</td><td>18</td><td></td><td>26</td><td>18</td><td>21</td><td>15</td><td>7</td></tr></tbody></table><p>可以看到，每个字母都向后移动了三个位置，得到了对应的密文。</p><h2 id="置换密码">置换密码</h2><h3 id="平移置换加密法">平移置换加密法</h3><p>置换加密法的一种简单实现形式是平移置换加密法，这很像洗一副纸牌。在平移置换加密法中，将密文分成了固定长度的块。通常，块越大越不容易破译。设块大小为s，置换函数f用于从1到s中选取一个整数，每个块中的字母根据f重新排列。这种加密法的密钥就是（s，f）对应的具体数值。例如，设s为4，f给定为（2，4，1，3）。这意味着第1个字符移到位置3，第2个字符移到位置1，第3个字符移到位置4，第4个字符移到位置2。</p><p>例如，利用这种置换加密法将明文“The only limit to our realization of tomorrow will be our doubts of today”加密。首先，设置密钥（d，f），如将d设为7，则明文将被分成块，每块包含7个字母，不足的用空字符填满。然后，根据给定的函数f=（4，2，3，5，7，6，1）将每个块重新排列，生成对应的密文，如下所示。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">The <span class="hljs-keyword">only</span> <span class="hljs-keyword">limit</span> <span class="hljs-keyword">to</span> our realization <span class="hljs-keyword">of</span> tomorrow will be our doubts <span class="hljs-keyword">of</span> today<br></code></pre></td></tr></table></figure><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">ohenyltiimtotlrurelaotzainoioftmroowowillrueorodbsbtotfuydazzzo</span><br></code></pre></td></tr></table></figure><h3 id="列位移置换函数">列位移置换函数</h3><p>列置换加密法是将明文按行填写在一个矩形中，而密文则是以预定的顺序按列读取生成的。例如，如果矩形是4列5行，那么短语“encryption algorithms”可以如图6所示写入矩形中。</p><table><thead><tr><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th></tr></thead><tbody><tr><td style="text-align:center">e</td><td style="text-align:center">n</td><td style="text-align:center">c</td><td style="text-align:center">r</td></tr><tr><td style="text-align:center">y</td><td style="text-align:center">p</td><td style="text-align:center">t</td><td style="text-align:center">i</td></tr><tr><td style="text-align:center">o</td><td style="text-align:center">n</td><td style="text-align:center">a</td><td style="text-align:center">l</td></tr><tr><td style="text-align:center">g</td><td style="text-align:center">o</td><td style="text-align:center">r</td><td style="text-align:center">i</td></tr><tr><td style="text-align:center">t</td><td style="text-align:center">h</td><td style="text-align:center">m</td><td style="text-align:center">s</td></tr></tbody></table><p>按一定的顺序读取列以生成密文。对于这个示例，如果读取顺序是4、1、2、3，那么密文就是“riliseyogtnpnohctarm”。这种加密法要求填满矩形，因此，如果明文的字母不够，可以添加“x”或“q”甚至空字符。<br>这种加密法的密钥是列数和读取列的顺序。如果列数很多，则记起来可能会比较闲难，因此可以将它表示成一个关键词，以方便记忆。该关键词的长度等于列数，而其字母顺序决定读取列的顺序。</p><h3 id="栅栏式置换函数">栅栏式置换函数</h3><h4 id="对角线方式">对角线方式</h4><p><strong>使用了对角线方式。在这种加密法中，明文是按Z字形的方式填写在矩形的对角线上，而按行读取生成密文。</strong></p><p>例如，如果矩形的高为3，长为11，那么明文“this is a test”在该矩形中的填写如图4所示。而按行读取所生成的密文就是“tiehsstsiat”。</p><table><thead><tr><th style="text-align:center">t</th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center">i</th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center">e</th><th style="text-align:center"></th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center">h</td><td style="text-align:center"></td><td style="text-align:center">s</td><td style="text-align:center"></td><td style="text-align:center">s</td><td style="text-align:center"></td><td style="text-align:center">t</td><td style="text-align:center"></td><td style="text-align:center">s</td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">i</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">a</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">t</td></tr></tbody></table><h4 id="三角加密">三角加密</h4><p>例如，在一个固定大小的矩形中，可以将明文填写成一个三角形，然后按列读取生成密文。图5所示的是将明文“you must do that now”填写在一个7x4的矩形中。按行读取生成的密文是“tuhosayuttmdnoow”。</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center">y</th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">o</td><td style="text-align:center">u</td><td style="text-align:center">m</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center">u</td><td style="text-align:center">s</td><td style="text-align:center">t</td><td style="text-align:center">d</td><td style="text-align:center">o</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">t</td><td style="text-align:center">h</td><td style="text-align:center">a</td><td style="text-align:center">t</td><td style="text-align:center">n</td><td style="text-align:center">o</td><td style="text-align:center">w</td></tr></tbody></table><h2 id="RSA-加密算法">RSA 加密算法</h2><p><img src="https://cdn.gumengyo.top//1685516391257-d602b2d6-3cb6-4433-9a7d-d7dff8a1c159.png" srcset="/img/loading.gif" lazyload alt=""></p><p><img src="https://cdn.gumengyo.top//1685516409843-62eff3b1-0c9f-4e4c-adc0-4fceb806406f.png" srcset="/img/loading.gif" lazyload alt=""></p><p>RSA是一种非对称加密算法。假设需要将明文&quot;MONEY&quot;进行加密，并使用RSA算法保护数据的安全性。以下是RSA加密和解密的详细运算过程。</p><ol><li>密钥生成过程：</li></ol><p>选择两个大素数p=11和q=17，计算n=p<em>q=187，根据欧拉函数的定义φ(n)=(p-1)</em>(q-1)=160，选择一个小于φ(n)且与φ(n)互质的整数e=7，计算e的模逆数d，使得(e*d) mod φ(n)=1，有d=23。公钥为(n,e)=(187,7)，私钥为(n,d)=(187,23)。</p><ol start="2"><li>加密过程：</li></ol><p>将明文&quot;MONEY&quot;转换成相应的ASCII码数值&quot;77 79 78 69 89&quot;，然后使用公钥(n, e)对每个数字进行加密运算，并将得到的密文表示成16进制数。</p><ul><li><p>明文&quot;M&quot;，对应的ASCII码为77，加密后的密文为：</p><p>C = 77^7 mod 187 = 38</p><p>密文位数不足2位，需要在前面补0，因此该密文表示成16进制为0x26。</p></li><li><p>明文&quot;O&quot;，对应的ASCII码为79，加密后的密文为：</p><p>C = 79^7 mod 187 = 178</p><p>该密文表示成16进制为0xB2。</p></li><li><p>明文&quot;N&quot;，对应的ASCII码为78，加密后的密文为：</p><p>C = 78^7 mod 187 = 89</p><p>密文位数不足2位，需要在前面补0，因此该密文表示成16进制为0x59。</p></li><li><p>明文&quot;E&quot;，对应的ASCII码为69，加密后的密文为：</p><p>C = 69^7 mod 187 = 19</p><p>密文位数不足2位，需要在前面补0，因此该密文表示成16进制为0x13。</p></li><li><p>明文&quot;Y&quot;，对应的ASCII码为89，加密后的密文为：</p><p>C = 89^7 mod 187 = 157</p><p>该密文表示成16进制为0x9D。</p></li></ul><p>因此，明文&quot;MONEY&quot;加密后的密文为&quot;0x26 0xB2 0x59 0x13 0x9D&quot;。</p><ol start="3"><li>解密过程：</li></ol><p>使用私钥(n, d)对上一步得到的密文进行解密。</p><ul><li><p>密文&quot;0x26&quot;，解密后得到原文为：</p><p>M = 38^23 mod 187 = 77</p><p>解密后的原文为&quot;M&quot;。</p></li><li><p>密文&quot;0xB2&quot;，解密后得到原文为：</p><p>M = 178^23 mod 187 = 79</p><p>解密后的原文为&quot;O&quot;。</p></li><li><p>密文&quot;0x59&quot;，解密后得到原文为：</p><p>M = 89^23 mod 187 = 78</p><p>解密后的原文为&quot;N&quot;。</p></li><li><p>密文&quot;0x13&quot;，解密后得到原文为：</p><p>M = 19^23 mod 187 = 69</p><p>解密后的原文为&quot;E&quot;。</p></li><li><p>密文&quot;0x9D&quot;，解密后得到原文为：</p><p>M = 157^23 mod 187 = 89</p><p>解密后的原文为&quot;Y&quot;。</p></li></ul><p>因此，RSA算法加密后再解密，得到的原文是&quot;MONEY&quot;。</p><p>以上就是RSA加密和解密的详细运算过程。RSA算法是一种非常流行的公钥加密算法，其安全性取决于选取的参数。在实际应用中，需要采用足够长度的密钥和安全的参数，以保护数据的安全性。</p><h3 id="证明题">证明题</h3><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>证明题一：</mtext><mi>φ</mi><mtext>（</mtext><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>n</mi><mo>−</mo><mn>1</mn><mtext>，</mtext><mi>n</mi><mtext>为质数</mtext><mspace linebreak="newline"></mspace><mtext>证明：</mtext><mi>φ</mi><mtext>（</mtext><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>n</mi><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></munderover><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mfrac><mn>1</mn><msub><mi>P</mi><mi>i</mi></msub></mfrac><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>P</mi><mi>i</mi></msub><mtext>为</mtext><mi>n</mi><mtext>的质因数</mtext><mspace linebreak="newline"></mspace><mtext>当</mtext><mi>n</mi><mtext>为质数时，</mtext><mi>n</mi><mtext>的非</mtext><mn>1</mn><mtext>质因数为</mtext><mi>n</mi><mspace linebreak="newline"></mspace><mtext>那么</mtext><mi>φ</mi><mtext>（</mtext><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>n</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><mo stretchy="false">)</mo><mo>=</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">证明题一： \varphi（n) = n - 1，n 为质数\\证明：\varphi（n) = n\prod_{i=1}^k  (1 - \frac{1}{P_i}),P_i为n的质因数\\ 当n为质数时，n的非1质因数为n\\ 那么\varphi（n) = n(1-\frac{1}{n}) = n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">证明题一：</span><span class="mord mathnormal">φ</span><span class="mord cjk_fallback">（</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">为质数</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">证明：</span><span class="mord mathnormal">φ</span><span class="mord cjk_fallback">（</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1138em;vertical-align:-1.2777em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.1574em;vertical-align:-0.836em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">为</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">的质因数</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">当</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">为质数时，</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">的非</span><span class="mord">1</span><span class="mord cjk_fallback">质因数为</span><span class="mord mathnormal">n</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">那么</span><span class="mord mathnormal">φ</span><span class="mord cjk_fallback">（</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>证明：当</mtext><mi>m</mi><mo separator="true">,</mo><mi>n</mi><mtext>互质时，令</mtext><msub><mi>P</mi><mn>1</mn></msub><mtext>，</mtext><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mtext>，</mtext><msub><mi>P</mi><mi>k</mi></msub><mtext>为</mtext><mi>m</mi><mtext>的所有非</mtext><mn>1</mn><mtext>质因数</mtext><mspace linebreak="newline"></mspace><msub><mi>q</mi><mn>1</mn></msub><mtext>，</mtext><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mtext>，</mtext><msub><mi>q</mi><mi>r</mi></msub><mtext>为</mtext><mi>n</mi><mtext>的所有非</mtext><mn>1</mn><mtext>质因数</mtext><mspace linebreak="newline"></mspace><mtext>则</mtext><msub><mi>P</mi><mi>i</mi></msub><mo mathvariant="normal">≠</mo><msub><mi>q</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo>=</mo><mn>1</mn><mtext>，</mtext><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">,</mo><mi>k</mi><mo separator="true">,</mo><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">,</mo><mi>r</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>且</mtext><msub><mi>P</mi><mn>1</mn></msub><mtext>，</mtext><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><msub><mi>P</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>1</mn></msub><mtext>，</mtext><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">,</mo><msub><mi>q</mi><mi>r</mi></msub><mtext>为</mtext><mi>m</mi><mi>n</mi><mtext>的所有质因数</mtext><mspace linebreak="newline"></mspace><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>则</mtext><mi>φ</mi><mtext>（</mtext><mi>m</mi><mi>n</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>m</mi><mi>n</mi><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></munderover><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mfrac><mn>1</mn><msub><mi>P</mi><mi>i</mi></msub></mfrac><mtext>）</mtext><munderover><mo>∏</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>r</mi></munderover><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mfrac><mn>1</mn><msub><mi>q</mi><mi>j</mi></msub></mfrac><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>m</mi><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></munderover><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mfrac><mn>1</mn><msub><mi>P</mi><mi>i</mi></msub></mfrac><mo stretchy="false">)</mo><mi>n</mi><munderover><mo>∏</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>r</mi></munderover><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mfrac><mn>1</mn><msub><mi>q</mi><mi>j</mi></msub></mfrac><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>φ</mi><mtext>（</mtext><mi>m</mi><mo stretchy="false">)</mo><mi>φ</mi><mtext>（</mtext><mi>n</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">证明：当m,n互质时，令P_1，···，P_k为m的所有非1质因数\\q_1，···，q_r为n的所有非1质因数\\则P_i\neq q_j(i=1，···,k,j=1,···,r)\\且P_1，···P_k,q_1，···,q_r为mn的所有质因数\\\begin{equation*}\begin{split}          则\varphi（mn)           &amp;=mn\prod_{i=1}^k(1-\frac{1}{P_i}）\prod_{j=1}^r(1-\frac{1}{q_j})\\           &amp;=m\prod_{i=1}^k(1-\frac{1}{P_i})n\prod_{j=1}^r(1-\frac{1}{q_j})\\           &amp;=\varphi（m)\varphi（n)\\\end{split}\end{equation*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">证明：当</span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">互质时，令</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mpunct">⋅⋅⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">为</span><span class="mord mathnormal">m</span><span class="mord cjk_fallback">的所有非</span><span class="mord">1</span><span class="mord cjk_fallback">质因数</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mpunct">⋅⋅⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">为</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">的所有非</span><span class="mord">1</span><span class="mord cjk_fallback">质因数</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">则</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mpunct">⋅⋅⋅,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,⋅⋅⋅,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">且</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mpunct">⋅⋅⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mpunct">⋅⋅⋅,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">为</span><span class="mord mathnormal">mn</span><span class="mord cjk_fallback">的所有质因数</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:8.5998em;vertical-align:-4.0499em;"></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.5499em;"><span style="top:-6.5499em;"><span class="pstrut" style="height:6.5499em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.5499em;"><span style="top:-6.5499em;"><span class="pstrut" style="height:3.8361em;"></span><span class="mord"><span class="mord cjk_fallback">则</span><span class="mord mathnormal">φ</span><span class="mord cjk_fallback">（</span><span class="mord mathnormal">mn</span><span class="mclose">)</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3.8361em;"></span><span class="mord"></span></span><span style="top:-0.4462em;"><span class="pstrut" style="height:3.8361em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.0499em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.5499em;"><span style="top:-6.5499em;"><span class="pstrut" style="height:3.8361em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">mn</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord cjk_fallback">）</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3.8361em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span><span style="top:-0.4462em;"><span class="pstrut" style="height:3.8361em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">φ</span><span class="mord cjk_fallback">（</span><span class="mord mathnormal">m</span><span class="mclose">)</span><span class="mord mathnormal">φ</span><span class="mord cjk_fallback">（</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.0499em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.0499em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p class=&quot;note note-primary&quot;&gt;此文为我在校学习物联网安全课程的笔记~&lt;/p&gt;
&lt;h2 id=&quot;凯撒密码&quot;&gt;凯撒密码&lt;/h2&gt;
&lt;p&gt;凯撒密码是一种古代的加密方式，它是史上第一个广为使用的密码，得名于古罗马军事统帅凯撒。它的基本思想是对明文进行位移，即将</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.jishuqin.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="加密" scheme="https://blog.jishuqin.cn/tags/%E5%8A%A0%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>软考-软件设计师 笔记</title>
    <link href="https://blog.jishuqin.cn/posts/7b4c3d1e/"/>
    <id>https://blog.jishuqin.cn/posts/7b4c3d1e/</id>
    <published>2023-06-08T23:50:00.000Z</published>
    <updated>2025-08-27T03:20:31.437Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="0662ddc2bcc52aad534aa940a26654cc3218ff5688a0d6a4cab16f95b77fbee2"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这是一篇加密文章，需要密码才能继续阅读。</summary>
    
    
    
    <category term="学习笔记" scheme="https://blog.jishuqin.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="private" scheme="https://blog.jishuqin.cn/tags/private/"/>
    
  </entry>
  
  <entry>
    <title>大话设计模式</title>
    <link href="https://blog.jishuqin.cn/posts/4a5b6c7d/"/>
    <id>https://blog.jishuqin.cn/posts/4a5b6c7d/</id>
    <published>2023-05-20T20:20:00.000Z</published>
    <updated>2025-08-27T03:20:31.436Z</updated>
    
    <content type="html"><![CDATA[<h2 id="大话设计模式">大话设计模式</h2><p class="note note-primary">此文为我学习大话设计模式时的笔记，代码样例也是书里的。这本书对学习理解设计模式还是挺有帮助，推荐大家可以看看~</p><h3 id="第-0-章-面向对象基础">第 0 章 面向对象基础</h3><h4 id="1-类与实例">1. 类与实例</h4><p>万物皆对象，对象是一个自包含的实体，用一组可识别的特性和行为来标识。</p><p>类就是具有相同的属性和功能的对象的抽象的集合。</p><p>实例，就是一个真实的对象。而实例化就是创建对象的过程，使用new关键字来创建。</p><h4 id="2-构造方法">2. 构造方法</h4><p>构造方法，又叫构造函数，其实就是对类进行初始化。构造方法与类同名，无返回值，也不需要void，在 new 的使用调用。</p><p>所有类都有构造方法，如果你不编码则系统默认生成空的构造方法，若你有定义的构造方法，那么默认的构造方法就会失效了。</p><h4 id="3-方法重载">3. 方法重载</h4><p>方法重载提供了创建同名的多个方法的能力，但这些方法需使用不同的参数类型。</p><p>方法重载时，需方法名相同，但参数类型或个数必须要有所不同。</p><p>方法重载可在不改变原方法的基础上，新增功能。</p><h4 id="4-属性与修饰符">4. 属性与修饰符</h4><p>属性是一个方法或一对方法，即属性适合于以字段的方式使用方法调用的场合。</p><p>字段是存储类要满足其设计所需要的数据，字段是与类相关的变量。</p><h4 id="5-封装">5. 封装</h4><p>每个对象都包含它能进行操作所需要的所有信息，这个特性称为封装，因此对象不必依赖其他对象来完成自己的操作。</p><p>封装有多个好处：</p><ul><li>良好的封装能够减少耦合。</li><li>类内部的实现可以自由地修改。</li><li>类具有清晰的对外接口。</li></ul><h4 id="6-继承">6. 继承</h4><p>对象的继承代表了一种‘is-a’的关系，如果两个对象A和B，可以描述为‘B是A’，则表明B可以继承A。</p><p>继承者还可以理解为是对被继承者的特殊化，因为它除了具备被继承者的特性外，还具备自己独有的个性。</p><p>继承定义了类如何相互关联，共享特性。</p><p>继承的工作方式是：定义父类和子类，或叫作基类和派生类，其中子类继承父类的所有特性。</p><p>子类不但继承了父类的所有特性，还可以定义新的特性。</p><p>如果子类继承与父类：</p><ul><li>子类拥有父类非 private 的属性和功能</li><li>子类具有自己的属性和功能，即子类可以扩展父类没有的属性和功能</li><li>子类还可以以自己的方式实现父类的功能（方法重写）</li></ul><h3 id="第-1-章-简单工厂模式">第 1 章 简单工厂模式</h3><p>题目：请用C++、Java、C#或Python等任意一种面向对象语言实现一个计算器控制台程序，要去输入两个数和运算符号，得到结果。</p><p>​<img src="https://cdn.gumengyo.top//image-20230424201833506.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 顾梦</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@create</span> 2023/4/24</span><br><span class="hljs-comment"> * 简单工厂模式 实现简单计算器</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SimpleFactory</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">sc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br><br>        System.out.println(<span class="hljs-string">&quot;请输入数字A: &quot;</span>);<br>        <span class="hljs-type">double</span> <span class="hljs-variable">numberA</span> <span class="hljs-operator">=</span> Double.parseDouble(sc.nextLine());<br>        System.out.println(<span class="hljs-string">&quot;请选择运算符号(+、-、*、/): &quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">strOperate</span> <span class="hljs-operator">=</span> sc.nextLine();<br>        System.out.println(<span class="hljs-string">&quot;请输入数字B: &quot;</span>);<br>        <span class="hljs-type">double</span> <span class="hljs-variable">numberB</span> <span class="hljs-operator">=</span> Double.parseDouble(sc.nextLine());<br><br>        <span class="hljs-type">Operation</span> <span class="hljs-variable">operate</span> <span class="hljs-operator">=</span> OperationFactory.createOperate(strOperate);<br>        <span class="hljs-type">double</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> operate.getResult(numberA, numberB);<br><br>        System.out.println(<span class="hljs-string">&quot;结果是: &quot;</span> + result);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">OperationFactory</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Operation <span class="hljs-title function_">createOperate</span><span class="hljs-params">(String operate)</span> &#123;<br>        <span class="hljs-type">Operation</span> <span class="hljs-variable">oper</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">switch</span> (operate) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;+&quot;</span>:<br>                oper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Add</span>();<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;-&quot;</span>:<br>                oper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Sub</span>();<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;*&quot;</span>:<br>                oper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Mul</span>();<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;/&quot;</span>:<br>                oper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Div</span>();<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> oper;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Operation</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getResult</span><span class="hljs-params">(<span class="hljs-type">double</span> numberA, <span class="hljs-type">double</span> numberB)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0d</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Add</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Operation</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getResult</span><span class="hljs-params">(<span class="hljs-type">double</span> numberA, <span class="hljs-type">double</span> numberB)</span> &#123;<br>        <span class="hljs-keyword">return</span> numberA + numberB;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Sub</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Operation</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getResult</span><span class="hljs-params">(<span class="hljs-type">double</span> numberA, <span class="hljs-type">double</span> numberB)</span> &#123;<br>        <span class="hljs-keyword">return</span> numberA + numberB;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Mul</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Operation</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getResult</span><span class="hljs-params">(<span class="hljs-type">double</span> numberA, <span class="hljs-type">double</span> numberB)</span> &#123;<br>        <span class="hljs-keyword">return</span> numberA * numberB;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Div</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Operation</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getResult</span><span class="hljs-params">(<span class="hljs-type">double</span> numberA, <span class="hljs-type">double</span> numberB)</span> &#123;<br>        <span class="hljs-keyword">if</span> (numberB == <span class="hljs-number">0</span>) &#123;<br>            System.out.println(<span class="hljs-string">&quot;除数不能为0&quot;</span>);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArithmeticException</span>();<br>        &#125;<br>        <span class="hljs-keyword">return</span> numberA / numberB;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="第-2-章-策略模式">第 2 章 策略模式</h3><p><strong>策略模式（Strategy）：它定义了算法家族，分别封装起来，让它们之间可以互相替换，此模式让算法的变化，不会影响到使用算法的客户。</strong></p><p><img src="https://cdn.gumengyo.top//image-20230428085826966.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 顾梦</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@create</span> 2023/4/27</span><br><span class="hljs-comment"> * 策略模式 解决商场收银问题</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">StrategyPattern</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><br>        <span class="hljs-type">double</span> <span class="hljs-variable">price</span> <span class="hljs-operator">=</span> <span class="hljs-number">0d</span>; <span class="hljs-comment">// 商品单价</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">num</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;    <span class="hljs-comment">// 商品购买数量</span><br>        <span class="hljs-type">double</span> <span class="hljs-variable">totalPrices</span> <span class="hljs-operator">=</span> <span class="hljs-number">0d</span>; <span class="hljs-comment">// 当前商品合计费用</span><br>        <span class="hljs-type">double</span> <span class="hljs-variable">total</span> <span class="hljs-operator">=</span> <span class="hljs-number">0d</span>;  <span class="hljs-comment">// 总计所有商品费用</span><br><br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">sc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-keyword">do</span> &#123;<br>            System.out.println(<span class="hljs-string">&quot;请输入商品销售模式 1.原价 2.八折 3.满300返100&quot;</span>);<br>            <span class="hljs-type">int</span> <span class="hljs-variable">discount</span> <span class="hljs-operator">=</span> Integer.parseInt(sc.nextLine());<br>            System.out.println(<span class="hljs-string">&quot;请输入商品单价：&quot;</span>);<br>            price = Double.parseDouble(sc.nextLine());<br>            System.out.println(<span class="hljs-string">&quot;请输入商品数量：&quot;</span>);<br>            num = Integer.parseInt(sc.nextLine());<br>            System.out.println();<br><br>            <span class="hljs-keyword">if</span> (price &gt; <span class="hljs-number">0</span> &amp;&amp; num &gt; <span class="hljs-number">0</span>)&#123;<br>                <span class="hljs-type">CashContext</span> <span class="hljs-variable">cc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CashContext</span>(discount);<br>                totalPrices = cc.getResult(price, num);<br>                total = total + totalPrices;<br><br>                System.out.println();<br>                System.out.println(<span class="hljs-string">&quot;单价：&quot;</span> + price +<span class="hljs-string">&quot;元，数量：&quot;</span> + num + <span class="hljs-string">&quot; 合计：&quot;</span> + totalPrices + <span class="hljs-string">&quot;元&quot;</span>);<br>                System.out.println();<br>                System.out.println(<span class="hljs-string">&quot;总计：&quot;</span> + total + <span class="hljs-string">&quot;元&quot;</span>);<br>                System.out.println();<br>            &#125;<br><br>        &#125;<span class="hljs-keyword">while</span> (price &gt; <span class="hljs-number">0</span> &amp;&amp; num &gt; <span class="hljs-number">0</span>);<br><br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 收费抽象类</span><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CashSuper</span>&#123;<br><br>    <span class="hljs-comment">// 收取费用的抽象方法，参数为单价和数量</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-type">double</span> <span class="hljs-title function_">acceptCash</span><span class="hljs-params">(<span class="hljs-type">double</span> price,<span class="hljs-type">int</span> num)</span>;<br>&#125;<br><br><span class="hljs-comment">// 正常收费</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">CashNormal</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">CashSuper</span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">acceptCash</span><span class="hljs-params">(<span class="hljs-type">double</span> price, <span class="hljs-type">int</span> num)</span> &#123;<br>        <span class="hljs-keyword">return</span> price * num;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">CashRebate</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">CashSuper</span>&#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">double</span> <span class="hljs-variable">moneyRebate</span> <span class="hljs-operator">=</span> <span class="hljs-number">1d</span>;<br><br>    <span class="hljs-comment">// 初始化时必须输入折扣率。八折就输入0.8</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">CashRebate</span><span class="hljs-params">(<span class="hljs-type">double</span> moneyRebate)</span>&#123;<br>        <span class="hljs-built_in">this</span>.moneyRebate = moneyRebate;<br>    &#125;<br><br>    <span class="hljs-comment">// 计算收费时需要在原价基础上乘以折扣率</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">acceptCash</span><span class="hljs-params">(<span class="hljs-type">double</span> price, <span class="hljs-type">int</span> num)</span> &#123;<br>        <span class="hljs-keyword">return</span> price * num * <span class="hljs-built_in">this</span>.moneyRebate;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">CashReturn</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">CashSuper</span>&#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">double</span> <span class="hljs-variable">moneyCondition</span> <span class="hljs-operator">=</span> <span class="hljs-number">0d</span>; <span class="hljs-comment">// 返利条件</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">double</span> <span class="hljs-variable">moneyReturn</span> <span class="hljs-operator">=</span> <span class="hljs-number">0d</span>; <span class="hljs-comment">// 返利值</span><br><br>    <span class="hljs-comment">// 返利收费。初始化时需要输入返利条件和返利值。</span><br>    <span class="hljs-comment">// 比如&quot;满300返100&quot;，就是moneyCondition=300，moneyReturn100</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">CashReturn</span><span class="hljs-params">(<span class="hljs-type">double</span> moneyCondition, <span class="hljs-type">double</span> moneyReturn)</span> &#123;<br>        <span class="hljs-built_in">this</span>.moneyCondition = moneyCondition;<br>        <span class="hljs-built_in">this</span>.moneyReturn = moneyReturn;<br>    &#125;<br><br>    <span class="hljs-comment">// 计算收费时，当达到返利条件，就原价减去返利值</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">acceptCash</span><span class="hljs-params">(<span class="hljs-type">double</span> price, <span class="hljs-type">int</span> num)</span> &#123;<br>        <span class="hljs-type">double</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> price * num;<br>        <span class="hljs-keyword">if</span> (moneyCondition &gt; <span class="hljs-number">0</span> &amp;&amp; price &gt;= moneyCondition)&#123;<br>            result = result - Math.floor(result / moneyCondition) * moneyReturn;<br>        &#125;<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">CashContext</span>&#123;<br>    <span class="hljs-keyword">private</span> CashSuper cs; <span class="hljs-comment">// 声明一个CashSuper对象</span><br><br>    <span class="hljs-comment">// 通过构造方法，传入具体的收费策略</span><br><span class="hljs-comment">//    public CashContext(CashSuper csuper)&#123;</span><br><span class="hljs-comment">//        this.cs = csuper;</span><br><span class="hljs-comment">//    &#125;</span><br><br>    <span class="hljs-comment">// 结合简单工厂模式</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">CashContext</span><span class="hljs-params">(<span class="hljs-type">int</span> cashType)</span>&#123;<br>        <span class="hljs-keyword">switch</span> (cashType)&#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>                <span class="hljs-built_in">this</span>.cs = <span class="hljs-keyword">new</span> <span class="hljs-title class_">CashNormal</span>();<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>                <span class="hljs-built_in">this</span>.cs = <span class="hljs-keyword">new</span> <span class="hljs-title class_">CashRebate</span>(<span class="hljs-number">0.8d</span>);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>                <span class="hljs-built_in">this</span>.cs = <span class="hljs-keyword">new</span> <span class="hljs-title class_">CashReturn</span>(<span class="hljs-number">300d</span>,<span class="hljs-number">100d</span>);<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getResult</span><span class="hljs-params">(<span class="hljs-type">double</span> price, <span class="hljs-type">int</span> num)</span> &#123;<br>        <span class="hljs-comment">// 根据收费策略的不同，获得计算结果</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.cs.acceptCash(price, num);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="第-3-章-单一职责原则">第 3 章 单一职责原则</h3><p><strong>单一职责原则（SRP），就一个类而言，应该仅有一个引起它变化的原因。</strong></p><ul><li>如果一个类承担的职责过多，就等于把这些职责耦合在一起，一个职责的变化可能会削弱或者抑制这个类完成其他职责的能力。这种耦合会导致脆弱的设计，当变化发生时，设计会遭受到意想不到的破坏。</li><li>软件设计真正要做的许多内容，就是发现职责并把那么些职责相互分离。</li><li>如果你能够想到多于一个的动机去改变一个类，那么这个类就是具有多于一个的职责。</li></ul><h3 id="第-4-章-开放-封闭原则">第 4 章 开放-封闭原则</h3><p><strong>开放-封闭原则，是说软件实体（类、模块、函数等）应该可以扩展，但是不可修改。</strong></p><ul><li>对于扩展是开放的（Open for extension)</li><li>对于修改是封闭的（Closed for modification）</li></ul><p><img src="https://cdn.gumengyo.top//image-20230428090233389.png" srcset="/img/loading.gif" lazyload alt=""></p><p>开放-封闭原则是面向对象设计的核心所在。遵循这个原则可以带来面向对象技术所声称的巨大好处，也就是可维护、可扩展、可复用、灵活性好。</p><h3 id="第-5-章-依赖倒转原则">第 5 章 依赖倒转原则</h3><p>依赖倒转原则：</p><ul><li>高层模块不应该依赖低层模块。两个都应该依赖抽象。</li><li>抽象不应该依赖细节。细节应该依赖抽象。</li></ul><p>里氏代换原则（LSP）：子类型必须能够替换掉它们的父类型。</p><p>由于子类型的可替换性才使得使用父类类型的模块在无须修改的情况下就可以扩展。</p><p><img src="https://cdn.gumengyo.top//image-20230428092805695.png" srcset="/img/loading.gif" lazyload alt=""></p><h3 id="第-6-章-装饰模式">第 6 章 装饰模式</h3><p><strong>装饰模式（Decorator），动态地给一个对象添加一些额外的职责，就增加功能来说，装饰模式比生成子类更为灵活。</strong></p><p><img src="https://cdn.gumengyo.top//image-20230428141827346.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 顾梦</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@create</span> 2023/4/28</span><br><span class="hljs-comment"> * 装饰模式</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DecoratorPattern</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">ConcreteComponent</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteComponent</span>();<br>        <span class="hljs-type">ConcreteDecoratorA</span> <span class="hljs-variable">d1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteDecoratorA</span>();<br>        <span class="hljs-type">ConcreteDecoratorB</span> <span class="hljs-variable">d2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteDecoratorB</span>();<br><br>        d1.SetComponent(c); <span class="hljs-comment">// 首先用d1来包装c</span><br>        d2.SetComponent(d1); <span class="hljs-comment">// 再用d2来包装d1</span><br>        d2.Operation(); <span class="hljs-comment">// 最终执行d2的Operation()</span><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Component</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">Operation</span><span class="hljs-params">()</span>;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteComponent</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Component</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">Operation</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;具体对象的实际操作&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Decorator</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Component</span>&#123;<br>    <span class="hljs-keyword">protected</span> Component component;<br><br>    <span class="hljs-comment">// 装饰一个Component 对象</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">SetComponent</span><span class="hljs-params">(Component component)</span>&#123;<br>        <span class="hljs-built_in">this</span>.component = component;<br>    &#125;<br><br>    <span class="hljs-comment">// 重写Operation()，实际调用component的Operation方法</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">Operation</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">if</span> (component != <span class="hljs-literal">null</span>)&#123;<br>            component.Operation();;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteDecoratorA</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Decorator</span>&#123;<br><br>    <span class="hljs-keyword">protected</span> String addedState; <span class="hljs-comment">// 本类独有字字段，以区别于ConcreteDecoratorB类</span><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">Operation</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-built_in">super</span>.Operation();  <span class="hljs-comment">// 首先运行了原有Component的Operation()</span><br><br>        <span class="hljs-built_in">this</span>.addedState = <span class="hljs-string">&quot;具有装饰对象A的独有操作&quot;</span>; <span class="hljs-comment">// 再执行本类独有的功能</span><br>        System.out.println(<span class="hljs-built_in">this</span>.addedState);<br><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteDecoratorB</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Decorator</span>&#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">Operation</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-built_in">super</span>.Operation(); <span class="hljs-comment">// 首先运行了原有Component的Operation()</span><br>        <span class="hljs-built_in">this</span>.AddedBehavior(); <span class="hljs-comment">// 再执行本类独有功能</span><br>    &#125;<br><br>    <span class="hljs-comment">// 本类独有方法，以区别于ConcreteDecoratorA类</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">AddedBehavior</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;具有装饰对象B的独有操作&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>商场促销——简单工厂+策略+装饰模式实现</strong></p><p><img src="https://cdn.gumengyo.top//image-20230428141722534.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.jishuin;<br><br><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 顾梦</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@create</span> 2023/4/28</span><br><span class="hljs-comment"> * 商场促销——简单工厂+策略+装饰模式</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Promotion</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;**********************************************&quot;</span>);<br>        System.out.println(<span class="hljs-string">&quot;《大话设计模式》代码样例&quot;</span>);<br>        System.out.println();<br><br>        <span class="hljs-type">int</span> <span class="hljs-variable">discount</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;         <span class="hljs-comment">//商品折扣模式</span><br>        <span class="hljs-type">double</span> <span class="hljs-variable">price</span> <span class="hljs-operator">=</span> <span class="hljs-number">0d</span>;         <span class="hljs-comment">//商品单价</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">num</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;            <span class="hljs-comment">//商品购买数量</span><br>        <span class="hljs-type">double</span> <span class="hljs-variable">totalPrices</span> <span class="hljs-operator">=</span> <span class="hljs-number">0d</span>;<span class="hljs-comment">//当前商品合计费用</span><br>        <span class="hljs-type">double</span> <span class="hljs-variable">total</span> <span class="hljs-operator">=</span> <span class="hljs-number">0d</span>;        <span class="hljs-comment">//总计所有商品费用</span><br><br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">sc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br><br>        <span class="hljs-keyword">do</span> &#123;<br>            System.out.println(<span class="hljs-string">&quot;商品折扣模式如下:&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot;1.正常收费&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot;2.打八折&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot;3.打七折&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot;4.满300送100&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot;5.先打8折，再满300送100&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot;6.先满200送50，再打7折&quot;</span>);<br>            System.out.println(<span class="hljs-string">&quot;请输入商品折扣模式:&quot;</span>);<br>            discount = Integer.parseInt(sc.nextLine());<br>            System.out.println(<span class="hljs-string">&quot;请输入商品单价：&quot;</span>);<br>            price = Double.parseDouble(sc.nextLine());<br>            System.out.println(<span class="hljs-string">&quot;请输入商品数量：&quot;</span>);<br>            num = Integer.parseInt(sc.nextLine());<br>            System.out.println();<br><br>            <span class="hljs-keyword">if</span> (price&gt;<span class="hljs-number">0</span> &amp;&amp; num&gt;<span class="hljs-number">0</span>)&#123;<br><br>                <span class="hljs-comment">//根据用户输入，将对应的策略对象作为参数传入CashContext对象中</span><br>                <span class="hljs-type">CashContext</span> <span class="hljs-variable">cc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CashContext</span>(discount);<br><br>                <span class="hljs-comment">//通过Context的getResult方法的调用，可以得到收取费用的结果</span><br>                <span class="hljs-comment">//让具体算法与客户进行了隔离</span><br>                totalPrices = cc.getResult(price,num);<br><br>                total = total + totalPrices;<br><br>                System.out.println();<br>                System.out.println(<span class="hljs-string">&quot;单价：&quot;</span>+ price + <span class="hljs-string">&quot;元 数量：&quot;</span>+ num +<span class="hljs-string">&quot; 合计：&quot;</span>+ totalPrices +<span class="hljs-string">&quot;元&quot;</span>);<br>                System.out.println();<br>                System.out.println(<span class="hljs-string">&quot;总计：&quot;</span>+ total+<span class="hljs-string">&quot;元&quot;</span>);<br>                System.out.println();<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">while</span>(price&gt;<span class="hljs-number">0</span> &amp;&amp; num&gt;<span class="hljs-number">0</span>);<br><br>        System.out.println();<br>        System.out.println(<span class="hljs-string">&quot;**********************************************&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">ISale</span> &#123;<br>    <span class="hljs-type">double</span> <span class="hljs-title function_">acceptCash</span><span class="hljs-params">(<span class="hljs-type">double</span> price,<span class="hljs-type">int</span> num)</span>;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">CashSuper</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">ISale</span> &#123;<br><br>    <span class="hljs-keyword">protected</span> ISale component;<br><br>    <span class="hljs-comment">//装饰对象</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">decorate</span><span class="hljs-params">(ISale component)</span> &#123;<br>        <span class="hljs-built_in">this</span>.component=component;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">acceptCash</span><span class="hljs-params">(<span class="hljs-type">double</span> price,<span class="hljs-type">int</span> num)</span>&#123;<br><br>        <span class="hljs-type">double</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> <span class="hljs-number">0d</span>;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.component != <span class="hljs-literal">null</span>)&#123;<br>            <span class="hljs-comment">//若装饰对象存在，则执行装饰的算法运算</span><br>            result = <span class="hljs-built_in">this</span>.component.acceptCash(price,num);<br>        &#125;<br>        <span class="hljs-keyword">return</span> result;<br><br>    &#125;<br><br>&#125;<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">CashNormal</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">ISale</span> &#123;<br>    <span class="hljs-comment">//正常收费，原价返回</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">acceptCash</span><span class="hljs-params">(<span class="hljs-type">double</span> price,<span class="hljs-type">int</span> num)</span>&#123;<br>        <span class="hljs-keyword">return</span> price * num;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">CashRebate</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">CashSuper</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">double</span> <span class="hljs-variable">moneyRebate</span> <span class="hljs-operator">=</span> <span class="hljs-number">1d</span>;<br>    <span class="hljs-comment">//打折收费。初始化时必需输入折扣率。八折就输入0.8</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">CashRebate</span><span class="hljs-params">(<span class="hljs-type">double</span> moneyRebate)</span>&#123;<br>        <span class="hljs-built_in">this</span>.moneyRebate = moneyRebate;<br>    &#125;<br><br>    <span class="hljs-comment">//计算收费时需要在原价基础上乘以折扣率</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">acceptCash</span><span class="hljs-params">(<span class="hljs-type">double</span> price,<span class="hljs-type">int</span> num)</span>&#123;<br>        <span class="hljs-type">double</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> price * num * <span class="hljs-built_in">this</span>.moneyRebate;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">super</span>.acceptCash(result,<span class="hljs-number">1</span>);<br>    &#125;<br><br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">CashReturn</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">CashSuper</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">double</span> <span class="hljs-variable">moneyCondition</span> <span class="hljs-operator">=</span> <span class="hljs-number">0d</span>; <span class="hljs-comment">//返利条件</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">double</span> <span class="hljs-variable">moneyReturn</span> <span class="hljs-operator">=</span> <span class="hljs-number">0d</span>;    <span class="hljs-comment">//返利值</span><br><br>    <span class="hljs-comment">//返利收费。初始化时需要输入返利条件和返利值。</span><br>    <span class="hljs-comment">//比如“满300返100”，就是moneyCondition=300,moneyReturn=100</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">CashReturn</span><span class="hljs-params">(<span class="hljs-type">double</span> moneyCondition,<span class="hljs-type">double</span> moneyReturn)</span>&#123;<br>        <span class="hljs-built_in">this</span>.moneyCondition = moneyCondition;<br>        <span class="hljs-built_in">this</span>.moneyReturn = moneyReturn;<br>    &#125;<br><br>    <span class="hljs-comment">//计算收费时，当达到返利条件，就原价减去返利值</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">acceptCash</span><span class="hljs-params">(<span class="hljs-type">double</span> price,<span class="hljs-type">int</span> num)</span>&#123;<br>        <span class="hljs-type">double</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> price * num;<br>        <span class="hljs-keyword">if</span> (moneyCondition&gt;<span class="hljs-number">0</span> &amp;&amp; result &gt;= moneyCondition)<br>            result = result - Math.floor(result / moneyCondition) * moneyReturn;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">super</span>.acceptCash(result,<span class="hljs-number">1</span>);<br>    &#125;<br><br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">CashContext</span> &#123;<br>    <span class="hljs-keyword">private</span> ISale cs;   <span class="hljs-comment">//声明一个ISale接口对象</span><br><br>    <span class="hljs-comment">//通过构造方法，传入具体的收费策略</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">CashContext</span><span class="hljs-params">(<span class="hljs-type">int</span> cashType)</span> &#123;<br>        <span class="hljs-keyword">switch</span> (cashType) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>                <span class="hljs-built_in">this</span>.cs = <span class="hljs-keyword">new</span> <span class="hljs-title class_">CashNormal</span>();<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>                <span class="hljs-type">CashRebate</span> <span class="hljs-variable">cr1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CashRebate</span>(<span class="hljs-number">0.7d</span>);<br>                cr1.decorate(<span class="hljs-keyword">new</span> <span class="hljs-title class_">CashNormal</span>());<br>                <span class="hljs-built_in">this</span>.cs = cr1;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>                <span class="hljs-type">CashRebate</span> <span class="hljs-variable">cr2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CashRebate</span>(<span class="hljs-number">0.8d</span>);<br>                cr2.decorate(<span class="hljs-keyword">new</span> <span class="hljs-title class_">CashNormal</span>());<br>                <span class="hljs-built_in">this</span>.cs = cr2;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:<br>                <span class="hljs-type">CashReturn</span> <span class="hljs-variable">cr3</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CashReturn</span>(<span class="hljs-number">300d</span>, <span class="hljs-number">100d</span>);<br>                cr3.decorate(<span class="hljs-keyword">new</span> <span class="hljs-title class_">CashNormal</span>());<br>                <span class="hljs-built_in">this</span>.cs = cr3;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">5</span>:<br>                <span class="hljs-comment">//先打8折,再满300返100</span><br>                <span class="hljs-type">CashNormal</span> <span class="hljs-variable">cn</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CashNormal</span>();<br>                <span class="hljs-type">CashReturn</span> <span class="hljs-variable">cr4</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CashReturn</span>(<span class="hljs-number">300d</span>, <span class="hljs-number">100d</span>);<br>                <span class="hljs-type">CashRebate</span> <span class="hljs-variable">cr5</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CashRebate</span>(<span class="hljs-number">0.8d</span>);<br>                cr4.decorate(cn);   <span class="hljs-comment">//用满300返100算法包装基本的原价算法</span><br>                cr5.decorate(cr4);  <span class="hljs-comment">//打8折算法装饰满300返100算法</span><br>                <span class="hljs-built_in">this</span>.cs = cr5;      <span class="hljs-comment">//将包装好的算法组合引用传递给cs对象</span><br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">6</span>:<br>                <span class="hljs-comment">//先满200返50，再打7折</span><br>                <span class="hljs-type">CashNormal</span> <span class="hljs-variable">cn2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CashNormal</span>();<br>                <span class="hljs-type">CashRebate</span> <span class="hljs-variable">cr6</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CashRebate</span>(<span class="hljs-number">0.7d</span>);<br>                <span class="hljs-type">CashReturn</span> <span class="hljs-variable">cr7</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CashReturn</span>(<span class="hljs-number">200d</span>, <span class="hljs-number">50d</span>);<br>                cr6.decorate(cn2);  <span class="hljs-comment">//用打7折算法包装基本的原价算法</span><br>                cr7.decorate(cr6);  <span class="hljs-comment">//满200返50算法装饰打7折算法</span><br>                <span class="hljs-built_in">this</span>.cs = cr7;      <span class="hljs-comment">//将包装好的算法组合引用传递给cs对象</span><br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getResult</span><span class="hljs-params">(<span class="hljs-type">double</span> price,<span class="hljs-type">int</span> num)</span>&#123;<br>        <span class="hljs-comment">//根据收费策略的不同，获得计算结果</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.cs.acceptCash(price,num);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="第-7-章-代理模式">第 7 章 代理模式</h3><p><strong>代理模式（Proxy），为其他对象提供一种代理以控制对这个对象的访问。</strong></p><p><img src="https://cdn.gumengyo.top//image-20230503180154059.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 顾梦</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@create</span> 2023/4/27</span><br><span class="hljs-comment"> * 代理模式——为别人做嫁衣</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ProxyPattern</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">SchoolGirl</span> <span class="hljs-variable">girlLjj</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SchoolGirl</span>();<br>        girlLjj.setName(<span class="hljs-string">&quot;李娇娇&quot;</span>);<br><br>        <span class="hljs-type">Proxy</span> <span class="hljs-variable">boyDl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Proxy</span>(girlLjj);<br>        boyDl.giveDolls();<br>        boyDl.giveFlowers();<br>        boyDl.giveChocolate();<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">IGiveGift</span>&#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">giveDolls</span><span class="hljs-params">()</span>;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">giveFlowers</span><span class="hljs-params">()</span>;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">giveChocolate</span><span class="hljs-params">()</span>;<br>&#125;<br><br><span class="hljs-comment">// 被追求者类</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">SchoolGirl</span>&#123;<br>    <span class="hljs-keyword">private</span> String name;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setName</span><span class="hljs-params">(String name)</span>&#123;<br>        <span class="hljs-built_in">this</span>.name = name;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 追求者类</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Pursuit</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">IGiveGift</span>&#123;<br><br>    <span class="hljs-keyword">private</span> SchoolGirl mm;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Pursuit</span><span class="hljs-params">(SchoolGirl mm)</span>&#123;<br>        <span class="hljs-built_in">this</span>.mm = mm;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">giveDolls</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-built_in">this</span>.mm.getName() + <span class="hljs-string">&quot;,你好！送你洋娃娃。&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">giveFlowers</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-built_in">this</span>.mm.getName() + <span class="hljs-string">&quot;,你好！送你鲜花。&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">giveChocolate</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-built_in">this</span>.mm.getName() + <span class="hljs-string">&quot;,你好！送你巧克力。&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 代理类</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Proxy</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">IGiveGift</span>&#123;<br><br>    <span class="hljs-keyword">private</span> Pursuit gg;     <span class="hljs-comment">// 认识追求者</span><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Proxy</span><span class="hljs-params">(SchoolGirl mm)</span>&#123;<br>        <span class="hljs-built_in">this</span>.gg = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Pursuit</span>(mm);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">giveDolls</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-built_in">this</span>.gg.giveDolls();<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">giveFlowers</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-built_in">this</span>.gg.giveFlowers();<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">giveChocolate</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-built_in">this</span>.gg.giveChocolate();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>代理模式应用</strong>：</p><ul><li>远程代理，也就是为一个对象在不同的地址空间提供局部代表。这样可以隐藏一个对象存在于不同地址空间的事实。</li><li>虚拟代理，是根据需要创建开销很大的对象。通过它来存放实例化需要很长时间的真实对象。</li><li>安全代理，用来控制真实对象访问的权限。</li><li>智能指引，是指当调用真实的对象时，代理处理另外一些事。</li></ul><h3 id="第-8-章-工厂方法模式">第 8 章 工厂方法模式</h3><p><strong>工厂方法模式（Factory Method），定义一个用于创建对象的接口，让子类决定实例化哪一个类。工厂方法使一个类的实例化延迟到其子类。</strong></p><p>工厂方法模式是简单工厂模式的进一步抽象和推广。</p><p>优点：</p><ul><li>对于复杂的参数构造对象，可以很好地对外层屏蔽代码的复杂性</li><li>很好的解耦能力</li></ul><p><img src="https://cdn.gumengyo.top/Snipaste_2023-05-04_09-20-36.png" srcset="/img/loading.gif" lazyload alt=""><br><img src="https://cdn.gumengyo.top/Snipaste_2023-05-04_11-22-06.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.jishuqin.chapter08;<br><br><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FactoryMethod</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">sc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br><br>        System.out.println(<span class="hljs-string">&quot;请输入数字A: &quot;</span>);<br>        <span class="hljs-type">double</span> <span class="hljs-variable">numberA</span> <span class="hljs-operator">=</span> Double.parseDouble(sc.nextLine());<br>        System.out.println(<span class="hljs-string">&quot;请选择运算符号(+、-、*、/、pow、log): &quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">strOperate</span> <span class="hljs-operator">=</span> sc.nextLine();<br>        System.out.println(<span class="hljs-string">&quot;请输入数字B: &quot;</span>);<br>        <span class="hljs-type">double</span> <span class="hljs-variable">numberB</span> <span class="hljs-operator">=</span> Double.parseDouble(sc.nextLine());<br><br>        <span class="hljs-type">Operation</span> <span class="hljs-variable">operate</span> <span class="hljs-operator">=</span> OperationFactory.createOperate(strOperate);<br>        <span class="hljs-type">double</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> operate.getResult(numberA, numberB);<br><br>        System.out.println(<span class="hljs-string">&quot;结果是: &quot;</span> + result);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Operation</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getResult</span><span class="hljs-params">(<span class="hljs-type">double</span> numberA, <span class="hljs-type">double</span> numberB)</span> ;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Add</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Operation</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getResult</span><span class="hljs-params">(<span class="hljs-type">double</span> numberA, <span class="hljs-type">double</span> numberB)</span> &#123;<br>        <span class="hljs-keyword">return</span> numberA + numberB;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Sub</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Operation</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getResult</span><span class="hljs-params">(<span class="hljs-type">double</span> numberA, <span class="hljs-type">double</span> numberB)</span> &#123;<br>        <span class="hljs-keyword">return</span> numberA + numberB;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Mul</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Operation</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getResult</span><span class="hljs-params">(<span class="hljs-type">double</span> numberA, <span class="hljs-type">double</span> numberB)</span> &#123;<br>        <span class="hljs-keyword">return</span> numberA * numberB;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Div</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Operation</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getResult</span><span class="hljs-params">(<span class="hljs-type">double</span> numberA, <span class="hljs-type">double</span> numberB)</span> &#123;<br>        <span class="hljs-keyword">if</span> (numberB == <span class="hljs-number">0</span>) &#123;<br>            System.out.println(<span class="hljs-string">&quot;除数不能为0&quot;</span>);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArithmeticException</span>();<br>        &#125;<br>        <span class="hljs-keyword">return</span> numberA / numberB;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 指数运算类，求numberA的numberB次方</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Pow</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Operation</span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getResult</span><span class="hljs-params">(<span class="hljs-type">double</span> numberA, <span class="hljs-type">double</span> numberB)</span> &#123;<br>        <span class="hljs-comment">// 此处缺两参数的有效性检测</span><br>        <span class="hljs-keyword">return</span> Math.pow(numberA,numberB);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 对数运算类，求以numberA为底的numberB的对数</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Log</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Operation</span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">double</span> <span class="hljs-title function_">getResult</span><span class="hljs-params">(<span class="hljs-type">double</span> numberA, <span class="hljs-type">double</span> numberB)</span> &#123;<br>        <span class="hljs-comment">// 此处缺两参数的有效性检测</span><br>        <span class="hljs-keyword">return</span> Math.log(numberB) / Math.log(numberA);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">IFactory</span>&#123;<br>    Operation <span class="hljs-title function_">createOperation</span><span class="hljs-params">(String operType)</span>;<br>&#125;<br><br><span class="hljs-comment">// 基础运算工厂</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">FactoryBasic</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">IFactory</span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Operation <span class="hljs-title function_">createOperation</span><span class="hljs-params">(String operType)</span> &#123;<br>        <span class="hljs-type">Operation</span> <span class="hljs-variable">oper</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">switch</span> (operType)&#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;+&quot;</span>:<br>                oper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Add</span>();<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;-&quot;</span>:<br>                oper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Sub</span>();<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;*&quot;</span>:<br>                oper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Mul</span>();<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;/&quot;</span>:<br>                oper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Div</span>();<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> oper;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 高级运算工厂</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">FactoryAdvanced</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">IFactory</span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Operation <span class="hljs-title function_">createOperation</span><span class="hljs-params">(String operType)</span> &#123;<br>        <span class="hljs-type">Operation</span> <span class="hljs-variable">oper</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">switch</span> (operType)&#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;pow&quot;</span>:<br>                oper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Pow</span>(); <span class="hljs-comment">// 指数运算类实例</span><br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;log&quot;</span>:<br>                oper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Log</span>(); <span class="hljs-comment">// 对数运算类实例</span><br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-comment">// 此处可扩展其他高级运算类的实例化，可修改</span><br>            <span class="hljs-comment">// 当前工厂类不会影响到基础运算工厂类</span><br><br>        &#125;<br>        <span class="hljs-keyword">return</span> oper;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">OperationFactory</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Operation <span class="hljs-title function_">createOperate</span><span class="hljs-params">(String operate)</span>&#123;<br>        <span class="hljs-type">Operation</span> <span class="hljs-variable">oper</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">IFactory</span> <span class="hljs-variable">factory</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">switch</span> (operate)&#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;+&quot;</span>:<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;-&quot;</span>:<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;*&quot;</span>:<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;/&quot;</span>:<br>                <span class="hljs-comment">// 基础运算工厂实例</span><br>                factory = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FactoryBasic</span>();<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;pow&quot;</span>:<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;log&quot;</span>:<br>                <span class="hljs-comment">// 高级运算工厂实例</span><br>                factory = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FactoryAdvanced</span>();<br>        &#125;<br>        <span class="hljs-comment">// 利用多态返回实际的运算类实例</span><br>        oper = factory.createOperation(operate);<br>        <span class="hljs-keyword">return</span> oper;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="第-9-章-原型模式">第 9 章 原型模式</h3><p><strong>原型模式（Prototype），用原型实例指定创建对象的种类，并且通过复制这些原型创建新的对象。</strong></p><p>原型模式其实就是从一个对象再创建另外一个可定制的对象，而且不需要知道任何创建的细节。</p><p><strong>浅复制与深复制：</strong></p><ul><li>浅复制：被复制对象的所有变量都含有与原来的对象相同的值，而所有的对其他对象的引用都仍然指向原来的对象。</li><li>深复制：深复制把引用对象的变量指向复制过的新对象，而不是原有的被引用的对象。</li></ul><p><img src="https://cdn.gumengyo.top/Snipaste_2023-05-04_11-21-15.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.jishuqin.chapter09;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 顾梦</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@create</span> 2023/5/4</span><br><span class="hljs-comment"> * 简历复印——原型模式</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PrototypePattern</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Resume</span> <span class="hljs-variable">resume1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Resume</span>(<span class="hljs-string">&quot;大鸟&quot;</span>);<br>        resume1.setPersonalInfo(<span class="hljs-string">&quot;男&quot;</span>,<span class="hljs-string">&quot;29&quot;</span>);<br>        resume1.setWorkExperience(<span class="hljs-string">&quot;1998-2000&quot;</span>,<span class="hljs-string">&quot;xx公司&quot;</span>);<br><br>        <span class="hljs-type">Resume</span> <span class="hljs-variable">resume2</span> <span class="hljs-operator">=</span> resume1.clone();<br>        resume2.setWorkExperience(<span class="hljs-string">&quot;2000-2003&quot;</span>,<span class="hljs-string">&quot;YY集团&quot;</span>);<br><br>        <span class="hljs-type">Resume</span> <span class="hljs-variable">resume3</span> <span class="hljs-operator">=</span> resume1.clone();<br>        resume3.setPersonalInfo(<span class="hljs-string">&quot;男&quot;</span>,<span class="hljs-string">&quot;24&quot;</span>);<br><br>        resume1.display();<br>        resume2.display();<br>        resume3.display();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 工作经历类</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">WorkExperience</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Cloneable</span>&#123;<br>    <span class="hljs-comment">// 工作时间范围</span><br>    <span class="hljs-keyword">private</span> String timeArea;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getTimeArea</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> timeArea;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setTimeArea</span><span class="hljs-params">(String timeArea)</span> &#123;<br>        <span class="hljs-built_in">this</span>.timeArea = timeArea;<br>    &#125;<br><br>    <span class="hljs-comment">// 所在公司</span><br>    <span class="hljs-keyword">private</span> String company;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getCompany</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> company;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setCompany</span><span class="hljs-params">(String company)</span> &#123;<br>        <span class="hljs-built_in">this</span>.company = company;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> WorkExperience <span class="hljs-title function_">clone</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-type">WorkExperience</span> <span class="hljs-variable">object</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">try</span>&#123;<br>            object = (WorkExperience) <span class="hljs-built_in">super</span>.clone();<br>        &#125;<span class="hljs-keyword">catch</span> (CloneNotSupportedException exception)&#123;<br>            System.out.println(<span class="hljs-string">&quot;Clone异常。&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> object;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 简历类</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Resume</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Cloneable</span>&#123;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> String sex;<br>    <span class="hljs-keyword">private</span> String age;<br>    <span class="hljs-keyword">private</span> WorkExperience work;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Resume</span><span class="hljs-params">(String name)</span> &#123;<br>        <span class="hljs-built_in">this</span>.name = name;<br>        <span class="hljs-built_in">this</span>.work = <span class="hljs-keyword">new</span> <span class="hljs-title class_">WorkExperience</span>();<br>    &#125;<br><br>    <span class="hljs-comment">// 设置个人信息</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setPersonalInfo</span><span class="hljs-params">(String sex,String age)</span>&#123;<br>        <span class="hljs-built_in">this</span>.sex = sex;<br>        <span class="hljs-built_in">this</span>.age = age;<br>    &#125;<br><br>    <span class="hljs-comment">// 设置工作经历</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setWorkExperience</span><span class="hljs-params">(String timeArea,String company)</span>&#123;<br>        <span class="hljs-built_in">this</span>.work.setTimeArea(timeArea);    <span class="hljs-comment">// 给工作经历实例的时间范围赋值</span><br>        <span class="hljs-built_in">this</span>.work.setCompany(company);      <span class="hljs-comment">// 给工作经历实例的公司赋值</span><br>    &#125;<br><br>    <span class="hljs-comment">// 展示简历</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">display</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-built_in">this</span>.name + <span class="hljs-string">&quot; &quot;</span> + <span class="hljs-built_in">this</span>.sex + <span class="hljs-string">&quot; &quot;</span> + <span class="hljs-built_in">this</span>.age);<br>        System.out.println(<span class="hljs-string">&quot;工作经历 &quot;</span> + <span class="hljs-built_in">this</span>.work.getTimeArea() + <span class="hljs-string">&quot; &quot;</span> + <span class="hljs-built_in">this</span>.work.getCompany());<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> Resume <span class="hljs-title function_">clone</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">Resume</span> <span class="hljs-variable">object</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            object = (Resume) <span class="hljs-built_in">super</span>.clone();<br>            object.work = <span class="hljs-built_in">this</span>.work.clone(); <span class="hljs-comment">// 深复制</span><br>        &#125;<span class="hljs-keyword">catch</span> (CloneNotSupportedException exception)&#123;<br>            System.out.println(<span class="hljs-string">&quot;Clone 异常。&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> object;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="第-10-章-模板方法模式">第 10 章 模板方法模式</h3><p><strong>模板方法（Template Method）模式，定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。模板方法使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。</strong></p><p><img src="https://cdn.gumengyo.top//image-20230504142740007.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.jishuqin.chapter10;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TemplateMethod</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">AbstractClass</span> <span class="hljs-variable">abstractClass</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteClassA</span>();<br>        abstractClass.templateMethod();<br><br>        abstractClass = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteClassB</span>();<br>        abstractClass.templateMethod();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 模板方法抽象类</span><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AbstractClass</span>&#123;<br>    <span class="hljs-comment">// 模板方法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">templateMethod</span><span class="hljs-params">()</span>&#123;<br><br>        <span class="hljs-comment">// 写一些可以被子类共享的代码</span><br>        System.out.println(<span class="hljs-string">&quot;共享的代码~&quot;</span>);<br><br>        <span class="hljs-built_in">this</span>.primitiveOperation1();<br>        <span class="hljs-built_in">this</span>.primitiveOperation2();<br><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">primitiveOperation1</span><span class="hljs-params">()</span>; <span class="hljs-comment">// 子类个性的行为，放到子类去实现</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">primitiveOperation2</span><span class="hljs-params">()</span>; <span class="hljs-comment">// 子类个性的行为，放到子类去实现</span><br>&#125;<br><br><span class="hljs-comment">// 模板方法具体类A</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteClassA</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AbstractClass</span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">primitiveOperation1</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;具体类A方法1实现&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">primitiveOperation2</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;具体类A方法2实现&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 模板方法具体类B</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteClassB</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AbstractClass</span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">primitiveOperation1</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;具体类B方法1实现&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">primitiveOperation2</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;具体类B方法2实现&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>模板方法模式的特点</strong></p><ul><li>模板方法模式是通过把不变行为搬移到超类，去除子类中的重复代码来体现它的优势。</li><li>模板方法模式就是提供了一个很好的代码复用平台。</li></ul><h3 id="第-11-章-迪米特法则">第 11 章 迪米特法则</h3><p>迪米特法则（LoD），也叫最少知识原则。<br><strong>迪米特法则（LoD）：如果两个类不必彼此直接通信，那么这两个类就不应当发生直接的相互作用。如果其中一个类需要调用另一个类的某一个方法的话，可以通过第三者转发这个调用。</strong></p><h3 id="第-12-章-外观模式">第 12 章 外观模式</h3><p><strong>外观模式（Facade），为子系统中的一组接口提供一个一致的界面，此模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。</strong></p><p><img src="https://cdn.gumengyo.top//image-20230505171033965.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.jishuqin.chapter11;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 顾梦</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@create</span> 2023/5/5</span><br><span class="hljs-comment"> * 外观模式</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FacadePattern</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Facade</span> <span class="hljs-variable">facade</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Facade</span>();<br><br>        facade.methodA();<br>        facade.methodB();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 子系统1</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">SubSystemOne</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">methodOne</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;子系统方法一&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 子系统2</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">SubSystemTwo</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">methodTwo</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;子系统方法二&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 子系统3</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">SubSystemThree</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">methodThree</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;子系统方法三&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 子系统1</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">SubSystemFour</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">methodFour</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;子系统方法四&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 外观类</span><br><span class="hljs-comment">// 它需要了解所有子系统的方法或属性，进行组合以被外界调用</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Facade</span>&#123;<br>    SubSystemOne one;<br>    SubSystemTwo two;<br>    SubSystemThree three;<br>    SubSystemFour four;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Facade</span><span class="hljs-params">()</span>&#123;<br>        one = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SubSystemOne</span>();<br>        two = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SubSystemTwo</span>();<br>        three = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SubSystemThree</span>();<br>        four = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SubSystemFour</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">methodA</span><span class="hljs-params">()</span>&#123;<br>        one.methodOne();<br>        two.methodTwo();<br>        three.methodThree();<br>        four.methodFour();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">methodB</span><span class="hljs-params">()</span>&#123;<br>        two.methodTwo();<br>        three.methodThree();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="第-13-章-建造者模式">第 13 章 建造者模式</h3><p><strong>建造者模式（Builder），将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。</strong></p><p><img src="https://cdn.gumengyo.top//image-20230505194106302.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.jishuqin.chapter13;<br><br><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 顾梦</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@create</span> 2023/5/5</span><br><span class="hljs-comment"> * 建造者模式</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BuilderPattern</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Director</span> <span class="hljs-variable">director</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Director</span>();<br>        <span class="hljs-type">Builder</span> <span class="hljs-variable">b1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteBuilder1</span>();<br>        <span class="hljs-type">Builder</span> <span class="hljs-variable">b2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteBuilder2</span>();<br><br>        <span class="hljs-comment">// 指挥者用ConcreteBuilder1的方法来建造产品</span><br>        director.construct(b1); <span class="hljs-comment">// 创建的是产品A和产品B</span><br>        <span class="hljs-type">Product</span> <span class="hljs-variable">p1</span> <span class="hljs-operator">=</span> b1.getResult();<br>        p1.show();<br><br>        <span class="hljs-comment">// 指挥者用ConcreteBuilder2的方法来建造产品</span><br>        director.construct(b2); <span class="hljs-comment">// 创建的是产品X和产品Y</span><br>        <span class="hljs-type">Product</span> <span class="hljs-variable">p2</span> <span class="hljs-operator">=</span> b2.getResult();<br>        p2.show();<br><br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 产品类</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Product</span> &#123;<br>    ArrayList&lt;String&gt; parts = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;String&gt;();<br><br>    <span class="hljs-comment">// 添加新的产品部件</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">(String part)</span>&#123;<br>        parts.add(part);<br>    &#125;<br><br>    <span class="hljs-comment">// 列举所有产品部件</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">show</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">for</span> (String part : parts) &#123;<br>            System.out.println(part);<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 抽象的建造者类</span><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Builder</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">buildPartA</span><span class="hljs-params">()</span>; <span class="hljs-comment">// 建造部件A</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">buildPartB</span><span class="hljs-params">()</span>; <span class="hljs-comment">// 建造部件B</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> Product <span class="hljs-title function_">getResult</span><span class="hljs-params">()</span>; <span class="hljs-comment">// 得到产品</span><br>&#125;<br><br><span class="hljs-comment">// 具体建造者1</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteBuilder1</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Builder</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">Product</span> <span class="hljs-variable">product</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Product</span>();<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">buildPartA</span><span class="hljs-params">()</span> &#123;<br>        product.add(<span class="hljs-string">&quot;部件A&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">buildPartB</span><span class="hljs-params">()</span> &#123;<br>        product.add(<span class="hljs-string">&quot;部件B&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Product <span class="hljs-title function_">getResult</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> product;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 具体建造者2</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteBuilder2</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Builder</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">Product</span> <span class="hljs-variable">product</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Product</span>();<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">buildPartA</span><span class="hljs-params">()</span> &#123;<br>        product.add(<span class="hljs-string">&quot;部件X&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">buildPartB</span><span class="hljs-params">()</span> &#123;<br>        product.add(<span class="hljs-string">&quot;部件Y&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Product <span class="hljs-title function_">getResult</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> product;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 指挥者</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Director</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">construct</span><span class="hljs-params">(Builder builder)</span> &#123;<br>        builder.buildPartA();<br>        builder.buildPartB();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>建造者模式的好处就是使得建造代码与表示代码分离，由于建造者隐藏了该产品是如何组装的，所以若需要改变一个产品的内部表示，只需要再定义一个具体的建造者就可以了。</p><p>建造者模式是在当创建复杂对象的算法应该独立于该对象的组成部分以及它们的装配方式时适用的模式。</p><h3 id="第-14-章-观察者模式">第 14 章 观察者模式</h3><p>观察者模式又叫作发布-订阅（Publish/Subscri）模式。</p><p><strong>观察者模式定义了一种一对多的依赖关系，让多个观察者对象同时监听某一个主题对象。这个主题对象在状态发生变化时，会通知所有观察者对象，使它们能够自动更新自己。</strong></p><p><img src="https://cdn.gumengyo.top//image-20230506133700094.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.jishuqin.chapter14;<br><br><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 顾梦</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@create</span> 2023/5/6</span><br><span class="hljs-comment"> * 观察者模式</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ObserverPattern</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Subject</span> <span class="hljs-variable">subject</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteSubject</span>();<br>        subject.attach(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteObserver</span>(<span class="hljs-string">&quot;NameX&quot;</span>,subject));<br>        subject.attach(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteObserver</span>(<span class="hljs-string">&quot;NameY&quot;</span>,subject));<br>        subject.attach(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteObserver</span>(<span class="hljs-string">&quot;NameZ&quot;</span>, subject));<br>        subject.setSubjectState(<span class="hljs-string">&quot;ABC&quot;</span>);<br><br>        subject.notifyObserver();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 通知者抽象类</span><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Subject</span> &#123;<br>    <span class="hljs-keyword">private</span> ArrayList&lt;Observer&gt; list = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;Observer&gt;(); <span class="hljs-comment">// 针对抽象的Observer编程</span><br><br>    <span class="hljs-comment">// 增加观察者</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">attach</span><span class="hljs-params">(Observer observer)</span>&#123;<br>        list.add(observer);<br>    &#125;<br><br>    <span class="hljs-comment">// 减少观察者</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">detach</span><span class="hljs-params">(Observer observer)</span>&#123;<br>        list.remove(observer);<br>    &#125;<br><br>    <span class="hljs-comment">// 通知观察者</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">notifyObserver</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">for</span> (Observer item : list) &#123;<br>            item.update();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">protected</span> String subjectState;<br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getSubjectState</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.subjectState;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setSubjectState</span><span class="hljs-params">(String value)</span> &#123;<br>        <span class="hljs-built_in">this</span>.subjectState = value;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 抽象观察者</span><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Observer</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">update</span><span class="hljs-params">()</span>;<br>&#125;<br><br><span class="hljs-comment">// 具体通知者</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteSubject</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Subject</span>&#123;<br>    <span class="hljs-comment">// 具体通知者的方法</span><br>&#125;<br><br><span class="hljs-comment">// 具体观察者类</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteObserver</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Observer</span>&#123;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> Subject  sub;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">ConcreteObserver</span><span class="hljs-params">(String name,Subject sub)</span>&#123;<br>        <span class="hljs-built_in">this</span>.name = name;<br>        <span class="hljs-built_in">this</span>.sub = sub;<br>    &#125;<br><br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">update</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;观察者&quot;</span>+<span class="hljs-built_in">this</span>.name+<span class="hljs-string">&quot;的新状态是&quot;</span>+<span class="hljs-built_in">this</span>.sub.getSubjectState());<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>特点：</strong></p><ul><li>当一个对象的改变需要同时改变其他对象，而且它不知道具体有多少对象有待改变时，应该考虑使用观察者模式。</li><li>抽象模型有两个方面，其中一方面依赖于另一方面，这时用观察者模式可以将这两者封装在独立的对象中使它们各自独立地改变和复用。</li><li>观察者模式所做的工作其实就是在解除耦合。让耦合的双方都依赖于抽象，而不是依赖于具体。从而使得各自的变化都不会影响另一边的变化。</li></ul><h3 id="第-15-章-抽象工厂模式">第 15 章 抽象工厂模式</h3><p><strong>抽象工厂模式（Abstract Factory），提供一个创建一系列相关或相互依赖对象的接口，而无须指定它们具体的类。</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.jishuqin.chapter15;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> 顾梦</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@create</span> 2023/5/6</span><br><span class="hljs-comment"> * 抽象工厂模式</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AbstractFactory</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br>        <span class="hljs-type">Department</span> <span class="hljs-variable">department</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Department</span>();<br><br>        <span class="hljs-type">IFactory</span> <span class="hljs-variable">factory</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SqlserverFactory</span>();<br><br>        <span class="hljs-type">IUser</span> <span class="hljs-variable">iu</span> <span class="hljs-operator">=</span> factory.createUser();<br>        iu.insert(user);        <span class="hljs-comment">// 新增一个用户</span><br>        iu.getUser(<span class="hljs-number">1</span>);      <span class="hljs-comment">//得到用户ID为1的用户信息</span><br><br>        <span class="hljs-type">IDepartment</span> <span class="hljs-variable">idept</span> <span class="hljs-operator">=</span> factory.createDepartment();<br>        idept.insert(department);<br>        idept.getDepartment(<span class="hljs-number">2</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 用户类</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">User</span>&#123;<br><br>    <span class="hljs-comment">// 用户ID</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> _id;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getId</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._id;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setId</span><span class="hljs-params">(<span class="hljs-type">int</span> value)</span> &#123;<br>        <span class="hljs-built_in">this</span>._id = value;<br>    &#125;<br><br>    <span class="hljs-comment">// 用户姓名</span><br>    <span class="hljs-keyword">private</span> String _name;<br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._name;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setName</span><span class="hljs-params">(String value)</span>&#123;<br>        <span class="hljs-built_in">this</span>._name = value;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 部门类</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Department</span>&#123;<br><br>    <span class="hljs-comment">// 部门ID</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> _id;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">get_id</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._id;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">set_id</span><span class="hljs-params">(<span class="hljs-type">int</span> value)</span>&#123;<br>        <span class="hljs-built_in">this</span>._id = value;<br>    &#125;<br><br>    <span class="hljs-comment">// 部门名称</span><br>    <span class="hljs-keyword">private</span> String _name;<br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._name;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setName</span><span class="hljs-params">(String value)</span>&#123;<br>        <span class="hljs-built_in">this</span>._name = value;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">IUser</span>&#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">insert</span><span class="hljs-params">(User user)</span>;<br>    User <span class="hljs-title function_">getUser</span><span class="hljs-params">(<span class="hljs-type">int</span> id)</span>;<br>&#125;<br><br><span class="hljs-comment">// 部门类接口</span><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">IDepartment</span>&#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">insert</span><span class="hljs-params">(Department department)</span>;<br>    Department <span class="hljs-title function_">getDepartment</span><span class="hljs-params">(<span class="hljs-type">int</span> id)</span>;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">SqlserverUser</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">IUser</span>&#123;<br><br>    <span class="hljs-comment">// 新增一个用户</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">insert</span><span class="hljs-params">(User user)</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;在SQL Server中给User表增加一条记录&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">// 获取一个用户信息</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> User <span class="hljs-title function_">getUser</span><span class="hljs-params">(<span class="hljs-type">int</span> id)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;在SQL Server中根据用户ID得到User表一条记录&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">AccessUser</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">IUser</span>&#123;<br><br>    <span class="hljs-comment">// 新增一个用户</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">insert</span><span class="hljs-params">(User user)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;在Access中给User表增加一条记录&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> User <span class="hljs-title function_">getUser</span><span class="hljs-params">(<span class="hljs-type">int</span> id)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;在Access中根据用户ID得到User表一条记录&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">SqlserverDepartment</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">IDepartment</span>&#123;<br><br>    <span class="hljs-comment">// 新增一个部门</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">insert</span><span class="hljs-params">(Department department)</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;在SQLServer中给Department表增加一条记录&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Department <span class="hljs-title function_">getDepartment</span><span class="hljs-params">(<span class="hljs-type">int</span> id)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;在SQL Server中根据部门ID得到Department表一条记录&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">AccessDepartment</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">IDepartment</span>&#123;<br><br>    <span class="hljs-comment">// 新增一个部门</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">insert</span><span class="hljs-params">(Department department)</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;在Access中给Department表增加一条记录&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Department <span class="hljs-title function_">getDepartment</span><span class="hljs-params">(<span class="hljs-type">int</span> id)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;在Access中根据部门ID得到Department表一条记录&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 工厂接口</span><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">IFactory</span>&#123;<br>    IUser <span class="hljs-title function_">createUser</span><span class="hljs-params">()</span>;<br>    IDepartment <span class="hljs-title function_">createDepartment</span><span class="hljs-params">()</span>; <span class="hljs-comment">// 增加的接口方法</span><br>&#125;<br><br><span class="hljs-comment">// Sqlserver工厂</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">SqlserverFactory</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">IFactory</span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> IUser <span class="hljs-title function_">createUser</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SqlserverUser</span>();<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> IDepartment <span class="hljs-title function_">createDepartment</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SqlserverDepartment</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// Access工厂</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">AccessFactory</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">IFactory</span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> IUser <span class="hljs-title function_">createUser</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AccessUser</span>();<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> IDepartment <span class="hljs-title function_">createDepartment</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AccessDepartment</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>特点：</strong></p><ul><li>易于交换产品系列，由于具体工厂类，在一应用中只需要在初始化的时候出现一次，这就使得改变一个应用的具体工厂变得非常容易，它只需要改变具体工厂即可使用不同的产品配置。</li><li>它让具体的创建实例过程与客户端分离，客户端是通过它们的抽象接口操纵实例，产品的具体类名也被具体工厂的实现分离，不会出现在客户代码中。</li></ul><h3 id="第-16-章-状态模式">第 16 章 状态模式</h3><p><strong>状态模式（State），当一个对象的内在状态改变时允许改变其行为，这个对象看起来像是改变了其类。</strong></p><p><img src="https://cdn.gumengyo.top/Snipaste_2023-05-11_08-37-15.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.jishuqin.chapter16;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">StatePattern</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 紧急项目</span><br>        <span class="hljs-type">Work</span> <span class="hljs-variable">emergencyProjects</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Work</span>();<br>        emergencyProjects.setHour(<span class="hljs-number">9</span>);<br>        emergencyProjects.writeProgram();<br>        emergencyProjects.setHour(<span class="hljs-number">10</span>);<br>        emergencyProjects.writeProgram();<br>        emergencyProjects.setHour(<span class="hljs-number">12</span>);<br>        emergencyProjects.writeProgram();<br>        emergencyProjects.setHour(<span class="hljs-number">13</span>);<br>        emergencyProjects.writeProgram();<br>        emergencyProjects.setHour(<span class="hljs-number">14</span>);<br>        emergencyProjects.writeProgram();<br>        emergencyProjects.setHour(<span class="hljs-number">17</span>);<br><br>        emergencyProjects.setWorkFinished(<span class="hljs-literal">false</span>);<br><br>        emergencyProjects.writeProgram();<br>        emergencyProjects.setHour(<span class="hljs-number">19</span>);<br>        emergencyProjects.writeProgram();<br>        emergencyProjects.setHour(<span class="hljs-number">22</span>);<br>        emergencyProjects.writeProgram();<br><br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 工作类</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Work</span>&#123;<br><br>    <span class="hljs-keyword">private</span> State current;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Work</span><span class="hljs-params">()</span>&#123;<br>        current = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ForenoonState</span>();<br>    &#125;<br>    <span class="hljs-comment">// 设置状态</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setState</span><span class="hljs-params">(State value)</span>&#123;<br>        <span class="hljs-built_in">this</span>.current =value;<br>    &#125;<br><br>    <span class="hljs-comment">// 写代码的状态</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">writeProgram</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-built_in">this</span>.current.writeProgram(<span class="hljs-built_in">this</span>);<br>    &#125;<br><br>    <span class="hljs-comment">// 时间终点</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> hour;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getHour</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.hour;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setHour</span><span class="hljs-params">(<span class="hljs-type">int</span> value)</span> &#123;<br>        <span class="hljs-built_in">this</span>.hour = value;<br>    &#125;<br>    <span class="hljs-comment">// 是否完成工作任务</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">boolean</span> <span class="hljs-variable">workFinished</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">getWorkFinished</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.workFinished;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setWorkFinished</span><span class="hljs-params">(<span class="hljs-type">boolean</span> value)</span>&#123;<br>        <span class="hljs-built_in">this</span>.workFinished = value;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">State</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">writeProgram</span><span class="hljs-params">(Work w)</span>;<br>&#125;<br><br><span class="hljs-comment">// 上午工作状态</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ForenoonState</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">State</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">writeProgram</span> <span class="hljs-params">(Work w)</span>&#123;<br>        <span class="hljs-keyword">if</span> (w.getHour() &lt; <span class="hljs-number">12</span>)&#123;<br>            System.out.println(<span class="hljs-string">&quot;当前时间：&quot;</span> + w.getHour() + <span class="hljs-string">&quot;点 上午工作，精神百倍&quot;</span>);<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            w.setState(<span class="hljs-keyword">new</span> <span class="hljs-title class_">NoonState</span>());<br>            w.writeProgram();<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 中午工作状态</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">NoonState</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">State</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">writeProgram</span> <span class="hljs-params">(Work w)</span>&#123;<br>        <span class="hljs-keyword">if</span> (w.getHour() &lt; <span class="hljs-number">13</span>)&#123;<br>            System.out.println(<span class="hljs-string">&quot;当前时间：&quot;</span> + w.getHour() + <span class="hljs-string">&quot;点 饿了，午饭：犯困，午休&quot;</span>);<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            w.setState(<span class="hljs-keyword">new</span> <span class="hljs-title class_">AfternoonState</span>());<br>            w.writeProgram();<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 下午工作状态</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">AfternoonState</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">State</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">writeProgram</span> <span class="hljs-params">(Work w)</span>&#123;<br>        <span class="hljs-keyword">if</span> (w.getHour() &lt; <span class="hljs-number">17</span>)&#123;<br>            System.out.println(<span class="hljs-string">&quot;当前时间：&quot;</span> + w.getHour() + <span class="hljs-string">&quot;点 下午状态还不错，继续努力&quot;</span>);<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            w.setState(<span class="hljs-keyword">new</span> <span class="hljs-title class_">EveningState</span>());<br>            w.writeProgram();<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 晚间工作状态</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">EveningState</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">State</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">writeProgram</span> <span class="hljs-params">(Work w)</span>&#123;<br>        <span class="hljs-keyword">if</span> (w.getWorkFinished())&#123;<br>            w.setState(<span class="hljs-keyword">new</span> <span class="hljs-title class_">RestState</span>());<br>            w.writeProgram();<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">if</span> (w.getHour() &lt; <span class="hljs-number">21</span>)&#123;<br>                System.out.println(<span class="hljs-string">&quot;当前时间：&quot;</span> + w.getHour() + <span class="hljs-string">&quot;点 加班哦，疲累之极&quot;</span>);<br>            &#125;<span class="hljs-keyword">else</span> &#123;<br>                w.setState(<span class="hljs-keyword">new</span> <span class="hljs-title class_">SleepingState</span>());<br>                w.writeProgram();<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 睡眠状态</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">SleepingState</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">State</span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">writeProgram</span><span class="hljs-params">(Work w)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;当前时间:&quot;</span>  + w.getHour() + <span class="hljs-string">&quot;点 不行了，睡着了。&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 下班休息状态</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">RestState</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">State</span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">writeProgram</span><span class="hljs-params">(Work w)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;当前时间:&quot;</span>  + w.getHour() + <span class="hljs-string">&quot;点 下班回家了。&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><strong>状态模式的好处与用处：</strong></p><ul><li>将与特定状态相关的行为局部化，并且将不同状态的行为分割开来。</li><li>消除庞大的条件分支语句，状态模式通过把各种状态转移逻辑分布到State的子类之间，来减少相互间的依赖。</li><li>当一个对象的行为取决于它的状态，并且它必须在运行时刻根据状态改变它的行为时，就可以考虑使用状态模式了。</li></ul><h3 id="第-17-章-适配器模式">第 17 章 适配器模式</h3><p><strong>适配器模式（Adapter），将一个类的接口转换成客户希望的另外一个接口。Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。</strong></p><p><img src="https://cdn.gumengyo.top/Snipaste_2023-05-11_09-32-09.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.jishuqin.chapter17;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AdapterPattern</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Player</span> <span class="hljs-variable">forwards</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Forwards</span>(<span class="hljs-string">&quot;巴蒂尔&quot;</span>);<br>        forwards.attack();<br><br>        <span class="hljs-type">Player</span> <span class="hljs-variable">guards</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Guards</span>(<span class="hljs-string">&quot;麦克格雷迪&quot;</span>);<br>        guards.attack();<br><br>        <span class="hljs-type">Player</span> <span class="hljs-variable">center</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Translator</span>(<span class="hljs-string">&quot;姚明&quot;</span>);<br><br>        center.attack();<br>        center.defense();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 球员</span><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Player</span>&#123;<br>    <span class="hljs-keyword">protected</span> String name;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Player</span><span class="hljs-params">(String name)</span>&#123;<br>        <span class="hljs-built_in">this</span>.name = name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">attack</span><span class="hljs-params">()</span>; <span class="hljs-comment">// 进攻</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">defense</span><span class="hljs-params">()</span>; <span class="hljs-comment">// 防守</span><br>&#125;<br><br><span class="hljs-comment">// 前锋</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Forwards</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Player</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Forwards</span><span class="hljs-params">(String name)</span>&#123;<br>        <span class="hljs-built_in">super</span>(name);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">attack</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;前锋 &quot;</span> + <span class="hljs-built_in">this</span>.name + <span class="hljs-string">&quot; 进攻&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">defense</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;前锋 &quot;</span> + <span class="hljs-built_in">this</span>.name + <span class="hljs-string">&quot; 防守&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 前锋</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Center</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Player</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Center</span><span class="hljs-params">(String name)</span>&#123;<br>        <span class="hljs-built_in">super</span>(name);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">attack</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;中锋 &quot;</span> + <span class="hljs-built_in">this</span>.name + <span class="hljs-string">&quot; 进攻&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">defense</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;中锋 &quot;</span> + <span class="hljs-built_in">this</span>.name + <span class="hljs-string">&quot; 防守&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 后卫</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Guards</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Player</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Guards</span><span class="hljs-params">(String name)</span>&#123;<br>        <span class="hljs-built_in">super</span>(name);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">attack</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;后卫 &quot;</span> + <span class="hljs-built_in">this</span>.name + <span class="hljs-string">&quot; 进攻&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">defense</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;后卫 &quot;</span> + <span class="hljs-built_in">this</span>.name + <span class="hljs-string">&quot; 防守&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 外籍中锋</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ForeignCenter</span>&#123;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.name;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setName</span><span class="hljs-params">(String value)</span> &#123;<br>        <span class="hljs-built_in">this</span>.name = value;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> 进攻()&#123;<br>        System.out.println(<span class="hljs-string">&quot;外籍中锋 &quot;</span> +<span class="hljs-built_in">this</span>.name + <span class="hljs-string">&quot; 进攻&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> 防守()&#123;<br>        System.out.println(<span class="hljs-string">&quot;外籍中锋 &quot;</span> +<span class="hljs-built_in">this</span>.name + <span class="hljs-string">&quot; 防守&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 翻译者</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Translator</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Player</span>&#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">ForeignCenter</span> <span class="hljs-variable">foreignCenter</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ForeignCenter</span>();<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Translator</span><span class="hljs-params">(String name)</span>&#123;<br>        <span class="hljs-built_in">super</span>(name);<br>        foreignCenter.setName(name);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">attack</span><span class="hljs-params">()</span> &#123;<br>        foreignCenter.进攻();<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">defense</span><span class="hljs-params">()</span> &#123;<br>        foreignCenter.防守();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="第-18-章-备忘录模式">第 18 章 备忘录模式</h3><p><strong>备忘录（Memento）：在不破坏封装性的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态。这样以后就可将该对象恢复到原先保存的状态。</strong></p><p><img src="https://cdn.gumengyo.top/Snipaste_2023-05-11_10-19-19.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.jishuqin.chapter18;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MementoPattern</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Originator</span> <span class="hljs-variable">o</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Originator</span>();<br>        o.setState(<span class="hljs-string">&quot;On&quot;</span>);<br>        o.show();<br><br>        <span class="hljs-type">Caretaker</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Caretaker</span>();<br>        <span class="hljs-comment">// 保存状态时，由于有了很好的封装，可以隐藏Originator的实现细节</span><br>        c.setMemento(o.createMemento());<br><br>        <span class="hljs-comment">// Originator改变了状态属性为&quot;off&quot;</span><br>        o.setState(<span class="hljs-string">&quot;off&quot;</span>);<br>        o.show();<br><br>        <span class="hljs-comment">// 恢复原初始状态</span><br>        o.recoveryMemento(c.getMemento());<br>        o.show();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 发起人</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Originator</span>&#123;<br><br>    <span class="hljs-comment">// 状态</span><br>    <span class="hljs-keyword">private</span> String state;<br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getState</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.state;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setState</span><span class="hljs-params">(String value)</span>&#123;<br>        <span class="hljs-built_in">this</span>.state = value;<br>    &#125;<br>    <span class="hljs-comment">// 显示数据</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">show</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;State:&quot;</span> + <span class="hljs-built_in">this</span>.state);<br>    &#125;<br>    <span class="hljs-comment">// 创建备忘录</span><br>    <span class="hljs-keyword">public</span> Memento <span class="hljs-title function_">createMemento</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Memento</span>(<span class="hljs-built_in">this</span>.state);<br>    &#125;<br>    <span class="hljs-comment">// 恢复备忘录</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">recoveryMemento</span><span class="hljs-params">(Memento memento)</span>&#123;<br>        <span class="hljs-built_in">this</span>.setState(memento.getState());<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 备忘录</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Memento</span>&#123;<br>    <span class="hljs-keyword">private</span> String state;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Memento</span><span class="hljs-params">(String state)</span>&#123;<br>        <span class="hljs-built_in">this</span>.state = state;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getState</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.state;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setState</span><span class="hljs-params">(String value)</span>&#123;<br>        <span class="hljs-built_in">this</span>.state = value;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 管理者</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Caretaker</span>&#123;<br>    <span class="hljs-keyword">private</span> Memento memento;<br>    <span class="hljs-keyword">public</span> Memento <span class="hljs-title function_">getMemento</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.memento;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setMemento</span><span class="hljs-params">(Memento value)</span>&#123;<br>        <span class="hljs-built_in">this</span>.memento = value;<br>    &#125;<br><br><br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="第-19-章-组合模式">第 19 章 组合模式</h3><p><strong>组合模式（Composite），将对象组合成树形结构以表示‘部分-整体’的层次结构。组合模式使得用户对单个对象和组合对象的使用具有一致性。</strong></p><p><img src="https://cdn.gumengyo.top//image-20230515181230670.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.jishuqin.chapter19;<br><br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CompositePattern</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Composite</span> <span class="hljs-variable">root</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Composite</span>(<span class="hljs-string">&quot;root&quot;</span>);<br>        root.add(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Leaf</span>(<span class="hljs-string">&quot;Leaf A&quot;</span>));<br>        root.add(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Leaf</span>(<span class="hljs-string">&quot;Leaf B&quot;</span>));<br><br>        <span class="hljs-type">Composite</span> <span class="hljs-variable">comp</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Composite</span>(<span class="hljs-string">&quot;Composite X&quot;</span>);<br>        comp.add(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Leaf</span>(<span class="hljs-string">&quot;Leaf XA&quot;</span>));<br>        comp.add(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Leaf</span>(<span class="hljs-string">&quot;Leaf XB&quot;</span>));<br>        root.add(comp);<br><br>        <span class="hljs-type">Composite</span> <span class="hljs-variable">comp2</span> <span class="hljs-operator">=</span>  <span class="hljs-keyword">new</span> <span class="hljs-title class_">Composite</span>(<span class="hljs-string">&quot;Composite XY&quot;</span>);<br>        comp2.add(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Leaf</span>(<span class="hljs-string">&quot;Leaf XYA&quot;</span>));<br>        comp2.add(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Leaf</span>(<span class="hljs-string">&quot;Leaf XYB&quot;</span>));<br>        comp.add(comp2);<br><br>        <span class="hljs-type">Leaf</span> <span class="hljs-variable">leaf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Leaf</span>(<span class="hljs-string">&quot;Leaf C&quot;</span>);<br>        root.add(leaf);<br><br>        <span class="hljs-type">Leaf</span> <span class="hljs-variable">leaf2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Leaf</span>(<span class="hljs-string">&quot;Leaf D&quot;</span>);<br>        root.add(leaf2);<br>        root.remove(leaf2);<br><br>        root.display(<span class="hljs-number">1</span>);<br><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Component</span>&#123;<br>    <span class="hljs-keyword">protected</span> String name;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Component</span><span class="hljs-params">(String name)</span>&#123;<br>        <span class="hljs-built_in">this</span>.name = name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">(Component component)</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">remove</span><span class="hljs-params">(Component component)</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">display</span><span class="hljs-params">(<span class="hljs-type">int</span> depth)</span>;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Leaf</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Component</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Leaf</span><span class="hljs-params">(String name)</span>&#123;<br>        <span class="hljs-built_in">super</span>(name);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">(Component component)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;Cannot add to a leaf.&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">remove</span><span class="hljs-params">(Component component)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;Cannot remove from a leaf.&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">display</span><span class="hljs-params">(<span class="hljs-type">int</span> depth)</span> &#123;<br>        <span class="hljs-comment">// 叶节点的具体显示方法，此处是显示其名称和级别</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; depth; i++)<br>            System.out.print(<span class="hljs-string">&quot;-&quot;</span>);<br>        System.out.println(name);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Composite</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Component</span>&#123;<br><br>    <span class="hljs-keyword">private</span> ArrayList&lt;Component&gt; children = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;Component&gt;(); <span class="hljs-comment">// 一个子对象集合用来存储其下属的枝节点和叶节点</span><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Composite</span><span class="hljs-params">(String name)</span>&#123;<br>        <span class="hljs-built_in">super</span>(name);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">(Component component)</span> &#123;<br>        children.add(component);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">remove</span><span class="hljs-params">(Component component)</span> &#123;<br>        children.remove(component);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">display</span><span class="hljs-params">(<span class="hljs-type">int</span> depth)</span> &#123;<br>        <span class="hljs-comment">// 显示其枝节点名称</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;i&lt;depth;i++)<br>            System.out.print(<span class="hljs-string">&quot;-&quot;</span>);<br>        System.out.println(name);<br>        <span class="hljs-comment">// 对其下级进行遍历</span><br>        <span class="hljs-keyword">for</span> (Component item : children) &#123;<br>            item.display(depth+<span class="hljs-number">2</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>需求中是体现部分与整体层次的结构时，希望用户可以忽略组合对象与单个对象的不同，统一地使用组合结构中的所有对象时，就应该考虑用组合模式。</p><h3 id="第-20-章-迭代器模式">第 20 章 迭代器模式</h3><p><strong>迭代器模式（Iterator），提供一种方法顺序访问一个聚合对象中的各个元素，而又不暴露该对象的内部表示。</strong></p><p><img src="https://cdn.gumengyo.top//image-20230515193830432.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.jishuqin.chapter20;<br><br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">IteratorPattern</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">ConcreteAggregate</span> <span class="hljs-variable">bus</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteAggregate</span>();<br>        bus.add(<span class="hljs-string">&quot;大鸟&quot;</span>);<br>        bus.add(<span class="hljs-string">&quot;小菜&quot;</span>);<br>        bus.add(<span class="hljs-string">&quot;行李&quot;</span>);<br>        bus.add(<span class="hljs-string">&quot;老外&quot;</span>);<br>        bus.add(<span class="hljs-string">&quot;公交内部员工&quot;</span>);<br>        bus.add(<span class="hljs-string">&quot;小偷&quot;</span>);<br><br>        <span class="hljs-type">Iterator</span> <span class="hljs-variable">conductor</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteIterator</span>(bus);<br><br>        conductor.first();<br>        <span class="hljs-keyword">while</span> (!conductor.isDone())&#123;<br>            System.out.println(conductor.currentItem() + <span class="hljs-string">&quot;，请买车票!&quot;</span>);<br>            conductor.next();<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 聚集抽象类</span><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Aggregate</span>&#123;<br>    <span class="hljs-comment">// 创建迭代器</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> Iterator <span class="hljs-title function_">createIterator</span><span class="hljs-params">()</span>;<br>&#125;<br><br><span class="hljs-comment">// 具体聚集类，继承Aggregate</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteAggregate</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Aggregate</span>&#123;<br><br>    <span class="hljs-comment">// 声明一个ArrayList泛型变量，用于存放聚合对象</span><br>    <span class="hljs-keyword">private</span> ArrayList&lt;Object&gt; items = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;Object&gt;();<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Iterator <span class="hljs-title function_">createIterator</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteIterator</span>(<span class="hljs-built_in">this</span>);<br>    &#125;<br><br>    <span class="hljs-comment">// 返回聚焦总个数</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getCount</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> items.size();<br>    &#125;<br><br>    <span class="hljs-comment">// 增加新对象</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">(Object object)</span>&#123;<br>        items.add(object);<br>    &#125;<br><br>    <span class="hljs-comment">// 得到指定索引对象</span><br>    <span class="hljs-keyword">public</span> Object <span class="hljs-title function_">getCurrentItem</span><span class="hljs-params">(<span class="hljs-type">int</span> index)</span>&#123;<br>        <span class="hljs-keyword">return</span> items.get(index);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 迭代器抽象类</span><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Iterator</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> Object <span class="hljs-title function_">first</span><span class="hljs-params">()</span>;             <span class="hljs-comment">// 第一个</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> Object <span class="hljs-title function_">next</span><span class="hljs-params">()</span>;              <span class="hljs-comment">// 下一个</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isDone</span><span class="hljs-params">()</span>;            <span class="hljs-comment">// 是否到最后</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> Object <span class="hljs-title function_">currentItem</span><span class="hljs-params">()</span>;       <span class="hljs-comment">// 当前对象</span><br>&#125;<br><br><span class="hljs-comment">// 具体迭代器类，继承Iterator</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteIterator</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Iterator</span>&#123;<br><br>    <span class="hljs-keyword">private</span> ConcreteAggregate aggregate;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> <span class="hljs-variable">current</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><br>    <span class="hljs-comment">// 初始化时将具体的聚焦对象传入</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">ConcreteIterator</span><span class="hljs-params">(ConcreteAggregate aggregate)</span>&#123;<br>        <span class="hljs-built_in">this</span>.aggregate = aggregate;<br>    &#125;<br><br>    <span class="hljs-comment">// 得到第一个对象</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Object <span class="hljs-title function_">first</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> aggregate.getCurrentItem(<span class="hljs-number">0</span>);<br>    &#125;<br><br>    <span class="hljs-comment">// 得到下一个对象</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Object <span class="hljs-title function_">next</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">ret</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        current++;<br>        <span class="hljs-keyword">if</span> (current &lt; aggregate.getCount())&#123;<br>            ret = aggregate.getCurrentItem(current);<br>        &#125;<br>        <span class="hljs-keyword">return</span> ret;<br>    &#125;<br><br>    <span class="hljs-comment">// 判断当前是否遍历到结尾，到结尾返回true</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isDone</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> current &gt;= aggregate.getCount() ? <span class="hljs-literal">true</span> : <span class="hljs-literal">false</span>;<br>    &#125;<br><br>    <span class="hljs-comment">// 返回当前的聚集对象</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Object <span class="hljs-title function_">currentItem</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> aggregate.getCurrentItem(current);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>当你需要对聚集有多种方式遍历时，可以考虑用迭代器模式。</p><p>迭代器（Iterator）模式就是分离了集合对象的遍历行为，抽象出一个迭代器类来负责，这样既可以做到不暴露集合的内部结构，又可以让外部代码透明地访问集合内部的数据。</p><h3 id="第-21-章-单例模式">第 21 章 单例模式</h3><p><strong>单例模式（Singleton），保证一个类仅有一个实例，并提供一个访问它的全局访问点。</strong></p><p><strong>懒汉单例：要在第一次被引用时，才会将自己实例化</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 单例模式（懒汉单例）</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Singleton</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Singleton instance;<br><br>    <span class="hljs-comment">// 构造方法private化</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-title function_">Singleton1</span><span class="hljs-params">()</span>&#123;<br><br>    &#125;<br><br>    <span class="hljs-comment">// 得到Singleton的实例（唯一途径）</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Singleton <span class="hljs-title function_">getInstance</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">if</span> (instance == <span class="hljs-literal">null</span>)&#123;<br>            instance = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Singleton</span>();<br>        &#125;<br>        <span class="hljs-keyword">return</span> instance;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>饿汉单例：静态初始化的方式是在自己被加载时就将自己实例化</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Singleton</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">Singleton</span> <span class="hljs-variable">instance</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Singleton</span>();<br><br>    <span class="hljs-comment">// 构造方法private化</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-title function_">Singleton</span><span class="hljs-params">()</span>&#123;<br><br>    &#125;<br><br>    <span class="hljs-comment">// 得到Singleton的实例（唯一途径）</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Singleton <span class="hljs-title function_">getInstance</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> instance;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="第-22-章-桥接模式">第 22 章 桥接模式</h3><p><strong>合成/聚合复用原则（CAPP），尽量使用合成/聚合，尽量不要使用类继承。</strong></p><p><strong>桥接模式（Bridge），将抽象部分与它的实现部分分离，使它们都可以独立地变化。</strong></p><p><img src="https://cdn.gumengyo.top//image-20230516164259051.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.jishuqin.chapter22;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BridgePattern</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        Abstraction ab;<br>        ab = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RefinedAbstraction</span>();<br><br>        ab.setImplementor(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteImplementorA</span>());<br>        ab.operation();<br><br>        ab.setImplementor(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteImplementorB</span>());<br>        ab.operation();<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Implementor</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">operation</span><span class="hljs-params">()</span>;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteImplementorA</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Implementor</span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">operation</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;具体实现A的方法执行&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteImplementorB</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Implementor</span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">operation</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;具体实现B的方法执行&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Abstraction</span>&#123;<br>    <span class="hljs-keyword">protected</span> Implementor implementor;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setImplementor</span><span class="hljs-params">(Implementor implementor)</span>&#123;<br>        <span class="hljs-built_in">this</span>.implementor = implementor;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">operation</span><span class="hljs-params">()</span>;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">RefinedAbstraction</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Abstraction</span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">operation</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;具体的Abstraction&quot;</span>);<br>        implementor.operation();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>实现系统可能有多角度分类，每一种分类都有可能变化，那么就把这种多角度分离出来让它们独立变化，减少它们之间的耦合。</strong></p><h3 id="第-23-章-命令模式">第 23 章 命令模式</h3><p><strong>命令模式（Command），讲一个请求封装为一个对象，从而使你可用不同的请求对客户进行参数化；对请求排队或记录请求日志，以及支持可撤销的操作。</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.jishuqin.chapter23;<br><br><span class="hljs-keyword">import</span> java.text.SimpleDateFormat;<br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.Date;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CommandPattern</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 开店前的准备</span><br>        <span class="hljs-type">Barbecuer</span> <span class="hljs-variable">boy</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Barbecuer</span>(); <span class="hljs-comment">// 烤肉厨师</span><br>        <span class="hljs-type">Command</span> <span class="hljs-variable">bakeMuttonCommand1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BakeMuttonCommand</span>(boy);    <span class="hljs-comment">// 烤羊肉串</span><br>        <span class="hljs-type">Command</span> <span class="hljs-variable">bakeChickenWingCommand1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BakeChickenWingCommand</span>(boy);    <span class="hljs-comment">// 烤羊肉串</span><br>        <span class="hljs-type">Waiter</span> <span class="hljs-variable">girl</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Waiter</span>(); <span class="hljs-comment">// 服务员</span><br><br>        System.out.println(<span class="hljs-string">&quot;开门营业，顾客点菜&quot;</span>);<br>        girl.setOrder(bakeMuttonCommand1);      <span class="hljs-comment">// 下单烤羊肉串</span><br>        girl.setOrder(bakeMuttonCommand1);      <span class="hljs-comment">// 下单烤羊肉串</span><br>        girl.setOrder(bakeMuttonCommand1);      <span class="hljs-comment">// 下单烤羊肉串</span><br>        girl.setOrder(bakeMuttonCommand1);      <span class="hljs-comment">// 下单烤羊肉串</span><br>        girl.setOrder(bakeMuttonCommand1);      <span class="hljs-comment">// 下单烤羊肉串</span><br><br>        girl.cancelOrder(bakeMuttonCommand1);   <span class="hljs-comment">// 取消一串羊肉串订单</span><br><br>        girl.setOrder(bakeChickenWingCommand1); <span class="hljs-comment">// 下单烤鸡翅</span><br><br>        System.out.println(<span class="hljs-string">&quot;点菜完毕，通知厨房烧菜&quot;</span>);<br>        girl.notifyCommand();       <span class="hljs-comment">//通知厨师</span><br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 烤肉串者</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Barbecuer</span>&#123;<br>    <span class="hljs-comment">// 烤羊肉</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">bakeMutton</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;烤羊肉串！&quot;</span>);<br>    &#125;<br>    <span class="hljs-comment">// 烤鸡翅</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">bakeChickenWing</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;烤鸡翅！&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 抽象命令类</span><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Command</span>&#123;<br>    <span class="hljs-keyword">protected</span> Barbecuer receiver;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Command</span><span class="hljs-params">(Barbecuer receiver)</span>&#123;<br>        <span class="hljs-built_in">this</span>.receiver = receiver;<br>    &#125;<br>    <span class="hljs-comment">// 执行命令</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">excuteCommand</span><span class="hljs-params">()</span>;<br>&#125;<br><br><span class="hljs-comment">// 烤羊肉命令类</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">BakeMuttonCommand</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Command</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">BakeMuttonCommand</span><span class="hljs-params">(Barbecuer receiver)</span>&#123;<br>        <span class="hljs-built_in">super</span>(receiver);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">excuteCommand</span><span class="hljs-params">()</span> &#123;<br>        receiver.bakeMutton();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 烤鸡翅命令类</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">BakeChickenWingCommand</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Command</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">BakeChickenWingCommand</span><span class="hljs-params">(Barbecuer receiver)</span>&#123;<br>        <span class="hljs-built_in">super</span>(receiver);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">excuteCommand</span><span class="hljs-params">()</span> &#123;<br>        receiver.bakeChickenWing();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 服务员类</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Waiter</span>&#123;<br>    <span class="hljs-keyword">private</span> ArrayList&lt;Command&gt; orders = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;Command&gt;();<br><br>    <span class="hljs-comment">// 设置订单</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setOrder</span><span class="hljs-params">(Command command)</span>&#123;<br>        String className= command.getClass().getSimpleName();<br><br>        <span class="hljs-keyword">if</span> (className.equals(<span class="hljs-string">&quot;BakeChickenWingCommand&quot;</span>))&#123;<br>            System.out.println(<span class="hljs-string">&quot;服务员：鸡翅没有了，请点别的烧烤。&quot;</span>);<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-built_in">this</span>.orders.add(command);<br>            System.out.println(<span class="hljs-string">&quot;增加订单：&quot;</span>+className + <span class="hljs-string">&quot;时间：&quot;</span>+getNowTime());<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">// 取消订单</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">cancelOrder</span><span class="hljs-params">(Command command)</span>&#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">className</span> <span class="hljs-operator">=</span> command.getClass().getSimpleName();<br>        orders.remove(command);<br>        System.out.println(<span class="hljs-string">&quot;取消订单：&quot;</span>+className+<span class="hljs-string">&quot; 时间：&quot;</span> + getNowTime());<br>    &#125;<br>    <span class="hljs-comment">// 通知执行</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">notifyCommand</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">for</span> (Command command : orders) &#123;<br>            command.excuteCommand();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> String <span class="hljs-title function_">getNowTime</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-type">SimpleDateFormat</span> <span class="hljs-variable">formatter</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SimpleDateFormat</span>(<span class="hljs-string">&quot;HH:mm:ss&quot;</span>);<br>        <span class="hljs-keyword">return</span> formatter.format(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>()).toString();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>优点：</p><ul><li>能较容易地设计一个命令队列</li><li>在需要的情况下，可以较容易地将命令记入日志</li><li>允许接收请求的一方决定是否要否决请求</li><li>可以容易地实现对请求的撤销和重做</li><li>由于加进新的具体命令类不影响其他的类，因此增加新的具体命令类很容易</li><li>命令模式把请求一个操作的对象与知道怎么执行一个操作的对象分隔开</li></ul><h3 id="第-24-章-职责链模式">第 24 章 职责链模式</h3><p><strong>职责链模式（Chain of Responsibility）：使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系。将这个对象连成一条链，并沿着这条链传递该请求，直到有一个对象处理它为止。</strong></p><p><img src="https://cdn.gumengyo.top//image-20230517165824783.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.jishuqin.chapter24;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ChainOfResponsibilityPattern</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Handler</span> <span class="hljs-variable">h1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteHandler1</span>();<br>        <span class="hljs-type">Handler</span> <span class="hljs-variable">h2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteHandler2</span>();<br>        <span class="hljs-type">Handler</span> <span class="hljs-variable">h3</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteHandler3</span>();<br>        h1.setSuccessor(h2);<br>        h2.setSuccessor(h3);<br><br>        <span class="hljs-type">int</span>[] requests = &#123;<span class="hljs-number">2</span>,<span class="hljs-number">5</span>,<span class="hljs-number">14</span>,<span class="hljs-number">22</span>,<span class="hljs-number">18</span>,<span class="hljs-number">3</span>,<span class="hljs-number">27</span>,<span class="hljs-number">20</span>&#125;;<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> request : requests) &#123;<br>            h1.handleRequest(request);<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Handler</span>&#123;<br>    <span class="hljs-keyword">protected</span> Handler successor;<br><br>    <span class="hljs-comment">// 设置继任者</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setSuccessor</span><span class="hljs-params">(Handler successor)</span> &#123;<br>        <span class="hljs-built_in">this</span>.successor = successor;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">handleRequest</span><span class="hljs-params">(<span class="hljs-type">int</span> request)</span>;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteHandler1</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Handler</span> &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">handleRequest</span><span class="hljs-params">(<span class="hljs-type">int</span> request)</span> &#123;<br>        <span class="hljs-keyword">if</span> (request &gt;= <span class="hljs-number">0</span> &amp;&amp; request &lt; <span class="hljs-number">10</span>)&#123;<br>            System.out.println(<span class="hljs-built_in">this</span>.getClass().getSimpleName() + <span class="hljs-string">&quot; 处理请求 &quot;</span>+request);<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(successor != <span class="hljs-literal">null</span>)&#123;<br>            successor.handleRequest(request);<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteHandler2</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Handler</span> &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">handleRequest</span><span class="hljs-params">(<span class="hljs-type">int</span> request)</span> &#123;<br>        <span class="hljs-keyword">if</span> (request &gt;= <span class="hljs-number">10</span> &amp;&amp; request &lt; <span class="hljs-number">20</span>)&#123;<br>            System.out.println(<span class="hljs-built_in">this</span>.getClass().getSimpleName() + <span class="hljs-string">&quot; 处理请求 &quot;</span>+request);<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(successor != <span class="hljs-literal">null</span>)&#123;<br>            successor.handleRequest(request);<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteHandler3</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Handler</span> &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">handleRequest</span><span class="hljs-params">(<span class="hljs-type">int</span> request)</span> &#123;<br>        <span class="hljs-keyword">if</span> (request &gt;= <span class="hljs-number">20</span> &amp;&amp; request &lt; <span class="hljs-number">30</span>)&#123;<br>            System.out.println(<span class="hljs-built_in">this</span>.getClass().getSimpleName() + <span class="hljs-string">&quot; 处理请求 &quot;</span>+request);<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(successor != <span class="hljs-literal">null</span>)&#123;<br>            successor.handleRequest(request);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>职责链的好处：</strong></p><ul><li>接收者和发送者都没有对方的明确信息，且链中的对象自己也并不知道链的结构。结果是职责链可简化对象的相互连接，它们仅需保持一个指向其后继者的引用，而不需保持它所有的候选接收者的引用。</li><li>可以随时地增加或修改处理一个请求的结构。增强了给对象指派职责的灵活性。</li></ul><h3 id="第-25-章-中介者模式">第 25 章 中介者模式</h3><p><strong>中介者模式（Mediator），用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。</strong></p><p><img src="https://cdn.gumengyo.top//image-20230517171344605.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.jishuqin.chapter25;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MediatorPattern</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">ConcreteMediator</span> <span class="hljs-variable">m</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteMediator</span>();<br><br>        <span class="hljs-type">ConcreteColleague1</span> <span class="hljs-variable">c1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteColleague1</span>(m);<br>        <span class="hljs-type">ConcreteColleague2</span> <span class="hljs-variable">c2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteColleague2</span>(m);<br><br>        m.setColleague1(c1);<br>        m.setColleague2(c2);<br><br>        c1.send(<span class="hljs-string">&quot;吃过饭了吗？&quot;</span>);<br>        c2.send(<span class="hljs-string">&quot;没有呢，你打算请客？&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Colleague</span>&#123;<br>    <span class="hljs-keyword">protected</span> Mediator mediator;<br>    <span class="hljs-comment">// 构造方法，得到中介者对象</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Colleague</span><span class="hljs-params">(Mediator mediator)</span>&#123;<br>        <span class="hljs-built_in">this</span>.mediator = mediator;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteColleague1</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Colleague</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">ConcreteColleague1</span><span class="hljs-params">(Mediator mediator)</span>&#123;<br>        <span class="hljs-built_in">super</span>(mediator);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">send</span><span class="hljs-params">(String message)</span> &#123;<br>        <span class="hljs-built_in">this</span>.mediator.send(message,<span class="hljs-built_in">this</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">notify</span><span class="hljs-params">(String message)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;同事1得到信息：&quot;</span>+message);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteColleague2</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Colleague</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">ConcreteColleague2</span><span class="hljs-params">(Mediator mediator)</span>&#123;<br>        <span class="hljs-built_in">super</span>(mediator);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">send</span><span class="hljs-params">(String message)</span> &#123;<br>        <span class="hljs-built_in">this</span>.mediator.send(message,<span class="hljs-built_in">this</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">notify</span><span class="hljs-params">(String message)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;同事2得到信息：&quot;</span>+message);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 中介者类</span><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Mediator</span>&#123;<br>    <span class="hljs-comment">// 定义一个抽象的发送消息方法，得到同事对象和发送消息</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">send</span><span class="hljs-params">(String message,Colleague colleague)</span>;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteMediator</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Mediator</span> &#123;<br><br>    <span class="hljs-keyword">private</span> ConcreteColleague1 colleague1;<br>    <span class="hljs-keyword">private</span> ConcreteColleague2 colleague2;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setColleague1</span><span class="hljs-params">(ConcreteColleague1 value)</span>&#123;<br>        <span class="hljs-built_in">this</span>.colleague1 = value;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setColleague2</span><span class="hljs-params">(ConcreteColleague2 value)</span>&#123;<br>        <span class="hljs-built_in">this</span>.colleague2 = value;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">send</span><span class="hljs-params">(String message, Colleague colleague)</span> &#123;<br>        <span class="hljs-keyword">if</span> (colleague == colleague1)&#123;<br>            colleague2.notify(message);<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            colleague1.notify(message);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>中介者模式一般应用于一组对象以定义良好但是复杂的方式进行通信的场合，以及想定制一个分布在多个类中的行为，而又不想生成太多的子类的场合。</p><h3 id="第-26-章-享元模式">第 26 章 享元模式</h3><p><strong>享元模式（Flyweight），运用共享技术有效地支持大量细粒度的对象。</strong></p><p><img src="https://cdn.gumengyo.top//image-20230518185501261.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.jishuqin.chapter26;<br><br><span class="hljs-keyword">import</span> java.util.Hashtable;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FlyweightPattern</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">extrinsicstate</span> <span class="hljs-operator">=</span> <span class="hljs-number">22</span>;<br><br>        <span class="hljs-type">FlyweightFactory</span> <span class="hljs-variable">f</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FlyweightFactory</span>();<br><br>        <span class="hljs-type">Flyweight</span> <span class="hljs-variable">fx</span> <span class="hljs-operator">=</span> f.getFlyweight(<span class="hljs-string">&quot;X&quot;</span>);<br>        fx.operation(--extrinsicstate);<br><br>        <span class="hljs-type">Flyweight</span> <span class="hljs-variable">fy</span> <span class="hljs-operator">=</span> f.getFlyweight(<span class="hljs-string">&quot;Y&quot;</span>);<br>        fy.operation(--extrinsicstate);<br><br>        <span class="hljs-type">Flyweight</span> <span class="hljs-variable">fz</span> <span class="hljs-operator">=</span> f.getFlyweight(<span class="hljs-string">&quot;Z&quot;</span>);<br>        fz.operation(--extrinsicstate);<br><br>        <span class="hljs-type">Flyweight</span> <span class="hljs-variable">uf</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnsharedConcreteFlyweight</span>();<br><br>        uf.operation(--extrinsicstate);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Flyweight</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">operation</span><span class="hljs-params">(<span class="hljs-type">int</span> extrinsicstate)</span>;<br>&#125;<br><br><span class="hljs-comment">// 需要共享的具体Flyweight子类</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteFlyweight</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Flyweight</span>&#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">operation</span><span class="hljs-params">(<span class="hljs-type">int</span> extrinsicstate)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;具体Flyweight:&quot;</span> + extrinsicstate);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 不需要共享的Flyweight子类</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">UnsharedConcreteFlyweight</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Flyweight</span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">operation</span><span class="hljs-params">(<span class="hljs-type">int</span> extrinsicstate)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;不共享的具体Flyweight:&quot;</span> + extrinsicstate);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 享元工厂</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">FlyweightFactory</span>&#123;<br>    <span class="hljs-keyword">private</span> Hashtable&lt;String,Flyweight&gt; flyweights = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Hashtable</span>&lt;String,Flyweight&gt;();<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">FlyweightFactory</span><span class="hljs-params">()</span>&#123;<br>        flyweights.put(<span class="hljs-string">&quot;X&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteFlyweight</span>());<br>        flyweights.put(<span class="hljs-string">&quot;Y&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteFlyweight</span>());<br>        flyweights.put(<span class="hljs-string">&quot;Z&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteFlyweight</span>());<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> Flyweight <span class="hljs-title function_">getFlyweight</span><span class="hljs-params">(String key)</span>&#123;<br>        <span class="hljs-keyword">return</span> flyweights.get(key);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>如果一个应用程序使用了大量的对象，而大量的这些对象造成了很大的存储开销时就应该考虑使用享元模式；还有就是对象的大多数状态可以是外部状态，如果删除对象的外部状态，那么可以相对较少的共享对象取代很多组对象，此时可以考虑使用享元模式。</p><h3 id="第-27-章-解释器模式">第 27 章 解释器模式</h3><p><strong>解释器模式（interpreter），给定一个语言，定义它的文法的一种表示，并定义一个解释器，这个解释器使用该表示来解释语言中的句子。</strong></p><p><img src="https://cdn.gumengyo.top//image-20230518191404357.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.jishuqin.chapter27;<br><br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">InterpreterPattern</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Context</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Context</span>();<br>        ArrayList&lt;AbstractExpression&gt; list = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;AbstractExpression&gt;();<br>        list.add(<span class="hljs-keyword">new</span> <span class="hljs-title class_">TerminalExpression</span>());<br>        list.add(<span class="hljs-keyword">new</span> <span class="hljs-title class_">NonterminalExpression</span>());<br>        list.add(<span class="hljs-keyword">new</span> <span class="hljs-title class_">TerminalExpression</span>());<br>        list.add(<span class="hljs-keyword">new</span> <span class="hljs-title class_">TerminalExpression</span>());<br><br>        <span class="hljs-keyword">for</span> (AbstractExpression exp : list) &#123;<br>            exp.interpret(context);<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 抽象表达式</span><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AbstractExpression</span>&#123;<br>    <span class="hljs-comment">// 解释操作</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">interpret</span><span class="hljs-params">(Context context)</span>;<br>&#125;<br><br><span class="hljs-comment">// 终结符表达式</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">TerminalExpression</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AbstractExpression</span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">interpret</span><span class="hljs-params">(Context context)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;终端解释器&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 非终结符表达式</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">NonterminalExpression</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AbstractExpression</span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">interpret</span><span class="hljs-params">(Context context)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;非终端解释器&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Context</span>&#123;<br>    <span class="hljs-keyword">private</span> String input;<br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getInput</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.input;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setInput</span><span class="hljs-params">(String value)</span>&#123;<br>        <span class="hljs-built_in">this</span>.input = value;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> String output;<br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getOutput</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.output;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setOutput</span><span class="hljs-params">(String value)</span>&#123;<br>        <span class="hljs-built_in">this</span>.output = value;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>如果一种特定类型的问题发生的频率足够高，那么可能就值得将该问题的各个实例表述为一个简单语言中的句子。</p><p>这样就可以构建一个解释器，该解释器通过解释这些句子来解决该问题。</p><h3 id="第-28-章-访问者模式">第 28 章 访问者模式</h3><p><strong>访问者模式（Visitor），表示一个作用于某对象结构中的各元素的操作。它使你可以在不改变各元素的类的前提下定义作用于这些元素的新操作。</strong></p><p><img src="https://cdn.gumengyo.top//image-20230520200148737.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.jishuqin.chapter28;<br><br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">VisitorPattern</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">ObjectStructure</span> <span class="hljs-variable">o</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectStructure</span>();<br>        o.attach(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteElementA</span>());<br>        o.attach(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteElementB</span>());<br><br>        <span class="hljs-type">ConcreteVisitor1</span> <span class="hljs-variable">v1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteVisitor1</span>();<br>        <span class="hljs-type">ConcreteVisitor2</span> <span class="hljs-variable">v2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcreteVisitor2</span>();<br><br>        o.accept(v1);<br>        o.accept(v2);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Visitor</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">visitConcreteElementA</span><span class="hljs-params">(ConcreteElementA concreteElementA)</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">visitConcreteElementB</span><span class="hljs-params">(ConcreteElementB concreteElementB)</span>;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteVisitor1</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Visitor</span> &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">visitConcreteElementA</span><span class="hljs-params">(ConcreteElementA concreteElementA)</span> &#123;<br>        System.out.println(concreteElementA.getClass().getSimpleName()+<span class="hljs-string">&quot;被&quot;</span>+<span class="hljs-built_in">this</span>.getClass().getSimpleName()+<span class="hljs-string">&quot;访问&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">visitConcreteElementB</span><span class="hljs-params">(ConcreteElementB concreteElementB)</span> &#123;<br>        System.out.println(concreteElementB.getClass().getSimpleName()+<span class="hljs-string">&quot;被&quot;</span>+<span class="hljs-built_in">this</span>.getClass().getSimpleName()+<span class="hljs-string">&quot;访问&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteVisitor2</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Visitor</span> &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">visitConcreteElementA</span><span class="hljs-params">(ConcreteElementA concreteElementA)</span> &#123;<br>        System.out.println(concreteElementA.getClass().getSimpleName()+<span class="hljs-string">&quot;被&quot;</span>+<span class="hljs-built_in">this</span>.getClass().getSimpleName()+<span class="hljs-string">&quot;访问&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">visitConcreteElementB</span><span class="hljs-params">(ConcreteElementB concreteElementB)</span> &#123;<br>        System.out.println(concreteElementB.getClass().getSimpleName()+<span class="hljs-string">&quot;被&quot;</span>+<span class="hljs-built_in">this</span>.getClass().getSimpleName()+<span class="hljs-string">&quot;访问&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Element</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">accept</span><span class="hljs-params">(Visitor visitor)</span>;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteElementA</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Element</span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">accept</span><span class="hljs-params">(Visitor visitor)</span> &#123;<br>        visitor.visitConcreteElementA(<span class="hljs-built_in">this</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">operationA</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-comment">// 其他相关操作</span><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ConcreteElementB</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Element</span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">accept</span><span class="hljs-params">(Visitor visitor)</span> &#123;<br>        visitor.visitConcreteElementB(<span class="hljs-built_in">this</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">operationA</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-comment">// 其他相关操作</span><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ObjectStructure</span>&#123;<br>    <span class="hljs-keyword">private</span> ArrayList&lt;Element&gt; elements = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;Element&gt;();<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">attach</span><span class="hljs-params">(Element element)</span>&#123;<br>        elements.add(element);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">detach</span><span class="hljs-params">(Element element)</span>&#123;<br>        elements.remove(element);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">accept</span><span class="hljs-params">(Visitor visitor)</span>&#123;<br>        <span class="hljs-keyword">for</span> (Element element : elements) &#123;<br>            element.accept(visitor);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>访问者模式的目的是要把处理从数据结构分离出来，有比较稳定的数据结构，又有易于变化的算法的话，使用访问者模式就是比较合适的，因为访问者模式使得算法操作的增加变得容易。</p><p>访问者模式的优点就是增加新的操作很容易，因为增加新的操作就意味着增加一个新的访问者。</p><p>访问者模式将有关的行为集中到一个访问者对象中。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;大话设计模式&quot;&gt;大话设计模式&lt;/h2&gt;
&lt;p class=&quot;note note-primary&quot;&gt;此文为我学习大话设计模式时的笔记，代码样例也是书里的。这本书对学习理解设计模式还是挺有帮助，推荐大家可以看看~&lt;/p&gt;
&lt;h3 id=&quot;第-0-章-面向对象基础&quot;&gt;第</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.jishuqin.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="设计模式" scheme="https://blog.jishuqin.cn/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Docker 配置 redis 集群3主3从</title>
    <link href="https://blog.jishuqin.cn/posts/dcba4321/"/>
    <id>https://blog.jishuqin.cn/posts/dcba4321/</id>
    <published>2023-04-20T15:33:00.000Z</published>
    <updated>2025-08-27T03:20:31.435Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Docker-配置-redis-集群3主3从">Docker 配置 redis 集群3主3从</h2><p><img src="https://cdn.gumengyo.top//202304201540834.png" srcset="/img/loading.gif" lazyload alt=""></p><h3 id="1-启动docker服务">1. 启动docker服务</h3><p class="note note-warning">注意开放端口，或者关闭防火墙，否则从机连接不上主机。</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">systemctl <span class="hljs-literal">start</span> docker<br></code></pre></td></tr></table></figure><h3 id="2-创建6个docker容器redis实例">2. 创建6个docker容器redis实例</h3><h4 id="1）创建实例-redis-node-1">1）创建实例 redis-node-1</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">docker run -d <span class="hljs-params">--name</span> redis-node-1 <span class="hljs-params">--net</span> host <span class="hljs-params">--privileged=true</span> -v <span class="hljs-string">/data/redis/share/redis-node-1</span>:<span class="hljs-string">/data</span> redis<span class="hljs-function">:6.0.8</span> <span class="hljs-params">--cluster-enabled</span> yes <span class="hljs-params">--appendonly</span> yes <span class="hljs-params">--port</span> 6381<br></code></pre></td></tr></table></figure><h4 id="2）创建实例-redis-node-2">2）创建实例 redis-node-2</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">docker run -d <span class="hljs-params">--name</span> redis-node-2 <span class="hljs-params">--net</span> host <span class="hljs-params">--privileged=true</span> -v <span class="hljs-string">/data/redis/share/redis-node-2</span>:<span class="hljs-string">/data</span> redis<span class="hljs-function">:6.0.8</span> <span class="hljs-params">--cluster-enabled</span> yes <span class="hljs-params">--appendonly</span> yes <span class="hljs-params">--port</span> 6382<br></code></pre></td></tr></table></figure><h4 id="3）创建实例-redis-node-3">3）创建实例 redis-node-3</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">docker run -d <span class="hljs-params">--name</span> redis-node-3 <span class="hljs-params">--net</span> host <span class="hljs-params">--privileged=true</span> -v <span class="hljs-string">/data/redis/share/redis-node-3</span>:<span class="hljs-string">/data</span> redis<span class="hljs-function">:6.0.8</span> <span class="hljs-params">--cluster-enabled</span> yes <span class="hljs-params">--appendonly</span> yes <span class="hljs-params">--port</span> 6383 <br></code></pre></td></tr></table></figure><h4 id="4）创建实例-redis-node-4">4）创建实例 redis-node-4</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">docker run -d <span class="hljs-params">--name</span> redis-node-4 <span class="hljs-params">--net</span> host <span class="hljs-params">--privileged=true</span> -v <span class="hljs-string">/data/redis/share/redis-node-4</span>:<span class="hljs-string">/data</span> redis<span class="hljs-function">:6.0.8</span> <span class="hljs-params">--cluster-enabled</span> yes <span class="hljs-params">--appendonly</span> yes <span class="hljs-params">--port</span> 6384<br></code></pre></td></tr></table></figure><h4 id="5）创建实例-redis-node-4">5）创建实例 redis-node-4</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">docker run -d <span class="hljs-params">--name</span> redis-node-5 <span class="hljs-params">--net</span> host <span class="hljs-params">--privileged=true</span> -v <span class="hljs-string">/data/redis/share/redis-node-5</span>:<span class="hljs-string">/data</span> redis<span class="hljs-function">:6.0.8</span> <span class="hljs-params">--cluster-enabled</span> yes <span class="hljs-params">--appendonly</span> yes <span class="hljs-params">--port</span> 6385<br></code></pre></td></tr></table></figure><h4 id="6）创建实例-redis-node-6">6）创建实例 redis-node-6</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">docker run -d <span class="hljs-params">--name</span> redis-node-6 <span class="hljs-params">--net</span> host <span class="hljs-params">--privileged=true</span> -v <span class="hljs-string">/data/redis/share/redis-node-6</span>:<span class="hljs-string">/data</span> redis<span class="hljs-function">:6.0.8</span> <span class="hljs-params">--cluster-enabled</span> yes <span class="hljs-params">--appendonly</span> yes <span class="hljs-params">--port</span> 6386<br></code></pre></td></tr></table></figure><p>命令解释：</p><ul><li><code>docker run</code> ：创建并运行docker容器实例</li><li><code>--name redis-node-6</code>：容器名字</li><li><code>--net host</code> ：使用宿主机的IP和端口，默认</li><li><code>--privileged=true</code>：获取宿主机root用户权限</li><li><code>-v /data/redis/share/redis-node-6:/data</code>：容器卷，宿主机地址:dockerp内部地址</li><li><code>redis:6.0.8</code>：redis镜像和版本号</li><li><code>--cluster-enabled ye</code>：开启redis集群</li><li><code>--appendonly yes</code>：开启持久化</li><li><code>--port 6386</code>：redis端口号</li></ul><p class="note note-success">运行成功，效果如下</p><p><img src="https://cdn.gumengyo.top//image-20230420160742483.png" srcset="/img/loading.gif" lazyload alt=""></p><h3 id="3-进入容器构建集群关系">3. 进入容器构建集群关系</h3><p>进入容器 redis-noe-1</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">docker exec -it redis-<span class="hljs-keyword">node</span><span class="hljs-title">-1</span> /bin/bash<br></code></pre></td></tr></table></figure><p class="note note-warning">注意：进入docker容器后才能执行一下命令，且注意自己的真实IP地址</p><p><strong>构建主从关系</strong></p><p><code>--cluster-replicas 1</code> 表示为每个master创建一个slave节点</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns">redis-cli --cluster create <span class="hljs-number">192.168.111.147</span>:<span class="hljs-number">6381 192.168</span>.<span class="hljs-number">111.147:6382</span> <span class="hljs-number">192.168.111.147</span>:<span class="hljs-number">6383 192.168</span>.<span class="hljs-number">111.147:6384</span> <span class="hljs-number">192.168.111.147</span>:<span class="hljs-number">6385 192.168</span>.<span class="hljs-number">111.147:6386</span> --cluster-replicas <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.gumengyo.top//image-20230420161646479.png" srcset="/img/loading.gif" lazyload alt=""></p><p><img src="https://cdn.gumengyo.top//image-20230420161721416.png" srcset="/img/loading.gif" lazyload alt=""></p><p><img src="https://cdn.gumengyo.top/s0yfnhqj.png" srcset="/img/loading.gif" lazyload alt=""></p><h3 id="4-查看集群状态">4. 查看集群状态</h3><p>链接进入6381作为切入点，查看节点状态</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">redis-cli -p <span class="hljs-number">6381</span><br><br><span class="hljs-keyword">cluster</span> <span class="hljs-keyword">info</span><br><br><span class="hljs-keyword">cluster</span> nodes<br></code></pre></td></tr></table></figure><p><img src="https://cdn.gumengyo.top//image-20230420162502394.png" srcset="/img/loading.gif" lazyload alt=""></p><p class="note note-success">若集群状态跟上图一样，则说明3主3从集群搭建成功啦~👌</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Docker-配置-redis-集群3主3从&quot;&gt;Docker 配置 redis 集群3主3从&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.gumengyo.top//202304201540834.png&quot; srcset=&quot;/img/loading</summary>
      
    
    
    
    <category term="服务配置" scheme="https://blog.jishuqin.cn/categories/%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="Docker" scheme="https://blog.jishuqin.cn/tags/Docker/"/>
    
    <category term="Redis" scheme="https://blog.jishuqin.cn/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Docker 安装 mysql 主从复制</title>
    <link href="https://blog.jishuqin.cn/posts/ff001122/"/>
    <id>https://blog.jishuqin.cn/posts/ff001122/</id>
    <published>2023-04-19T20:53:00.000Z</published>
    <updated>2025-08-27T03:20:31.435Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装-mysql-主从复制">安装 mysql 主从复制</h2><h3 id="1-新建主服务容器实例-3307">1. 新建主服务容器实例 3307</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs groovy">docker run -p <span class="hljs-number">3307</span>:<span class="hljs-number">3306</span> --name mysql-master \<br>-v <span class="hljs-regexp">/mydata/</span>mysql-master<span class="hljs-regexp">/log:/</span><span class="hljs-keyword">var</span><span class="hljs-regexp">/log/</span>mysql \<br>-v <span class="hljs-regexp">/mydata/</span>mysql-master<span class="hljs-regexp">/data:/</span><span class="hljs-keyword">var</span><span class="hljs-regexp">/lib/</span>mysql \<br>-v <span class="hljs-regexp">/mydata/</span>mysql-master<span class="hljs-regexp">/conf:/</span>etc/mysql \<br>-e MYSQL_ROOT_PASSWORD=root  \<br>-d <span class="hljs-attr">mysql:</span><span class="hljs-number">5.7</span><br></code></pre></td></tr></table></figure><h3 id="2-新建-my-cnf-文件">2. 新建 my.cnf 文件</h3><p>进入/mydata/mysql–master/conf目录下新建 my.cnf，粘贴以下内容</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[mysqld]</span><br><span class="hljs-comment">## 设置server_id，同一局域网中需要唯一</span><br><span class="hljs-attr">server_id</span>=<span class="hljs-number">101</span> <br><span class="hljs-comment">## 指定不需要同步的数据库名称</span><br><span class="hljs-attr">binlog-ignore-db</span>=mysql  <br><span class="hljs-comment">## 开启二进制日志功能</span><br><span class="hljs-attr">log-bin</span>=mall-mysql-bin  <br><span class="hljs-comment">## 设置二进制日志使用内存大小（事务）</span><br><span class="hljs-attr">binlog_cache_size</span>=<span class="hljs-number">1</span>M  <br><span class="hljs-comment">## 设置使用的二进制日志格式（mixed,statement,row）</span><br><span class="hljs-attr">binlog_format</span>=mixed  <br><span class="hljs-comment">## 二进制日志过期清理时间。默认值为0，表示不自动清理。</span><br><span class="hljs-attr">expire_logs_days</span>=<span class="hljs-number">7</span>  <br><span class="hljs-comment">## 跳过主从复制中遇到的所有错误或指定类型的错误，避免slave端复制中断。</span><br><span class="hljs-comment">## 如：1062错误是指一些主键重复，1032错误是因为主从数据库数据不一致</span><br><span class="hljs-attr">slave_skip_errors</span>=<span class="hljs-number">1062</span><br></code></pre></td></tr></table></figure><h3 id="3-修改好配置后重启-master-实例">3. 修改好配置后重启 master 实例</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">docker restart mysql-<span class="hljs-literal">master</span><br></code></pre></td></tr></table></figure><h3 id="4-进入mysql-master-容器">4. 进入mysql-master 容器</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">docker exec -it mysql-<span class="hljs-keyword">master</span> <span class="hljs-title">/bin</span>/bash<br>mysql -uroot -proot<br></code></pre></td></tr></table></figure><h3 id="5-master-容器实例内创建数据同步用户">5. master 容器实例内创建数据同步用户</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;slave&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;123456&#x27;</span>;<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">REPLICATION</span> SLAVE,<span class="hljs-keyword">REPLICATION</span> CLIENT <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;slave&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span>;<br></code></pre></td></tr></table></figure><h3 id="6-查看同步用户权限">6. 查看同步用户权限</h3><p>通过指令&quot;<strong>select user,host from user;</strong>&quot;查看备份账号IP访问权限是否为’%'，通过&quot;<strong>show grants for slave</strong>&quot;查看复制账户是否拥有REPLICATION CLIENT、REPLICATION SLAVE、SUPER、RELOAD权限；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql">use mysql;<br><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>,host <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span>;<br><br><span class="hljs-keyword">show</span> grants <span class="hljs-keyword">for</span> slave;<br></code></pre></td></tr></table></figure><p><img src="https://cdn.gumengyo.top//image-20230416232437814.png" srcset="/img/loading.gif" lazyload alt=""></p><p>如果没有的话使用命令授权</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">grant</span> <span class="hljs-keyword">REPLICATION</span> CLIENT <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">TO</span> slave;<br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">REPLICATION</span> SLAVE <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">TO</span> slave;<br><span class="hljs-keyword">grant</span> SUPER <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">TO</span> slave;<br><span class="hljs-keyword">grant</span> reload <span class="hljs-keyword">on</span> *.* <span class="hljs-keyword">to</span> slave;<br>FLUSH <span class="hljs-keyword">PRIVILEGES</span>;<br></code></pre></td></tr></table></figure><h3 id="7-新建从服务容器实例-3308">7. 新建从服务容器实例 3308</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs groovy">docker run -p <span class="hljs-number">3308</span>:<span class="hljs-number">3306</span> --name mysql-slave \<br>-v <span class="hljs-regexp">/mydata/</span>mysql-slave<span class="hljs-regexp">/log:/</span><span class="hljs-keyword">var</span><span class="hljs-regexp">/log/</span>mysql \<br>-v <span class="hljs-regexp">/mydata/</span>mysql-slave<span class="hljs-regexp">/data:/</span><span class="hljs-keyword">var</span><span class="hljs-regexp">/lib/</span>mysql \<br>-v <span class="hljs-regexp">/mydata/</span>mysql-slave<span class="hljs-regexp">/conf:/</span>etc/mysql \<br>-e MYSQL_ROOT_PASSWORD=root  \<br>-d <span class="hljs-attr">mysql:</span><span class="hljs-number">5.7</span><br></code></pre></td></tr></table></figure><h3 id="8-新建-my-cnf-文件">8. 新建 my.cnf 文件</h3><p>进入/mydata/mysql-slave/conf目录下新建my.cnf</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[mysqld]</span><br><span class="hljs-comment">## 设置server_id，同一局域网中需要唯一</span><br><span class="hljs-attr">server_id</span>=<span class="hljs-number">102</span><br><span class="hljs-comment">## 指定不需要同步的数据库名称</span><br><span class="hljs-attr">binlog-ignore-db</span>=mysql  <br><span class="hljs-comment">## 开启二进制日志功能，以备Slave作为其它数据库实例的Master时使用</span><br><span class="hljs-attr">log-bin</span>=mall-mysql-slave1-bin  <br><span class="hljs-comment">## 设置二进制日志使用内存大小（事务）</span><br><span class="hljs-attr">binlog_cache_size</span>=<span class="hljs-number">1</span>M  <br><span class="hljs-comment">## 设置使用的二进制日志格式（mixed,statement,row）</span><br><span class="hljs-attr">binlog_format</span>=mixed  <br><span class="hljs-comment">## 二进制日志过期清理时间。默认值为0，表示不自动清理。</span><br><span class="hljs-attr">expire_logs_days</span>=<span class="hljs-number">7</span>  <br><span class="hljs-comment">## 跳过主从复制中遇到的所有错误或指定类型的错误，避免slave端复制中断。</span><br><span class="hljs-comment">## 如：1062错误是指一些主键重复，1032错误是因为主从数据库数据不一致</span><br><span class="hljs-attr">slave_skip_errors</span>=<span class="hljs-number">1062</span>  <br><span class="hljs-comment">## relay_log配置中继日志</span><br><span class="hljs-attr">relay_log</span>=mall-mysql-relay-bin  <br><span class="hljs-comment">## log_slave_updates表示slave将复制事件写进自己的二进制日志</span><br><span class="hljs-attr">log_slave_updates</span>=<span class="hljs-number">1</span>  <br><span class="hljs-comment">## slave设置为只读（具有super权限的用户除外）</span><br><span class="hljs-attr">read_only</span>=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h3 id="9-修改完配置后重启slave实例">9. 修改完配置后重启slave实例</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">docker restart mysql-<span class="hljs-literal">slave</span><br></code></pre></td></tr></table></figure><h3 id="10-在主数据库中查看主从同步状态">10. 在主数据库中查看主从同步状态</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">show <span class="hljs-keyword">master</span> <span class="hljs-title">status</span>;<br></code></pre></td></tr></table></figure><p><img src="https://cdn.gumengyo.top//image-20230416233143501.png" srcset="/img/loading.gif" lazyload alt=""></p><h3 id="11-进入mysql–slave容器">11. 进入mysql–slave容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it mysql-slave /bin/bash<br><br>mysql -uroot -proot<br></code></pre></td></tr></table></figure><h3 id="12-在从数据库中配置主从复制">12. 在从数据库中配置主从复制</h3><p class="note note-warning">注意开放端口，或者关闭防火墙，否则从机连接不上主机。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">change master <span class="hljs-keyword">to</span> <span class="hljs-attribute">master_host</span>=<span class="hljs-string">&#x27;宿主机ip&#x27;</span>, <span class="hljs-attribute">master_user</span>=<span class="hljs-string">&#x27;slave&#x27;</span>, <span class="hljs-attribute">master_password</span>=<span class="hljs-string">&#x27;123456&#x27;</span>, <span class="hljs-attribute">master_port</span>=3307, <span class="hljs-attribute">master_log_file</span>=<span class="hljs-string">&#x27;mall-mysql-bin.000001&#x27;</span>, <span class="hljs-attribute">master_log_pos</span>=617, <span class="hljs-attribute">master_connect_retry</span>=30;<br></code></pre></td></tr></table></figure><p>参数说明：</p><ul><li>master_host：主数据库的IP地址；</li><li>master_port：主数据库的运行端口；</li><li>master_user：在主数据库创建的用于同步数据的用户账号；</li><li>master_password：在主数据库创建的用于同步数据的用户密码；</li><li>master_log_file：指定从数据库要复制数据的日志文件，通过查看主数据的状态，获取File参数；</li><li>master_log_pos：指定从数据库从哪个位置开始复制数据，通过查看主数据的状态，获取Position参数；</li><li>master_connect_retry：连接失败重试的时间间隔，单位为秒。</li></ul><h3 id="13-在从数据库中开启主从同步">13. 在从数据库中开启主从同步</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-literal">start</span> <span class="hljs-literal">slave</span>;<br></code></pre></td></tr></table></figure><h3 id="14-查看从数据库主从同步状态">14. 查看从数据库主从同步状态</h3><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima"><span class="hljs-built_in">show</span> slave <span class="hljs-built_in">status</span> \G;<br></code></pre></td></tr></table></figure><p><img src="https://cdn.gumengyo.top//image-20230416233720733.png" srcset="/img/loading.gif" lazyload alt=""></p><p><code>Slave_IO_Running</code>和<code>Slave_SQL_Running</code>状态为Yes则配置成功。</p><h3 id="15-主从复制测试">15. 主从复制测试</h3><p>主机新建库-使用库-新建表-插入数据</p><p><img src="https://cdn.gumengyo.top//image-20230416234054073.png" srcset="/img/loading.gif" lazyload alt=""></p><p>从机使用库-查看记录</p><p><img src="https://cdn.gumengyo.top//image-20230416234203024.png" srcset="/img/loading.gif" lazyload alt=""></p><p class="note note-success">主机写入数据，从机能查询到数据，则说明主从复制搭建成功~👌</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装-mysql-主从复制&quot;&gt;安装 mysql 主从复制&lt;/h2&gt;
&lt;h3 id=&quot;1-新建主服务容器实例-3307&quot;&gt;1. 新建主服务容器实例 3307&lt;/h3&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c</summary>
      
    
    
    
    <category term="服务配置" scheme="https://blog.jishuqin.cn/categories/%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="Docker" scheme="https://blog.jishuqin.cn/tags/Docker/"/>
    
    <category term="Mysql" scheme="https://blog.jishuqin.cn/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>Docker 基础篇笔记</title>
    <link href="https://blog.jishuqin.cn/posts/3f5a7c9b/"/>
    <id>https://blog.jishuqin.cn/posts/3f5a7c9b/</id>
    <published>2023-04-16T00:16:01.000Z</published>
    <updated>2025-08-27T03:20:31.435Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Docker-基础篇">Docker 基础篇</h2><p>尚硅谷Docker教程：<a href="https://www.bilibili.com/video/BV1gr4y1U7CY/">https://www.bilibili.com/video/BV1gr4y1U7CY/</a></p><p>docker 官网：<a href="http://www.docker.com">http://www.docker.com</a></p><p>Docker Hub 官网：<a href="https://hub.docker.com/">https://hub.docker.com/</a></p><h3 id="前言">前言</h3><h4 id="Docker简介">Docker简介</h4><p><strong>Docker是基于Go语言实现的云开源项目。</strong></p><p>Docker的主要目标是“Build，Ship and Run Any App,Anywhere”，也就是通过对应用组件的封装、分发、部署、运行等生命周期的管理，使用户的APP（可以是一个WEB应用或数据库应用等等）及其运行环境能够做到“一次镜像，处处运行”。</p><h4 id="整体架构及底层通信原理简述">整体架构及底层通信原理简述</h4><p>Docker 是一个 C/S 模式的架构，后端是一个松耦合架构，众多模块各司其职。</p><p><img src="https://cdn.gumengyo.top//202304132205266.png" srcset="/img/loading.gif" lazyload alt=""></p><img src="https://cdn.gumengyo.top//202304132206500.png" srcset="/img/loading.gif" lazyload style="zoom:80%;" /><h3 id="一、初次启动测试">一、初次启动测试</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-built_in">run</span> hello-world<br></code></pre></td></tr></table></figure><p><img src="https://cdn.gumengyo.top//202304112210801.png" srcset="/img/loading.gif" lazyload alt=""></p><h3 id="二、Docker-常用命令">二、Docker 常用命令</h3><h4 id="1-帮助启动类命令">1. 帮助启动类命令</h4><p>启动docker：<code>systemctl start docker</code><br>停l止docker：<code>systemctl stop docker</code><br>重启docker：<code>systemctl restart docker</code><br>查看docker&gt;状态：<code>systemctl status docker</code><br>开机启动：<code>systemctl enable docker</code><br>查看docker概要信息：<code>docker info</code><br>查看docker总体帮助文档：<code>docker-help</code><br>查看docker命令帮助文档：<code>docker具体命令-help</code></p><h4 id="2-镜像命令">2. 镜像命令</h4><p>列出本地主机上的镜像：<code>docker imags</code></p><ul><li>-a：列出本地所有的镜像（含历史映像层）</li><li>-q：只显示镜像ID</li></ul><p>查找镜像：<code>docker search 镜像名字</code></p><p>拉取镜像：<code>docker pull 镜像名[TAG]</code></p><ul><li>TAG为空则默认为latest</li></ul><p>查看镜像/容器/数据卷 所占用的空间：<code>docker system df</code></p><p>删除镜像：<code>docker rmi 镜像ID</code></p><ul><li>删除单个：<code>docker rmi -f 镜像ID</code></li><li>删除多个：<code>docker rmi-f 镜像名1:TAG 镜像名2:TAG</code></li><li><span style="color:red">删除全部</span>：<code>docker rmi-f $(docker images -qa)</code></li></ul><p><strong>面试题</strong>：仓库名、标签都是<none>的镜像，俗称虚悬镜像dangling image</p><h4 id="3-容器命令">3. 容器命令</h4><p>新建启动容器：<code>dokcer run [OPTIONS] IMAGE [COMMAND] [ARG...]</code></p><p>OPTIONS说明（常用）：有些是一个减号，有些是两个减号</p><p>–name=“容器新名字”    为容器指定一个名称；</p><p>-d: 后台运行容器并返回容器ID，也即启动守护式容器(后台运行)；</p><p style="color:red">-i：以交互模式运行容器，通常与 -t 同时使用；</p><p style="color:red">-t：为容器重新分配一个伪输入终端，通常与 -i 同时使用；</p><p>也即启动交互式容器(前台有伪终端，等待交互)；</p><p>-P: 随机端口映射，大写P</p><p style="color:red">-p: 指定端口映射，小写p</p><p><img src="https://cdn.gumengyo.top//202304112320335.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-comment">#使用镜像centos:latest以交互模式启动一个容器,在容器内执行/bin/bash命令。</span><br><br>docker <span class="hljs-built_in">run</span> -<span class="hljs-keyword">it</span> centos /bin/bash <br></code></pre></td></tr></table></figure><p>参数说明：</p><ul><li><p>-i: 交互式操作。</p></li><li><p>-t: 终端。</p></li><li><p>centos : centos 镜像。</p></li><li><p>/bin/bash：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 /bin/bash。</p></li><li><p>要退出终端，直接输入 exit:</p></li></ul><p>列出当前所有正在运行的容器：<code>docker ps [OPTIONS]</code></p><p>OPTIONS说明（常用）：</p><ul><li><p>-a :列出当前所有正在运行的容器+历史上运行过的</p></li><li><p>-l :显示最近创建的容器。</p></li><li><p>-n：显示最近n个创建的容器。</p></li><li><p>-q :静默模式，只显示容器编号。</p></li></ul><p><strong>退出容器</strong></p><ul><li><code>exit</code>：run进去容器，exit退出，容器停止</li><li><code>ctrl+p+q</code>：run进去容器，ctrl+p+q退出，容器不停止</li></ul><p>启动已经停止运行的容器：docker start 容器 ID 或者容器名<br>重启容器：docker restart 容器 ID 或者容器名<br>停止容器：docker stop 容器 ID 或者容器名<br>强制停止容器：docker kil 训容器ID或容器名<br>删除已停止容器：docker rm容器 ID</p><hr><p><strong>重要</strong></p><p>查看容器日志：<code>docker logs 容器ID</code></p><p>查看容器内运行的进程：<code>docker top 容器ID</code></p><p>查看容器内部细节：<code>docker inspect 容器ID</code></p><p>从容器内拷贝文件到主机上：<code>docker cp容器D:容器内路径目的主机路径</code></p><p>导出容器：<code>docker export 容器ID &gt; 文件名.tar</code></p><p>导入容器：<code>docker import - 镜像用户/镜像名:镜像版本号</code></p><p>提交容器副本使之成为一个新的镜像：</p><p><code>docker commit -m =&quot;提交的描述信息&quot; -a=&quot;作者&quot; 容器ID 要创建的目标镜像名:[标签名]</code></p><h3 id="三、docker镜像">三、docker镜像</h3><h4 id="1-镜像">1. 镜像</h4><p>镜像是一种轻量级、可执行的独立软件包，它包含运行某个软件所需的所有内容，我们把应用程序和配置依赖打包好形成一个可交付的运行环境(包括代码、运行时需要的库、环境变量和配置文件等)，这个打包好的运行环境就是image镜像文件。</p><p>只有通过这个镜像文件才能生成Docker容器实例(类似Java中new出来一个对象)。</p><h4 id="2-联合文件系统">2. 联合文件系统</h4><p>UnionFS（联合文件系统）：Union文件系统（UnionFS）是一种分层、轻量级并且高性能的文件系统，它支持<strong>对文件系统的修改作为一次提交来一层层的叠加</strong>，同时可以将不同目录挂载到同一个虚拟文件系统下(unite several directories into a single virtual filesystem)。Union 文件系统是 Docker 镜像的基础。镜像可以通过分层来进行继承，基于基础镜像（没有父镜像），可以制作各种具体的应用镜像。</p><p>特性：一次同时加载多个文件系统，但从外面看起来，只能看到一个文件系统，联合加载会把各层文件系统叠加起来，这样最终的文件系统会包含所有底层的文件和目录</p><p>bootfs(boot file system)主要包含bootloader和kernel, bootloader主要是引导加载kernel, Linux刚启动时会加载bootfs文件系统，在Docker镜像的最底层是引导文件系统bootfs。这一层与我们典型的Linux/Unix系统是一样的，包含boot加载器和内核。当boot加载完成之后整个内核就都在内存中了，此时内存的使用权已由bootfs转交给内核，此时系统也会卸载bootfs。</p><p>rootfs (root file system) ，在bootfs之上。包含的就是典型 Linux 系统中的 /dev, /proc, /bin, /etc 等标准目录和文件。rootfs就是各种不同的操作系统发行版，比如Ubuntu，Centos等等。</p><img src="https://cdn.gumengyo.top//202304132155002.png" srcset="/img/loading.gif" lazyload style="zoom: 80%;" /><p style="color:red">Docker镜像层都是只读的，容器层是可写的</p>当容器启动时，一个新的可写层被加载到镜像的顶部。这一层通常被称作“容器层”，“容器层”之下的都叫“镜像层”。<p>所有对容器的改动 - 无论添加、删除、还是修改文件都只会发生在容器层中。只有<strong>容器层</strong>是<strong>可写</strong>的，容器层下面的所有<strong>镜像层</strong>都是<strong>只读</strong>的。</p><img src="https://cdn.gumengyo.top//202304132202774.png" srcset="/img/loading.gif" lazyload style="zoom:80%;" /><h4 id="3-总结">3. 总结</h4><p>Docker中的镜像分层，<strong>支持通过扩展现有镜像，创建新的镜像</strong>。类似Java继承于一个Base基础类，自己再按需扩展。</p><p>新镜像是从 base 镜像一层一层叠加生成的。每安装一个软件，就在现有镜像的基础上增加一层</p><p><img src="https://cdn.gumengyo.top//202304132234370.png" srcset="/img/loading.gif" lazyload alt=""></p><h3 id="四、镜像发布到阿里云">四、镜像发布到阿里云</h3><h4 id="1-流程">1. 流程</h4><p><img src="https://cdn.gumengyo.top//202304132236033.png" srcset="/img/loading.gif" lazyload alt=""></p><h4 id="2-创建仓库镜像">2. 创建仓库镜像</h4><p>阿里云开发者平台：<a href="https://promotion.aliyun.com/ntms/act/kubernetes.html">https://promotion.aliyun.com/ntms/act/kubernetes.html</a></p><h5 id="2-1-进入容器镜像服务">2.1 进入容器镜像服务</h5><img src="https://cdn.gumengyo.top//202304132305864.png" srcset="/img/loading.gif" lazyload style="zoom:80%;" /><h5 id="2-2-选择个人实例">2.2 选择个人实例</h5><img src="https://cdn.gumengyo.top//202304132305901.png" srcset="/img/loading.gif" lazyload style="zoom:80%;" /><h5 id="2-3-创建命名空间">2.3 创建命名空间</h5> <img src="https://cdn.gumengyo.top//202304132307008.png" srcset="/img/loading.gif" lazyload style="zoom:80%;" /><p><img src="https://cdn.gumengyo.top//202304132308044.png" srcset="/img/loading.gif" lazyload alt=""></p><h5 id="2-4-创建镜像仓库">2.4 创建镜像仓库</h5><img src="https://cdn.gumengyo.top//202304132312802.png" srcset="/img/loading.gif" lazyload style="zoom: 67%;" /><img src="https://cdn.gumengyo.top//image-20230413231301774.png" srcset="/img/loading.gif" lazyload alt="image-20230413231301774" style="zoom: 67%;" /><h4 id="3-操作">3. 操作</h4><h5 id="3-1-登录阿里云Docker-Registry">3.1 登录阿里云Docker Registry</h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">docker login <span class="hljs-attr">--username</span>=xxxx registry<span class="hljs-selector-class">.cn-heyuan</span><span class="hljs-selector-class">.aliyuncs</span>.com<br></code></pre></td></tr></table></figure><p>用于登录的用户名为阿里云账号全名，密码为开通服务时设置的密码。</p><p>您可以在访问凭证页面修改凭证密码。</p><p><img src="https://cdn.gumengyo.top//202304132346160.png" srcset="/img/loading.gif" lazyload alt=""></p><h5 id="3-2-将镜像推送到Registry">3.2 将镜像推送到Registry</h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">docker tag <span class="hljs-selector-attr">[ImageId]</span> registry<span class="hljs-selector-class">.cn-heyuan</span><span class="hljs-selector-class">.aliyuncs</span>.com/gumengspace/myubuntu:<span class="hljs-selector-attr">[镜像版本号]</span><br>docker push registry<span class="hljs-selector-class">.cn-heyuan</span><span class="hljs-selector-class">.aliyuncs</span>.com/gumengspace/myubuntu:<span class="hljs-selector-attr">[镜像版本号]</span><br></code></pre></td></tr></table></figure><p>请根据实际镜像信息替换示例中的[ImageId]和[镜像版本号]参数。</p><p><img src="https://cdn.gumengyo.top//202304132346040.png" srcset="/img/loading.gif" lazyload alt=""></p><h5 id="3-3-选择合适的镜像仓库地址">3.3 选择合适的镜像仓库地址</h5><p>从ECS推送镜像时，可以选择使用镜像仓库内网地址。推送速度将得到提升并且将不会损耗您的公网流量。</p><p>如果您使用的机器位于VPC网络，请使用 <a href="http://registry-vpc.cn-heyuan.aliyuncs.com">registry-vpc.cn-heyuan.aliyuncs.com</a> 作为Registry的域名登录。</p><h5 id="3-4-从Registry中拉取镜像">3.4 从Registry中拉取镜像</h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">docker pull registry<span class="hljs-selector-class">.cn-heyuan</span><span class="hljs-selector-class">.aliyuncs</span>.com/gumengspace/myubuntu:<span class="hljs-selector-attr">[镜像版本号]</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.gumengyo.top//202304132353891.png" srcset="/img/loading.gif" lazyload alt=""></p><h3 id="五、镜像发布到私有库">五、镜像发布到私有库</h3><h4 id="1-下载-Docker-Registry">1. 下载 Docker Registry</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker pull registry</span> <br></code></pre></td></tr></table></figure><h4 id="2-运行-Docker-Registry">2. 运行 Docker Registry</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir">docker run -d -p <span class="hljs-number">5000</span><span class="hljs-symbol">:</span><span class="hljs-number">5000</span> -v /zzyyuse/myregistry/<span class="hljs-symbol">:/tmp/registry</span> --privileged=<span class="hljs-literal">true</span> registry<br></code></pre></td></tr></table></figure><p>默认情况，仓库被创建在容器的/var/lib/registry目录下，建议自行用容器卷映射，方便于宿主机联调</p><h4 id="3-将镜像修改成符合私服规范的Tag">3. 将镜像修改成符合私服规范的Tag</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">docker tag 镜像<span class="hljs-symbol">:Tag</span> <span class="hljs-title class_">Host</span><span class="hljs-symbol">:Port/Repository</span><span class="hljs-symbol">:Tag</span><br></code></pre></td></tr></table></figure><h4 id="4-修改配置文件使其支持http">4. 修改配置文件使其支持http</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>docker/daemon.json<br></code></pre></td></tr></table></figure><p>添加以下内容，前面有内容记得在前面加逗号：</p><p class="note note-primary">  "insecure-registries": ["192.168.111.162:5000"]</p><h4 id="5-将镜像推送到私服仓库">5. 将镜像推送到私服仓库</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">docker push <span class="hljs-title class_">Host</span><span class="hljs-symbol">:Port/Repository</span><span class="hljs-symbol">:Tag</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.gumengyo.top//image-20230414220410835.png" srcset="/img/loading.gif" lazyload alt=""></p><h4 id="6-curl-验证私服库上有什么镜像">6. curl 验证私服库上有什么镜像</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -XGET http:<span class="hljs-regexp">//</span>Host:Port<span class="hljs-regexp">/v2/</span>_catalog<br></code></pre></td></tr></table></figure><p><img src="https://cdn.gumengyo.top//image-20230414221048455.png" srcset="/img/loading.gif" lazyload alt=""></p><h4 id="7-拉取私服库的镜像到本地">7. 拉取私服库的镜像到本地</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">docker pull <span class="hljs-title class_">Host</span><span class="hljs-symbol">:Port/Repository</span><span class="hljs-symbol">:Tag</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.gumengyo.top//image-20230414221240641.png" srcset="/img/loading.gif" lazyload alt=""></p><h3 id="六、Docker容器数据卷">六、Docker容器数据卷</h3><p>Docker挂载主机目录访问如果出现cannot open directory .: Permission denied</p><p>解决办法：在挂载目录后多加一个–privileged=true 参数即可</p><h4 id="1-是什么">1. 是什么</h4><p>卷就是目录或文件，存在于一个或多个容器中，由docker挂载到容器，但不属于联合文件系统，因此能够绕过Union File System提供一些用于持续存储或共享数据的特性：</p><p>卷的设计目的就是数据的持久化，完全独立于容器的生存周期，因此Docker不会在容器删除时删除其挂载的数据卷</p><h4 id="2-运行一个带有容器卷存储功能的容器实例">2. 运行一个带有容器卷存储功能的容器实例</h4><p>默认是rw，读写都可以</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-built_in">run</span> -it <span class="hljs-attribute">--privileged</span>=<span class="hljs-literal">true</span> -v/宿主机绝对路径目录:/容器内目录 镜像名<br></code></pre></td></tr></table></figure><p>只读:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-built_in">run</span> -it <span class="hljs-attribute">--privileged</span>=<span class="hljs-literal">true</span> -v/宿主机绝对路径目录:/容器内目录:ro 镜像名<br></code></pre></td></tr></table></figure><h4 id="3-能干嘛">3. 能干嘛</h4><p><code>*</code>将运用与运行的环境打包镜像，run 后形成容器实例运行 ，但是我们对数据的要求希望是持久化的</p><p>Docker容器产生的数据，如果不备份，那么当容器实例删除后，容器内的数据自然也就没有了。</p><p>为了能保存数据在 docker 中我们使用卷。</p><p>特点：</p><ol><li><p>数据卷可在容器之间共享或重用数据</p></li><li><p>卷中的更改可以直接实时生效，爽</p></li><li><p>数据卷中的更改不会包含在镜像的更新中</p></li><li><p>数据卷的生命周期一直持续到没有容器使用它为止</p></li></ol><h4 id="4-卷的继承和共享">4. 卷的继承和共享</h4><p>容器1 完成和宿主机的映射</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">docker <span class="hljs-keyword">run</span><span class="language-bash"> -it  --privileged=<span class="hljs-literal">true</span> -v /mydocker/u:/tmp --name u1 ubuntu</span><br></code></pre></td></tr></table></figure><p>容器2 继承容器1的卷规则</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-built_in">run</span> -it <span class="hljs-attribute">--privileged</span>=<span class="hljs-literal">true</span> --volumes-from u1 --name u2 ubuntu<br></code></pre></td></tr></table></figure><h3 id="七、Docker-常规安装">七、Docker 常规安装</h3><h4 id="1-总体步骤">1. 总体步骤</h4><p>搜索镜像、拉取镜像、查看镜像、启动镜像、停止容器、移除容器</p><h4 id="2-安装tomcat">2. 安装tomcat</h4><p><strong>最新版</strong></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">docker pull tomcat <span class="hljs-comment">// 拉取tomcat镜像</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.gumengyo.top//image-20230415214301212.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">docker images <span class="hljs-comment">// 查看是否拉取到tomcat</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.gumengyo.top//image-20230415214552684.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> run -it -p <span class="hljs-number">8080</span>:<span class="hljs-number">8080</span> tomcat<br></code></pre></td></tr></table></figure><p>查看是否成功启动tomcat</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker ps</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.gumengyo.top//image-20230415215040110.png" srcset="/img/loading.gif" lazyload alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it 1ec9149b1335 /bin/bash <br></code></pre></td></tr></table></figure><p>查看webapps文件夹是否为空，删除空目录，修改 webapp.dist 文件夹名</p><p><img src="https://cdn.gumengyo.top//image-20230415215622241.png" srcset="/img/loading.gif" lazyload alt=""></p><p><strong>免修改版</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> pull billygoo/tomcat8-jdk8<br><br><span class="hljs-attribute">docker</span> run -d -p <span class="hljs-number">8080</span>:<span class="hljs-number">8080</span> --name mytomcat8 billygoo/tomcat8-jdk8<br></code></pre></td></tr></table></figure><h4 id="3-安装-mysql">3. 安装 mysql</h4><p>拉取 mysql 5.7镜像</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> pull mysql:<span class="hljs-number">5</span>.<span class="hljs-number">7</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.gumengyo.top//image-20230415221142041.png" srcset="/img/loading.gif" lazyload alt=""></p><p>新建 mysql 容器实例</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs groovy">docker run -d -p <span class="hljs-number">3306</span>:<span class="hljs-number">3306</span> --privileged=<span class="hljs-literal">true</span> -v <span class="hljs-regexp">/gmuse/</span>mysql<span class="hljs-regexp">/log:/</span><span class="hljs-keyword">var</span><span class="hljs-regexp">/log/</span>mysql -v <span class="hljs-regexp">/gmuse/</span>mysql<span class="hljs-regexp">/data:/</span><span class="hljs-keyword">var</span><span class="hljs-regexp">/lib/</span>mysql -v <span class="hljs-regexp">/gmuse/</span>mysql<span class="hljs-regexp">/conf:/</span>etc<span class="hljs-regexp">/mysql/</span>conf.d -e MYSQL_ROOT_PASSWORD=<span class="hljs-number">123456</span>  --name mysql <span class="hljs-attr">mysql:</span><span class="hljs-number">5.7</span><br></code></pre></td></tr></table></figure><p class="note note-warning">按照以下配置，修改默认字符集编码，否则会中文乱码，并且把 mysql 容器实例数据持久化。</p><p>新建my.cnf</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">cd</span> /gmuse/mysql/<span class="hljs-keyword">conf</span>/<br><br><span class="hljs-keyword">vim</span> my.<span class="hljs-keyword">cnf</span><br></code></pre></td></tr></table></figure><p>粘贴以下内容到<code>my.cnf</code></p><blockquote><p>[client]</p><p>default_character_set=utf8</p><p>[mysqld]</p><p>collation_server = utf8_general_ci</p><p>character_set_server = utf8</p></blockquote><p>重启 mysql 容器实例</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker restart mysql</span><br></code></pre></td></tr></table></figure><p>进入 mysql</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it mysql /bin/bash<br><br>mysql -uroot -p<br></code></pre></td></tr></table></figure><p><img src="https://cdn.gumengyo.top//image-20230415230356945.png" srcset="/img/loading.gif" lazyload alt=""></p><p>查看字符集，是否设置成utf8</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams">SHOW <span class="hljs-keyword">VARIABLES</span> LIKE <span class="hljs-comment">&#x27;character%&#x27;</span>;<br></code></pre></td></tr></table></figure><p><img src="https://cdn.gumengyo.top//image-20230415230443168.png" srcset="/img/loading.gif" lazyload alt=""></p><h4 id="4-安装-redis">4. 安装 redis</h4><p>拉取 redis 6.0.8 镜像</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> pull redis:<span class="hljs-number">6</span>.<span class="hljs-number">0</span>.<span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.gumengyo.top//image-20230415230905589.png" srcset="/img/loading.gif" lazyload alt=""></p><p>将下面redis.conf 下载之后放到 /app/redis/</p><p><a href="https://gumeng.jishuqin.cn/s/ezi5">https://gumeng.jishuqin.cn/s/ezi5</a></p><p><img src="https://cdn.gumengyo.top//image-20230416001143964.png" srcset="/img/loading.gif" lazyload alt="image-20230416001143964"></p><p>运行 redis 容器实例</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">docker <span class="hljs-keyword">run</span><span class="language-bash">  -p 6379:6379 --name myr3 --privileged=<span class="hljs-literal">true</span> -v /app/redis/redis.conf:/etc/redis/redis.conf -v /app/redis/data:/data -d redis:6.0.8 redis-server /etc/redis/redis.conf</span><br></code></pre></td></tr></table></figure><p>连接测试</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">docker exec -it myr3 /bin/bash<br><br>redis-<span class="hljs-keyword">cli</span><br><br><span class="hljs-built_in">ping</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Docker-基础篇&quot;&gt;Docker 基础篇&lt;/h2&gt;
&lt;p&gt;尚硅谷Docker教程：&lt;a href=&quot;https://www.bilibili.com/video/BV1gr4y1U7CY/&quot;&gt;https://www.bilibili.com/video/BV1</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.jishuqin.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Docker" scheme="https://blog.jishuqin.cn/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Fliud LeanCloud统计访问数据</title>
    <link href="https://blog.jishuqin.cn/posts/abcd1234/"/>
    <id>https://blog.jishuqin.cn/posts/abcd1234/</id>
    <published>2023-04-09T13:59:11.000Z</published>
    <updated>2025-08-27T03:20:31.435Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Fluid主题配置-LeanCloud-统计访问数据">Fluid主题配置 LeanCloud 统计访问数据</h2><h3 id="1-创建LeanCloud实例">1.创建LeanCloud实例</h3><p><span class="label label-primary">LeanCloud官网</span>：<a href="https://console.leancloud.cn/">https://console.leancloud.cn/</a></p><ol><li><p>进入官网，注册一个账号</p></li><li><p>登录LeanCloud 系统点击左上角创建应用</p></li></ol><img src="https://cdn.gumengyo.top//202304091408027.png" srcset="/img/loading.gif" lazyload style="zoom:50%;" /><ol start="3"><li>选择开发板创建应用即可</li></ol><p><img src="https://cdn.gumengyo.top//202304091409165.png" srcset="/img/loading.gif" lazyload alt=""></p><ol start="3"><li><p>创建应用成功后，打开应用设置-&gt;应用凭证</p><p><img src="https://cdn.gumengyo.top//202304091429140.png" srcset="/img/loading.gif" lazyload alt=""></p><p>保存 <code>AppID</code>、<code>AppKey</code>、<code>REST API</code></p></li></ol><h3 id="2-配置-config-fluid-yml文件">2.配置_config.fluid.yml文件</h3><ol><li>在<code>_config.fluid.yml</code>文件查找关键字：<code>web_analytics</code></li></ol><p class="note note-primary">开启网页访问统计功能</p><p><img src="https://cdn.gumengyo.top//202304091420333.png" srcset="/img/loading.gif" lazyload alt=""></p><ol start="2"><li>在<code>_config.fluid.yml</code>文件查找关键字：<code>leancloud</code></li></ol><p class="note note-primary">配置 leancloud 数据，将上面的 AppID、AppKey、REST API 填入对应位置</p><p><img src="https://cdn.gumengyo.top//202304091433105.png" srcset="/img/loading.gif" lazyload alt=""></p><ol start="3"><li>在<code>_config.fluid.yml</code>文件查找关键字：<code>views</code></li></ol><p class="note note-primary">开启浏览量计数</p><p><img src="https://cdn.gumengyo.top//202304091434384.png" srcset="/img/loading.gif" lazyload alt=""></p><ol start="4"><li>在<code>_config.fluid.yml</code>文件查找关键字：<code> leancloud</code></li></ol><p class="note note-primary">设置 PV、UV 统计数</p><p><img src="https://cdn.gumengyo.top//202304091436278.png" srcset="/img/loading.gif" lazyload alt=""></p><ol start="5"><li>重新部署 Hexo</li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment"># 清除缓存</span><br><span class="hljs-attribute">hexo</span> clean<br><br><span class="hljs-comment"># 生成静态资源</span><br>hexo g<br><br><span class="hljs-comment"># 部署</span><br>hexo d<br></code></pre></td></tr></table></figure><p><code>hexo g</code> 是 <code>hexo generate</code> 的简写；<code>hexo d</code> 是 <code>hexo deploy</code> 的简写。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Fluid主题配置-LeanCloud-统计访问数据&quot;&gt;Fluid主题配置 LeanCloud 统计访问数据&lt;/h2&gt;
&lt;h3 id=&quot;1-创建LeanCloud实例&quot;&gt;1.创建LeanCloud实例&lt;/h3&gt;
&lt;p&gt;&lt;span class=&quot;label labe</summary>
      
    
    
    
    <category term="博客配置" scheme="https://blog.jishuqin.cn/categories/%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="Fluid" scheme="https://blog.jishuqin.cn/tags/Fluid/"/>
    
  </entry>
  
  <entry>
    <title>Redis数据结构及常见命令</title>
    <link href="https://blog.jishuqin.cn/posts/fa9b8c7d/"/>
    <id>https://blog.jishuqin.cn/posts/fa9b8c7d/</id>
    <published>2023-04-07T08:55:17.000Z</published>
    <updated>2025-08-27T03:20:31.436Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Redis数据结构及常见命令">Redis数据结构及常见命令</h2><h3 id="1-数据结构">1.数据结构</h3><p>Redis是一个key-value的数据库，key一般是String类型，不过value的类型多种多样：</p><p><img src="https://cdn.gumengyo.top//202304062339082.png" srcset="/img/loading.gif" lazyload alt=""></p><p>官网各种命令查询 <a href="https://redis.io/commands">https://redis.io/commands</a> ，也可以使用<code>help</code>命令来帮助查看命令</p><h3 id="2-通用命令">2.通用命令</h3><table><thead><tr><th>命令名</th><th>作用</th></tr></thead><tbody><tr><td><code>keys*</code></td><td>查看当前库所有的key</td></tr><tr><td><code>exists key</code></td><td>判断某个key是否存在</td></tr><tr><td><code>type key</code></td><td>查看你的key是什么类型</td></tr><tr><td><code>del key</code></td><td>删除指定的key数据</td></tr><tr><td><code>unlink key</code></td><td>非阻塞删除，仅仅将keyS从keyspace元数据中删除，<br>真正的删除会在后续异步中操作。</td></tr><tr><td><code>ttl key</code></td><td>查看还有多少秒过期，-1表示永不过期，-2表示已过期</td></tr><tr><td><code>expire key 秒钟</code></td><td>为给定的key设置过期时间</td></tr><tr><td><code>move key dbindex [0-15]</code></td><td>将当前数据库的key移动到给定的数据库db当中</td></tr><tr><td><code>select dbindex</code></td><td>切换数据库[0-15]，默认为0</td></tr><tr><td><code>dbsize</code></td><td>查看当前数据库key的数量</td></tr><tr><td><span class="label label-danger">flushdb</span></td><td>清空当前库</td></tr><tr><td><span class="label label-danger">flushall</span></td><td>通杀全部库</td></tr></tbody></table><h3 id="3-String命令">3.String命令</h3><p class="note note-primary">String类型，也就是字符串类型，是Redis中最简单的存储类型。</p><p>String的常见命令有：</p><ul><li><code>SET</code>：添加或者修改已经存在的一个String类型的键值对</li><li><code>GET</code>：根据key获取String类型的value</li><li><code>MSET</code>：批量添加多个String类型的键值对</li><li><code>MGET</code>：根据多个key获取多个String类型的value</li><li><code>INCR</code>：让一个整型的key自增1</li><li><code>INCRBY</code>:让一个整型的key自增并指定步长，例如：incrby num 2 让num值自增2</li><li><code>INCRBYFLOAT</code>：让一个浮点类型的数字自增并指定步长</li><li><code>SETNX</code>：添加一个String类型的键值对，前提是这个key不存在，否则不执行</li><li><code>SETEX</code>：添加一个String类型的键值对，并且指定有效期</li></ul><p><strong>贴心小提示</strong>：以上命令除了INCRBYFLOAT 都是常用命令</p><h3 id="4-Hash命令">4.Hash命令</h3><p class="note note-primary">Hash类型，也叫散列，其value是一个无序字典，类似于Java中的HashMap结构。</p><p>String结构是将对象序列化为JSON字符串后存储，当需要修改对象某个字段时很不方便：</p><p><img src="https://cdn.gumengyo.top//1652941995945.png" srcset="/img/loading.gif" lazyload alt=""></p><p>使用Hash结构可以将对象中的每个字段独立存储，可以针对单个字段做CRUD：</p><p><img src="https://cdn.gumengyo.top//1652942027719.png" srcset="/img/loading.gif" lazyload alt=""></p><p><strong>Hash类型的常见命令</strong></p><ul><li><p><code>HSET key field value</code>：添加或者修改hash类型key的field的值</p></li><li><p><code>HGET key field</code>：获取一个hash类型key的field的值</p></li><li><p><code>HMSET</code>：批量添加多个hash类型key的field的值</p></li><li><p><code>HMGET</code>：批量获取多个hash类型key的field的值</p></li><li><p><code>HGETALL</code>：获取一个hash类型的key中的所有的field和value</p></li><li><p><code>HKEYS</code>：获取一个hash类型的key中的所有的field</p></li><li><p><code>HINCRBY</code>：让一个hash类型key的字段值自增并指定步长</p></li><li><p><code>HSETNX</code>：添加一个hash类型的key的field值，前提是这个field不存在，否则不执行</p></li></ul><p><strong>贴心小提示</strong>：哈希结构也是我们以后实际开发中常用的命令哟</p><h3 id="5-List命令">5.List命令</h3><p class="note note-primary">Redis中的List类型与Java中的LinkedList类似，可以看做是一个双向链表结构。既可以支持正向检索和也可以支持反向检索。</p><p>特征也与LinkedList类似：</p><ul><li>有序</li><li>元素可以重复</li><li>插入和删除快</li><li>查询速度一般</li></ul><p>常用来存储一个有序数据，例如：朋友圈点赞列表，评论列表等。</p><p><strong>List的常见命令有：</strong></p><ul><li><code>LPUSH key element ... </code>：向列表左侧插入一个或多个元素</li><li><code>LPOP key</code>：移除并返回列表左侧的第一个元素，没有则返回nil</li><li><code>RPUSH key element ...</code>：向列表右侧插入一个或多个元素</li><li><code>RPOP key</code>：移除并返回列表右侧的第一个元素</li><li><code>LRANGE key star end</code>：返回一段角标范围内的所有元素</li><li><code>BLPOP和BRPOP</code>：与LPOP和RPOP类似，只不过在没有元素时等待指定时间，而不是直接返回nil</li></ul><p><img src="https://cdn.gumengyo.top//1652943604992.png" srcset="/img/loading.gif" lazyload alt=""></p><h3 id="6-Set命令">6.Set命令</h3><p class="note note-primary">Redis的Set结构与Java中的HashSet类似，可以看做是一个value为null的HashMap。</p><p>因为也是一个hash表，因此具备与HashSet类似的特征：</p><ul><li>无序</li><li>元素不可重复</li><li>查找快</li><li>支持交集.并集.差集等功能</li></ul><p><strong>Set类型的常见命令</strong></p><ul><li><code>SADD key member ... </code>：向set中添加一个或多个元素</li><li><code>SREM key member ...</code> : 移除set中的指定元素</li><li><code>SCARD key</code>： 返回set中元素的个数</li><li><code>SISMEMBER key member</code>：判断一个元素是否存在于set中</li><li><code>SMEMBERS</code>：获取set中的所有元素</li><li><code>SINTER key1 key2 ...</code> ：求key1与key2的交集</li><li><code>SDIFF key1 key2 ...</code> ：求key1与key2的差集</li><li><code>SUNION key1 key2 ...</code>：求key1和key2的并集</li></ul><h3 id="7-SortedSet类型">7.SortedSet类型</h3><p class="note note-primary">Redis的SortedSet是一个可排序的set集合，与Java中的TreeSet有些类似，但底层数据结构却差别很大。SortedSet中的每一个元素都带有一个score属性，可以基于score属性对元素排序，底层的实现是一个跳表（SkipList）加 hash表。</p><p>SortedSet具备下列特性：</p><ul><li>可排序</li><li>元素不重复</li><li>查询速度快</li></ul><p>因为SortedSet的可排序特性，经常被用来实现排行榜这样的功能。</p><p>SortedSet的常见命令有：</p><ul><li><code>ZADD key score member</code>：添加一个或多个元素到sorted set ，如果已经存在则更新其score值</li><li><code>ZREM key member</code>：删除sorted set中的一个指定元素</li><li><code>ZSCORE key member</code> : 获取sorted set中的指定元素的score值</li><li><code>ZRANK key member</code>：获取sorted set 中的指定元素的排名</li><li><code>ZCARD key</code>：获取sorted set中的元素个数</li><li><code>ZCOUNT key min max</code>：统计score值在给定范围内的所有元素的个数</li><li><code>ZINCRBY key increment member</code>：让sorted set中的指定元素自增，步长为指定的increment值</li><li><code>ZRANGE key min max</code>：按照score排序后，获取指定排名范围内的元素</li><li><code>ZRANGEBYSCORE key min max</code>：按照score排序后，获取指定score范围内的元素</li><li><code>ZDIFF.ZINTER.ZUNION</code>：求差集.交集.并集</li></ul><p>注意：所有的排名默认都是升序，如果要降序则在命令的Z后面添加REV即可，例如：</p><ul><li><strong>升序</strong>获取sorted set 中的指定元素的排名：ZRANK key member</li><li><strong>降序</strong>获取sorted set 中的指定元素的排名：ZREVRANK key memeber</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Redis数据结构及常见命令&quot;&gt;Redis数据结构及常见命令&lt;/h2&gt;
&lt;h3 id=&quot;1-数据结构&quot;&gt;1.数据结构&lt;/h3&gt;
&lt;p&gt;Redis是一个key-value的数据库，key一般是String类型，不过value的类型多种多样：&lt;/p&gt;
&lt;p&gt;&lt;img </summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.jishuqin.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Redis" scheme="https://blog.jishuqin.cn/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Redis消息队列</title>
    <link href="https://blog.jishuqin.cn/posts/5e6f7a8b/"/>
    <id>https://blog.jishuqin.cn/posts/5e6f7a8b/</id>
    <published>2023-04-05T12:49:00.000Z</published>
    <updated>2025-08-27T03:20:31.436Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Redis消息队列">Redis消息队列</h2><h3 id="1-认识消息队列">1.认识消息队列</h3><p><strong>消息队列</strong>（<strong>M</strong>essage <strong>Q</strong>ueue），字面意思就是存放消息的队列。</p><p>最简单的消息队列模型包括3个角色：</p><ul><li><p>消息队列：存储和管理消息，也被称为消息代理（Message Broker）</p></li><li><p>生产者：发送消息到消息队列</p></li><li><p>消费者：从消息队列获取消息并处理消息</p></li></ul><p><img src="https://cdn.gumengyo.top//202304051317741.png" srcset="/img/loading.gif" lazyload alt=""></p><p>Redis提供了三种不同的方式来实现消息队列：</p><ul><li><p>list结构：基于List结构模拟消息队列</p></li><li><p>PubSub：基本的点对点消息模型</p></li><li><p>Stream：比较完善的消息队列模型</p></li></ul><h3 id="2-基于List实现消息队列">2.基于List实现消息队列</h3><p>Redis的list数据结构是一个双向链表，很容易模拟出队列效果。</p><p>队列是入口和出口不在一边，因此我们可以利用：LPUSH 结合 RPOP、或者 RPUSH 结合 LPOP来实现。</p><p>不过要注意的是，当队列中没有消息时RPOP或LPOP操作会返回null，并不像JVM的阻塞队列那样会阻塞并等待消息。因此这里应该使用<strong>BRPOP</strong>或者<strong>BLPOP</strong>来实现阻塞效果。</p><p>命令：</p><p><code>LPUSH key value1 [value2]</code>将一个或多个值插入到列表头部。</p><p><code> RPOP key</code>移出并获取列表的最后一个元素，如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。</p><p><code>BRPOP key1 [key2] timeout</code>：移除并获取列表最后一个元素。</p><p><code>RPUSH key value1 [value2]</code>：在列表中添加一个或多个值。</p><p><code> BLPOP key1 [key2] timeout</code>：移出并获取列表的第一个元素，如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。</p><p><img src="https://cdn.gumengyo.top//1653575176451.png" srcset="/img/loading.gif" lazyload alt=""></p><p>优点：</p><ul><li><p>利用Redis存储，不受限于JVM内存上限</p></li><li><p>基于Redis的持久化机制，数据安全性有保证</p></li><li><p>可以满足消息有序性</p></li></ul><p>缺点：</p><ul><li><p>无法避免消息丢失</p></li><li><p>只支持单消费者</p></li></ul><h3 id="3-基于PubSub的消息队列">3.基于PubSub的消息队列</h3><p><strong>PubSub（发布订阅）</strong> 是Redis2.0版本引入的消息传递模型。顾名思义，消费者可以订阅一个或多个channel，生产者向对应channel发送消息后，所有订阅者都能收到相关消息。</p><p>命令：</p><p><code>SUBSCRIBE channel [channel]</code>：订阅一个或多个频道<br><code>PUBLISH channel msg</code> ：向一个频道发送消息<br><code>PSUBSCRIBE pattern[pattern]</code>：订阅与pattern格式匹配的所有频道</p><p><img src="https://cdn.gumengyo.top/1653575506373.png" srcset="/img/loading.gif" lazyload alt=""></p><p>优点：</p><ul><li>采用发布订阅模型，支持多生产、多消费</li></ul><p>缺点：</p><ul><li>不支持数据持久化</li><li>无法避免消息丢失</li><li>消息堆积有上限，超出时数据丢失</li></ul><h3 id="4-基于Stream的消息队列">4.基于Stream的消息队列</h3><p>Stream 是 Redis 5.0 引入的一种新数据类型，可以实现一个功能非常完善的消息队列。</p><p>它支持消息的持久化、支持自动生成全局唯一ID、支持ack确认消息的模式、支持消费组模式等，让消息队列更加的稳定和可靠。</p><h5 id="Stream结构">Stream结构</h5><p><img src="https://cdn.gumengyo.top//202304051338733.png" srcset="/img/loading.gif" lazyload alt=""></p><table><thead><tr><th>名称</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td>Message Content</td><td style="text-align:left">消息内容</td></tr><tr><td>Consumer group</td><td style="text-align:left">消费组，通过XGROUP CREATE 命令创建，同一个消费组可以有多个消费者</td></tr><tr><td>Consumer</td><td style="text-align:left">游标，每个消费组会有个游标 last_delivered_id，任意一个消费者读取了消息都会使游标 last_delivered_id 往前移动。</td></tr><tr><td>Consumer</td><td style="text-align:left">消费者，消费组中的消费者</td></tr><tr><td>Pending_ids</td><td style="text-align:left">消费者，消费组中的消费者</td></tr></tbody></table><h5 id="队列相关指令">队列相关指令</h5><table><thead><tr><th>指令名称</th><th>指令作用</th></tr></thead><tbody><tr><td>XADD</td><td>添加消息到队列末尾</td></tr><tr><td>XTRIM</td><td>限制Stream的长度,如果已经超长会进行截取</td></tr><tr><td>XDEL</td><td>删除消息</td></tr><tr><td>XLEN</td><td>获取Stream中的消息长度</td></tr><tr><td>XRANGE</td><td>获取消息列表(可指定范围),忽略删除的信息</td></tr><tr><td>XREVRANGE</td><td>和XRANGE相比区别在于反向获取,ID从大到小</td></tr><tr><td>XREAD</td><td>获取消息(阻塞/非阻塞),返回大于指定ID的消息</td></tr></tbody></table><p>STREAM类型消息队列的XREAD命令特点：</p><ul><li>消息可回溯</li><li>一个消息可以被多个消费者读取</li><li>可以阻塞读取</li><li>有消息漏读的风险</li></ul><h5 id="消费组相关指令">消费组相关指令</h5><table><thead><tr><th>指令名称</th><th>指令作用</th></tr></thead><tbody><tr><td>XGROUP CREATE</td><td>创建消费者组</td></tr><tr><td>XREADGROUP GROUP</td><td>读取消费者组中的消息</td></tr><tr><td>XACK</td><td>ack消息，消息被标记为&quot;已处理</td></tr><tr><td>XGROUP SETID</td><td>设置消费者组最后递送消息的D</td></tr><tr><td>XGROUP DELCONSUMER</td><td>删除消费者组</td></tr><tr><td>XPENDING</td><td>打印待处理消息的详细信息</td></tr><tr><td>XCLAIM</td><td>转移消息的归属权（长期未被处理/无法处理的消息，转交给其他消费者组进行处理）</td></tr><tr><td>XINFO</td><td>打印Stream\Consumer八Group的详细信息</td></tr><tr><td>XINFO GROUPS</td><td>打印消费者组的详细信息</td></tr><tr><td>XINFO STREAM</td><td>打印Streaml的详细信息</td></tr></tbody></table><p>STREAM类型消息队列的XREADGROUP命令特点：</p><ul><li>消息可回溯</li><li>可以多消费者争抢消息，加快消费速度</li><li>可以阻塞读取</li><li>没有消息漏读的风险</li><li>有消息确认机制，保证消息至少被消费一次</li></ul><h5 id="四个特殊符号">四个特殊符号</h5><ol><li><p><code>- +</code> ：最小和最大可能出现的id。</p></li><li><p><code>$</code> ：$表示只消费新的消息，当前流中最大的d,可用于将要到来的信息。</p></li><li><p><code>&gt;</code> ：用于XREADGROUP命令，表示迄今还没有发送给组中使用者的信息，会更新消费者组的最后ID。</p></li><li><p><code>*</code> ：用于XADD命令中，让系统自动生成id。</p></li></ol><hr><h4 id="对比">对比:</h4><p><img src="https://cdn.gumengyo.top//202304051356489.png" srcset="/img/loading.gif" lazyload alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Redis消息队列&quot;&gt;Redis消息队列&lt;/h2&gt;
&lt;h3 id=&quot;1-认识消息队列&quot;&gt;1.认识消息队列&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;消息队列&lt;/strong&gt;（&lt;strong&gt;M&lt;/strong&gt;essage &lt;strong&gt;Q&lt;/strong&gt;ueue），</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.jishuqin.cn/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Redis" scheme="https://blog.jishuqin.cn/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Fluid主题添加音乐功能</title>
    <link href="https://blog.jishuqin.cn/posts/eeaa9988/"/>
    <id>https://blog.jishuqin.cn/posts/eeaa9988/</id>
    <published>2023-03-05T14:07:00.000Z</published>
    <updated>2025-08-27T03:20:31.435Z</updated>
    
    <content type="html"><![CDATA[<p class="note note-success">    本文大部分配置参考林慕凡的博文，感谢作者的详细讲解。<br>    作者：林慕凡<br>    原文地址：<a href="https://blog.csdn.net/weixin_43471926/article/details/109798928?spm=1001.2014.3001.5502" target="_blank">https://blog.csdn.net/weixin_43471926/article/details/109798928?spm=1001.2014.3001.5502</a></p><p><strong>效果预览：</strong> <a href="https://blog.jishuqin.cn/playlist/">https://blog.jishuqin.cn/playlist/</a></p><img src="https://cdn.gumengyo.top//202303051412252.png" srcset="/img/loading.gif" lazyload style="zoom:50%;" /><h2 id="一、安装插件">一、安装插件</h2><p>执行命令，为Hexo安装hexo-tag-aplayer插件。</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install <span class="hljs-comment">--save hexo-tag-aplayer</span><br></code></pre></td></tr></table></figure><h2 id="二、添加配置">二、添加配置</h2><p>安装好插件之后，在主题配置文件<span class="label label-primary">_config.fluid.yml </span>中的 custom 添加下面 js 和 css 依赖。</p><p class="note note-warning">注意：cdn.jsdelivr.net 域名有时会被墙，最好把文件部到自己的OSS，或者保存到博客的js、css目录下。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">custom_js:<br>  - <span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/npm/</span>aplayer<span class="hljs-regexp">/dist/</span>APlayer.min.js  <span class="hljs-comment">#/APlayer#/APlayer依赖</span><br>  - <span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/m</span>etowolf<span class="hljs-regexp">/MetingJS@1.2/</span>dist<span class="hljs-regexp">/Meting.min.js  #/</span>APlayer依赖<br>custom_css:<br>  - <span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/npm/</span>aplayer<span class="hljs-regexp">/dist/</span>APlayer.min.css   <span class="hljs-comment">#/APlayer依赖</span><br><br></code></pre></td></tr></table></figure><p>添加完成后在hexo根目录下的配置文件<span class="label label-primary">_config.yml </span>中添加以下配置。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># aplayer</span><br><span class="hljs-attr">aplayer:</span>  <br>  <span class="hljs-attr">meting:</span> <span class="hljs-literal">true</span>  <br>  <span class="hljs-attr">asset_inject:</span> <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h2 id="三、创建音乐页面">三、创建音乐页面</h2><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> playlist<br></code></pre></td></tr></table></figure><ol><li>打开 /根目录/source/playlist/index.md编辑页面，参考 hexo-tag-aplayer <a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md">官方文档</a>书写。</li></ol><p class="note note-info">复制歌单的链接，然后复制歌单的id，例如：https://music.163.com/#/playlist?id=8158874729&userid=499215828，这个歌单的id就是8158874729，而且是网易云的歌单，参考下面例子。</p><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="language-xml"><span class="hljs-comment">&lt;!-- 简单示例 (id, server, type)  --&gt;</span></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">meting</span> <span class="hljs-string">&quot;8158874729&quot;</span> <span class="hljs-string">&quot;netease&quot;</span> <span class="hljs-string">&quot;playlist&quot;</span> <span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-comment">&lt;!-- 进阶示例 --&gt;</span></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">meting</span> <span class="hljs-string">&quot;8158874729&quot;</span> <span class="hljs-string">&quot;netease&quot;</span> <span class="hljs-string">&quot;playlist&quot;</span> <span class="hljs-string">&quot;autoplay&quot;</span> <span class="hljs-string">&quot;mutex:false&quot;</span> <span class="hljs-string">&quot;listmaxheight:340px&quot;</span> <span class="hljs-string">&quot;preload:auto&quot;</span> <span class="hljs-string">&quot;theme:#3F51B5&quot;</span><span class="hljs-string">&quot;order:random&quot;</span><span class="hljs-template-tag">%&#125;</span><br></code></pre></td></tr></table></figure><ol start="2"><li>下面是有关<span class="label label-info">meting</span>的部分选项配置，具体可参看<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md">官方文档</a>。</li></ol><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:center">默认值</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">id</td><td style="text-align:center"><strong>必须值</strong></td><td style="text-align:center">歌曲 id / 播放列表 id / 相册 id / 搜索关键字</td></tr><tr><td style="text-align:center">server</td><td style="text-align:center"><strong>必须值</strong></td><td style="text-align:center">音乐平台: <code>netease</code>, <code>tencent</code>, <code>kugou</code>, <code>xiami</code>, <code>baidu</code></td></tr><tr><td style="text-align:center">type</td><td style="text-align:center"><strong>必须值</strong></td><td style="text-align:center"><code>song</code>,<code>playlist</code>, <code>album</code>, <code>search</code>, <code>artist</code></td></tr></tbody></table><ol start="3"><li><p>添加音乐页面到导航菜单内。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">menu</span>:<br>  - &#123; key: <span class="hljs-string">&quot;音乐&quot;</span>, link: <span class="hljs-string">&quot;/playlist/&quot;</span>, icon: <span class="hljs-string">&quot;iconfont icon-music&quot;</span> &#125;<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p class=&quot;note note-success&quot;&gt;
    本文大部分配置参考林慕凡的博文，感谢作者的详细讲解。&lt;br&gt;
    作者：林慕凡&lt;br&gt;
    原文地址：&lt;a href=&quot;https://blog.csdn.net/weixin_43471926/arti</summary>
      
    
    
    
    <category term="博客配置" scheme="https://blog.jishuqin.cn/categories/%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="Fluid" scheme="https://blog.jishuqin.cn/tags/Fluid/"/>
    
  </entry>
  
  <entry>
    <title>Fluid 页脚增加网站运行时长</title>
    <link href="https://blog.jishuqin.cn/posts/aabbccdd/"/>
    <id>https://blog.jishuqin.cn/posts/aabbccdd/</id>
    <published>2023-03-04T13:00:00.000Z</published>
    <updated>2025-08-27T03:20:31.435Z</updated>
    
    <content type="html"><![CDATA[<p class="note note-success">本文转载自 Fluid 官方博客文章，版权归原作者所有。<br>本文作者：张凯强<br>原文地址：<a href="https://hexo.fluid-dev.com/posts/fluid-footer-custom/" target="_blank">https://hexo.fluid-dev.com/posts/fluid-footer-custom/</a></p><p>Fluid 1.8.4 版本支持自定义页脚内容了，群友常改的网站运行时长，这次无需再修改源代码。</p><p>只需要在主题配置中的 <code>footer: content</code> 添加：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml">footer:<br>  content: &#x27;<br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://hexo.io&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;nofollow noopener&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>Hexo<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-love&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://github.com/fluid-dev/hexo-theme-fluid&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;nofollow noopener&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>Fluid<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size: 0.85rem&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;timeDate&quot;</span>&gt;</span>载入天数...<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;times&quot;</span>&gt;</span>载入时分秒...<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/duration.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  &#x27;<br></code></pre></td></tr></table></figure><p><code>content</code> 前三行是 Fluid 原有的页脚内容，建议不要删除，可稍作修改，保留 Fluid 的超链接，用于向更多人推广主题。</p><p><code>duration.js</code> 包含的才是功能代码，我们在博客目录下创建 <code>source/js/duration.js</code>，内容如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs javascript">!(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-comment">/** 计时起始时间，自行修改 **/</span><br>  <span class="hljs-keyword">var</span> start = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-string">&quot;2020/01/01 00:00:00&quot;</span>);<br><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">update</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> now = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();<br>    now.<span class="hljs-title function_">setTime</span>(now.<span class="hljs-title function_">getTime</span>()+<span class="hljs-number">250</span>);<br>    days = (now - start) / <span class="hljs-number">1000</span> / <span class="hljs-number">60</span> / <span class="hljs-number">60</span> / <span class="hljs-number">24</span>;<br>    dnum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(days);<br>    hours = (now - start) / <span class="hljs-number">1000</span> / <span class="hljs-number">60</span> / <span class="hljs-number">60</span> - (<span class="hljs-number">24</span> * dnum);<br>    hnum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(hours);<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title class_">String</span>(hnum).<span class="hljs-property">length</span> === <span class="hljs-number">1</span> )&#123;<br>      hnum = <span class="hljs-string">&quot;0&quot;</span> + hnum;<br>    &#125;<br>    minutes = (now - start) / <span class="hljs-number">1000</span> /<span class="hljs-number">60</span> - (<span class="hljs-number">24</span> * <span class="hljs-number">60</span> * dnum) - (<span class="hljs-number">60</span> * hnum);<br>    mnum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(minutes);<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title class_">String</span>(mnum).<span class="hljs-property">length</span> === <span class="hljs-number">1</span> )&#123;<br>      mnum = <span class="hljs-string">&quot;0&quot;</span> + mnum;<br>    &#125;<br>    seconds = (now - start) / <span class="hljs-number">1000</span> - (<span class="hljs-number">24</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * dnum) - (<span class="hljs-number">60</span> * <span class="hljs-number">60</span> * hnum) - (<span class="hljs-number">60</span> * mnum);<br>    snum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(seconds);<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title class_">String</span>(snum).<span class="hljs-property">length</span> === <span class="hljs-number">1</span> )&#123;<br>      snum = <span class="hljs-string">&quot;0&quot;</span> + snum;<br>    &#125;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;timeDate&quot;</span>).<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&quot;本站安全运行&amp;nbsp&quot;</span>+dnum+<span class="hljs-string">&quot;&amp;nbsp天&quot;</span>;<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;times&quot;</span>).<span class="hljs-property">innerHTML</span> = hnum + <span class="hljs-string">&quot;&amp;nbsp小时&amp;nbsp&quot;</span> + mnum + <span class="hljs-string">&quot;&amp;nbsp分&amp;nbsp&quot;</span> + snum + <span class="hljs-string">&quot;&amp;nbsp秒&quot;</span>;<br>  &#125;<br><br>  <span class="hljs-title function_">update</span>();<br>  <span class="hljs-built_in">setInterval</span>(update, <span class="hljs-number">1000</span>);<br>&#125;)();<br></code></pre></td></tr></table></figure><p>不要忘记把上面注释的时间改为自己的时间，至此这项功能就引入到 <code>&lt;footer&gt;</code> 里了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p class=&quot;note note-success&quot;&gt;
本文转载自 Fluid 官方博客文章，版权归原作者所有。&lt;br&gt;
本文作者：张凯强&lt;br&gt;
原文地址：&lt;a href=&quot;https://hexo.fluid-dev.com/posts/fluid-footer-cust</summary>
      
    
    
    
    <category term="博客配置" scheme="https://blog.jishuqin.cn/categories/%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="Fluid" scheme="https://blog.jishuqin.cn/tags/Fluid/"/>
    
  </entry>
  
  <entry>
    <title>Cloudreve映射WebDav</title>
    <link href="https://blog.jishuqin.cn/posts/cbe4867c/"/>
    <id>https://blog.jishuqin.cn/posts/cbe4867c/</id>
    <published>2023-03-04T01:57:00.000Z</published>
    <updated>2024-03-23T13:03:18.583Z</updated>
    
    <content type="html"><![CDATA[<h1>一、前言</h1><p>WebDAV 是一种基于 HTTP 协议的文件传输协议，如今有许多第三方文件管理器、视频播放器等产品都支持通过 WebDAV 协议访问 Cloudreve 中的文件，你可以借此实现跨平台的文件共享与同步。</p><h1>二、添加权限</h1><p>登录网盘进入管理面板，点击左侧用户组，点击编辑按钮为对应用户组开启WebDAV协议连接网盘功能。</p><p><img src="https://cdn.gumengyo.top/Snipaste_2023-03-04_10-11-06.png" srcset="/img/loading.gif" lazyload alt=""></p><p>勾选WebDAV选项<br><img src="https://cdn.gumengyo.top/202303041014548.png" srcset="/img/loading.gif" lazyload alt=""></p><p>返回主页，点击左侧连接，创建一个WebDAV账号。</p><p><img src="https://cdn.gumengyo.top//202303041028287.png" srcset="/img/loading.gif" lazyload alt=""></p><h1>三、windows端</h1><h4 id="1-打开windows端的注册表">1. 打开windows端的注册表</h4><p><img src="https://cdn.gumengyo.top//202303041032382.png" srcset="/img/loading.gif" lazyload alt=""></p><h4 id="2-访问路径（复制连接粘贴到搜索框按回车即可）：">2.访问路径（复制连接粘贴到搜索框按回车即可）：</h4><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs moonscript">计算机\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\WebClient\Parameters<br></code></pre></td></tr></table></figure><h4 id="3-把BasicAuthLevel-值改成2，即同时支持http和https，默认只支持https传输协议。">3.把BasicAuthLevel 值改成2，即同时支持http和https，默认只支持https传输协议。</h4><p><img src="https://cdn.gumengyo.top//202303041037097.png" srcset="/img/loading.gif" lazyload alt=""></p><h4 id="4-删除同目录下的-FileSizeLimitInBytes，此操作是为了开放下载大小。">4.删除同目录下的 FileSizeLimitInBytes，此操作是为了开放下载大小。</h4><p><img src="https://cdn.gumengyo.top//202303041039964.png" srcset="/img/loading.gif" lazyload alt=""></p><h4 id="5-在当前目录新建-FileSizeLimitInBytes">5.在当前目录新建 FileSizeLimitInBytes</h4><p>右键修改 十六进制 <span class="label label-primary">ffffffffffffffff</span></p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://cdn.gumengyo.top//202303041044710.png" srcset="/img/loading.gif" lazyload alt=""></div><div class="group-image-wrap"><img src="https://cdn.gumengyo.top/2023-03-03_22-16-16.png" srcset="/img/loading.gif" lazyload alt=""></div></div></div><h4 id="6-打开服务-找到WebClient">6.打开服务 找到WebClient</h4><p>设置为自动启动，并且点击停止 点击启动</p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://cdn.gumengyo.top//202303041058766.png" srcset="/img/loading.gif" lazyload alt=""></div><div class="group-image-wrap"><img src="https://cdn.gumengyo.top//202303041058742.png" srcset="/img/loading.gif" lazyload alt=""></div></div></div><h1>四、映射网络驱动器</h1><p>打开我的电脑，点击映射网络驱动器。<br><img src="https://cdn.gumengyo.top//202303041101387.png" srcset="/img/loading.gif" lazyload alt=""><br>填入创建WebDAV账号页面的WebDAV地址。<br><img src="https://cdn.gumengyo.top//202303041103489.png" srcset="/img/loading.gif" lazyload alt=""><br>填入账号密码连接到网盘。<br><img src="https://cdn.gumengyo.top//2023-03-04_11-05-51.png" srcset="/img/loading.gif" lazyload alt=""><br>查看效果<br><img src="https://cdn.gumengyo.top//202303041106329.png" srcset="/img/loading.gif" lazyload alt=""></p><p>到这Cloudreve映射WebDav就配置完成了，希望对您有所帮助~</p>]]></content>
    
    
    <summary type="html">这篇文章介绍了如何使用WebDAV协议访问Cloudreve中的文件，实现跨平台的文件共享与同步。首先，需要登录网盘管理面板，并为用户组开启WebDAV协议连接功能。然后，在Windows端需要打开注册表，找到WebClient的路径，并将BasicAuthLevel的值改为2，以同时支持http和https传输协议。还需要删除FileSizeLimitInBytes，以开放下载大小。</summary>
    
    
    
    <category term="服务配置" scheme="https://blog.jishuqin.cn/categories/%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="Cloudreve" scheme="https://blog.jishuqin.cn/tags/Cloudreve/"/>
    
  </entry>
  
  <entry>
    <title>Cloudreve部署配置</title>
    <link href="https://blog.jishuqin.cn/posts/d8e2f4a6/"/>
    <id>https://blog.jishuqin.cn/posts/d8e2f4a6/</id>
    <published>2023-03-02T11:21:00.000Z</published>
    <updated>2025-08-27T03:20:31.435Z</updated>
    
    <content type="html"><![CDATA[<h1>一、前言</h1><p>Cloudreve 可以让您快速搭建起公私兼备的网盘系统。Cloudreve 在底层支持不同的云存储平台，用户在实际使用时无须关心物理存储方式。你可以使用 Cloudreve 搭建个人用网盘、文件分享系统，亦或是针对大小团体的公有云系统。拥有一个自己的网盘，保存文件下载文件将非常方便。</p><p><img src="https://cdn.gumengyo.top/2023-03-03_21-10-31.png" srcset="/img/loading.gif" lazyload alt=""></p><h1>二、安装Cloudreve</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 新建一个文件夹存放程序</span><br><span class="hljs-built_in">mkdir</span> /www/wwwroot/cloudreve <br><br><span class="hljs-comment">#进入该文件夹</span><br><span class="hljs-built_in">cd</span> /www/wwwroot/cloudreve<br><br><span class="hljs-comment"># 下载对应资源包（选择对应系统版本的资源包）</span><br>wget https://github.com/cloudreve/Cloudreve/releases/download/3.7.1/cloudreve_3.7.1_linux_amd64.tar.gz<br><br><span class="hljs-comment"># 解压获取到的主程序</span><br>tar -zxvf cloudreve_3.7.1_linux_amd64.tar.gz<br><br><span class="hljs-comment"># 赋予执行权限</span><br><span class="hljs-built_in">chmod</span> +x ./cloudreve<br><br><span class="hljs-comment"># 启动 Cloudreve</span><br>./cloudreve<br></code></pre></td></tr></table></figure><p class="note note-warning">注意Cloudreve首次启动时，会创建初始管理员账号和密码，只有首次启动时才会出现，所以这里需要保存好账号密码，后边登录系统时使用。</p><h1>三、进程守护</h1><p>可以使用Systemd或Supervisor守护进程，下边介绍使用Systemd，可以参考<a href="https://docs.cloudreve.org/getting-started/install#jin-cheng-shou-hu">官方文档</a>。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 编辑配置文件</span><br>vim <span class="hljs-regexp">/usr/</span>lib<span class="hljs-regexp">/systemd/</span>system/cloudreve.service<br></code></pre></td></tr></table></figure><p>将下文 PATH_TO_CLOUDREVE 更换为程序所在目录：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=Cloudreve<br><span class="hljs-attr">Documentation</span>=https://docs.cloudreve.org<br><span class="hljs-attr">After</span>=network.target<br><span class="hljs-attr">After</span>=mysqld.service<br><span class="hljs-attr">Wants</span>=network.target<br><br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">WorkingDirectory</span>=/PATH_TO_CLOUDREVE<br><span class="hljs-attr">ExecStart</span>=/PATH_TO_CLOUDREVE/cloudreve<br><span class="hljs-attr">Restart</span>=<span class="hljs-literal">on</span>-abnormal<br><span class="hljs-attr">RestartSec</span>=<span class="hljs-number">5</span>s<br><span class="hljs-attr">KillMode</span>=mixed<br><br><span class="hljs-attr">StandardOutput</span>=null<br><span class="hljs-attr">StandardError</span>=syslog<br><br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure><p>更新配置</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs nsis"><span class="hljs-comment"># 更新配置</span><br><span class="hljs-params">system</span>ctl daemon-reload<br><br><span class="hljs-comment"># 启动服务</span><br><span class="hljs-params">system</span>ctl start cloudreve<br><br><span class="hljs-comment"># 设置开机启动</span><br><span class="hljs-params">system</span>ctl enable cloudreve<br></code></pre></td></tr></table></figure><p>管理命令：</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs nsis"><span class="hljs-comment"># 启动服务</span><br><span class="hljs-params">system</span>ctl start cloudreve<br><br><span class="hljs-comment"># 停止服务</span><br><span class="hljs-params">system</span>ctl stop cloudreve<br><br><span class="hljs-comment"># 重启服务</span><br><span class="hljs-params">system</span>ctl restart cloudreve<br><br><span class="hljs-comment"># 查看状态</span><br><span class="hljs-params">system</span>ctl status cloudreve<br></code></pre></td></tr></table></figure><h1>四、使用Nginx Proxy Manager反向代理</h1><p>配置反向代理需要有一个自己的域名，并解析到启动Cloudreve的服务器。</p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://cdn.gumengyo.top/2023-03-03_22-11-03.png" srcset="/img/loading.gif" lazyload alt=""></div><div class="group-image-wrap"><img src="https://cdn.gumengyo.top/2023-03-03_22-16-16.png" srcset="/img/loading.gif" lazyload alt=""></div></div></div><h1>五、系统配置</h1><ol><li>访问上边配置反向代理的域名进入系统登录页面，使用首次启动系统生成的账户名和密码登录系统。</li></ol><p><img src="https://cdn.gumengyo.top/cloudreve4.png" srcset="/img/loading.gif" lazyload alt=""></p><ol start="2"><li>点击用户头像，进入管理面板。<br><img src="https://cdn.gumengyo.top/cloudreve5.png" srcset="/img/loading.gif" lazyload alt=""></li><li>点击用户界面，设置你自己的账号密码。<br><img src="https://cdn.gumengyo.top/cloudreve6.png" srcset="/img/loading.gif" lazyload alt=""></li></ol><p class="note note-info">默认存储策略是保存到系统本地，想配置七牛云存储、腾讯云COS等云存储，点击添加存储策略，选择对应的存储服务会有详细的配置说明。</p><p><img src="https://cdn.gumengyo.top/cloudreve7.png" srcset="/img/loading.gif" lazyload alt=""></p><p>到这cloudreve基本搭建完成啦，试试上传文件到网盘吧~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;一、前言&lt;/h1&gt;
&lt;p&gt;Cloudreve 可以让您快速搭建起公私兼备的网盘系统。Cloudreve 在底层支持不同的云存储平台，用户在实际使用时无须关心物理存储方式。你可以使用 Cloudreve 搭建个人用网盘、文件分享系统，亦或是针对大小团体的公有云系统。拥有一个</summary>
      
    
    
    
    <category term="服务配置" scheme="https://blog.jishuqin.cn/categories/%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="Cloudreve" scheme="https://blog.jishuqin.cn/tags/Cloudreve/"/>
    
  </entry>
  
</feed>
